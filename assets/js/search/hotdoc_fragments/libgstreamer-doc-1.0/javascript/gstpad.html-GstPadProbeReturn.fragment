fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/javascript/gstpad.html#GstPadProbeReturn", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstPadProbeReturn\">\n\t\t<h3 id=\"gstpadprobereturn\">\n\t\tGst.PadProbeReturn\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\ntypedef enum\n{\n  GST_PAD_PROBE_DROP,\n  GST_PAD_PROBE_OK,\n  GST_PAD_PROBE_REMOVE,\n  GST_PAD_PROBE_PASS,\n  GST_PAD_PROBE_HANDLED\n} GstPadProbeReturn;\n</pre>\n\n<p>Different return values for the <a href=\"../../libgstreamer-doc-1.0/javascript/gstpad.html#GstPadProbeCallback\">Gst.PadProbeCallback</a>.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members6\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_PROBE_DROP\"></a>\n\t\tGst.PadProbeReturn.prototype.drop\n\t\t</p>\n\t</td>\n\t<td><p>drop data in data probes. For push mode this means that\nthe data item is not sent downstream. For pull mode, it means that\nthe data item is not passed upstream. In both cases, no other probes\nare called for this item and <a href=\"../../libgstreamer-doc-1.0/javascript/gstpad.html#GST_FLOW_OK\">Gst.FlowReturn.prototype.ok</a> or <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">true</a> is returned to the\ncaller.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_PROBE_OK\"></a>\n\t\tGst.PadProbeReturn.prototype.ok\n\t\t</p>\n\t</td>\n\t<td><p>normal probe return value. This leaves the probe in\nplace, and defers decisions about dropping or passing data to other\nprobes, if any. If there are no other probes, the default behaviour\nfor the probe type applies ('block' for blocking probes,\nand 'pass' for non-blocking probes).</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_PROBE_REMOVE\"></a>\n\t\tGst.PadProbeReturn.prototype.remove\n\t\t</p>\n\t</td>\n\t<td><p>remove this probe.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_PROBE_PASS\"></a>\n\t\tGst.PadProbeReturn.prototype.pass\n\t\t</p>\n\t</td>\n\t<td><p>pass the data item in the block probe and block on the\nnext item.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 3</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_PROBE_HANDLED\"></a>\n\t\tGst.PadProbeReturn.prototype.handled\n\t\t</p>\n\t</td>\n\t<td><p>Data has been handled in the probe and will not be\nforwarded further. For events and buffers this is the same behaviour as\n<a href=\"../../libgstreamer-doc-1.0/javascript/gstpad.html#GST_PAD_PROBE_DROP\">Gst.PadProbeReturn.prototype.drop</a> (except that in this case you need to unref the buffer\nor event yourself). For queries it will also return <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">true</a> to the caller.\nThe probe can also modify the <a href=\"../../gst-plugins-bad-plugins-doc-1.0/javascript/element-errorignore.html#GstFlowReturn\">Gst.FlowReturn</a> value by using the\n<a href=\"../../libgstreamer-doc-1.0/c/gstpad.html#GST_PAD_PROBE_INFO_FLOW_RETURN\">GST_PAD_PROBE_INFO_FLOW_RETURN (not introspectable)</a>() accessor.\nNote that the resulting query must contain valid entries.\nSince: 1.6</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n"});