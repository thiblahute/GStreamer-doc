fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/javascript/gstpipeline.html#gst_pipeline_set_latency", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_pipeline_set_latency\">\n\t\t<h3 id=\"gstpipelineprototypeset_latency\">\n\t<span><code>Gst.Pipeline.prototype.set_latency</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\nfunction Gst.Pipeline.prototype.set_latency(latency: <a title=\"Gst.ClockTime\" href=\"../../gst-plugins-base-audio-doc-1.0/javascript/gstaudioclock.html#GstClockTime\">Gst.ClockTime</a>): {\n    // javascript wrapper for 'gst_pipeline_set_latency'\n}</pre>\n\n<p>Sets the latency that should be configured on the pipeline. Setting\nGST_CLOCK_TIME_NONE will restore the default behaviour of using the minimum\nlatency from the LATENCY query. Setting this is usually not required and\nthe pipeline will figure out an appropriate latency automatically.</p>\n<p>Setting a too low latency, especially lower than the minimum latency from\nthe LATENCY query, will most likely cause the pipeline to fail.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters9\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pipeline:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstreamer-doc-1.0/javascript/gstpipeline.html#GstPipeline\">Gst.Pipeline</a></p>\n</td>\n<td>\n<a title=\"Gst.Pipeline\" href=\"../../libgstreamer-doc-1.0/javascript/gstpipeline.html#GstPipeline\">Gst.Pipeline</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>latency:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>latency to configure</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"../../gst-plugins-base-audio-doc-1.0/javascript/gstaudioclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n\n\n"});