fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/javascript/gstbufferpool.html#GstBufferPoolAcquireFlags", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBufferPoolAcquireFlags\">\n\t\t<h3 id=\"gstbufferpoolacquireflags\">\n\t\tGst.BufferPoolAcquireFlags\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\ntypedef enum {\n  GST_BUFFER_POOL_ACQUIRE_FLAG_NONE     = 0,\n  GST_BUFFER_POOL_ACQUIRE_FLAG_KEY_UNIT = (1 &lt;&lt; 0),\n  GST_BUFFER_POOL_ACQUIRE_FLAG_DONTWAIT = (1 &lt;&lt; 1),\n  GST_BUFFER_POOL_ACQUIRE_FLAG_DISCONT  = (1 &lt;&lt; 2),\n  GST_BUFFER_POOL_ACQUIRE_FLAG_LAST     = (1 &lt;&lt; 16),\n} GstBufferPoolAcquireFlags;\n</pre>\n\n<p>Additional flags to control the allocation of a buffer</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_POOL_ACQUIRE_FLAG_NONE\"></a>\n\t\tGst.BufferPoolAcquireFlags.prototype.none\n\t\t</p>\n\t</td>\n\t<td><p>no flags</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_POOL_ACQUIRE_FLAG_KEY_UNIT\"></a>\n\t\tGst.BufferPoolAcquireFlags.prototype.key_unit\n\t\t</p>\n\t</td>\n\t<td><p>buffer is keyframe</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_POOL_ACQUIRE_FLAG_DONTWAIT\"></a>\n\t\tGst.BufferPoolAcquireFlags.prototype.dontwait\n\t\t</p>\n\t</td>\n\t<td><p>when the bufferpool is empty, acquire_buffer\nwill by default block until a buffer is released into the pool again. Setting\nthis flag makes acquire_buffer return <a href=\"../../libgstreamer-doc-1.0/javascript/gstpad.html#GST_FLOW_EOS\">Gst.FlowReturn.prototype.eos</a> instead of blocking.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_POOL_ACQUIRE_FLAG_DISCONT\"></a>\n\t\tGst.BufferPoolAcquireFlags.prototype.discont\n\t\t</p>\n\t</td>\n\t<td><p>buffer is discont</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_POOL_ACQUIRE_FLAG_LAST\"></a>\n\t\tGst.BufferPoolAcquireFlags.prototype.last\n\t\t</p>\n\t</td>\n\t<td><p>last flag, subclasses can use private flags\nstarting from this value.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 65536</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});