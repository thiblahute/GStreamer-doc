fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/javascript/gstbuffer.html#GstBufferPool:::release_buffer", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBufferPool:::release_buffer\">\n\t\t<h3 id=\"release_buffer\">\n\t<span><code>release_buffer</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\nfunction release_buffer(pool: <a title=\"Gst.BufferPool\" href=\"../../libgstreamer-doc-1.0/javascript/gstbuffer.html#GstBufferPool\">Gst.BufferPool</a>, buffer: <a title=\"Gst.Buffer\" href=\"../../libgstreamer-doc-1.0/javascript/gstbuffer.html#GstBuffer\">Gst.Buffer</a>): {\n    // javascript implementation of the 'release_buffer' virtual method\n}</pre>\n\n<p>release a buffer back in the pool. The default\nimplementation will put the buffer back in the queue and notify any\nblocking acquire_buffer calls when the <a href=\"../../libgstreamer-doc-1.0/javascript/gstbuffer.html#GST_BUFFER_FLAG_TAG_MEMORY\">Gst.BufferFlags.prototype.tag_memory</a>\nis not set on the buffer. If <a href=\"../../libgstreamer-doc-1.0/javascript/gstbuffer.html#GST_BUFFER_FLAG_TAG_MEMORY\">Gst.BufferFlags.prototype.tag_memory</a> is set, the\nbuffer will be freed with <em>free_buffer</em>.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters84\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pool:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.BufferPool\" href=\"../../libgstreamer-doc-1.0/javascript/gstbuffer.html#GstBufferPool\">Gst.BufferPool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>buffer:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.Buffer\" href=\"../../libgstreamer-doc-1.0/javascript/gstbuffer.html#GstBuffer\">Gst.Buffer</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});