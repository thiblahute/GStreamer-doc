fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/javascript/gstelementfactory.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstelementfactory.h\">\n<h1 id=\"gstelementfactory\">GstElementFactory</h1><p><a href=\"../../libgstreamer-doc-1.0/gstelementfactory.html#GstElementFactory\">Gst.ElementFactory</a> is used to create instances of elements. A\nGstElementFactory can be added to a <a href=\"../../libgstreamer-doc-1.0/gstplugin.html#GstPlugin\">Gst.Plugin</a> as it is also a\n<a href=\"../../libgstreamer-doc-1.0/gstpluginfeature.html#GstPluginFeature\">Gst.PluginFeature</a>.</p>\n<p>Use the <a href=\"../../libgstreamer-doc-1.0/gstelementfactory.html#gst_element_factory_find\">Gst.ElementFactory.prototype.find</a> and <a href=\"../../libgstreamer-doc-1.0/gstelementfactory.html#gst_element_factory_create\">Gst.ElementFactory.prototype.create</a>\nfunctions to create element instances or use <a href=\"../../libgstreamer-doc-1.0/gstelementfactory.html#gst_element_factory_make\">Gst.ElementFactory.prototype.make</a> as a\nconvenient shortcut.</p>\n<p>The following code example shows you how to create a GstFileSrc element.</p>\n<h2 id=\"using-an-element-factory\">Using an element factory</h2>\n<pre><code class=\"language-[&lt;!--\">   #include &amp;lt;gst/gst.h&amp;gt;\n\n   GstElement *src;\n   GstElementFactory *srcfactory;\n\n   gst_init (&amp;amp;argc, &amp;amp;argv);\n\n   srcfactory = gst_element_factory_find (\"filesrc\");\n   g_return_if_fail (srcfactory != NULL);\n   src = gst_element_factory_create (srcfactory, \"src\");\n   g_return_if_fail (src != NULL);\n   ...\n</code></pre>\n\n</div>\n\n\n"});