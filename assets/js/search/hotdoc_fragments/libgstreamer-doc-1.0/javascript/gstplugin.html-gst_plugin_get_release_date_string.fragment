fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/javascript/gstplugin.html#gst_plugin_get_release_date_string", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_plugin_get_release_date_string\">\n\t\t<h3 id=\"gstpluginprototypeget_release_date_string\">\n\t<span><code>Gst.Plugin.prototype.get_release_date_string</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\nfunction Gst.Plugin.prototype.get_release_date_string(): {\n    // javascript wrapper for 'gst_plugin_get_release_date_string'\n}</pre>\n\n<p>Get the release date (and possibly time) in form of a string, if available.</p>\n<p>For normal GStreamer plugin releases this will usually just be a date in\nthe form of \"YYYY-MM-DD\", while pre-releases and builds from git may contain\na time component after the date as well, in which case the string will be\nformatted like \"YYYY-MM-DDTHH:MMZ\" (e.g. \"2012-04-30T09:30Z\").</p>\n<p>There may be plugins that do not have a valid release date set on them.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters10\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>plugin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>plugin to get the release date of</p>\n</td>\n<td>\nint \n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns11\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the date string of the plugin, or <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null\">null</a> if not\navailable.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"String\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});