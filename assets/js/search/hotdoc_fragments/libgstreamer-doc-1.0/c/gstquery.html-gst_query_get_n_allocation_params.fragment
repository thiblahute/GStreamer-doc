fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstquery.html#gst_query_get_n_allocation_params", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_query_get_n_allocation_params\">\n\t\t<h3 id=\"gst_query_get_n_allocation_params1\">\n\t<span><code>gst_query_get_n_allocation_params</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a>\ngst_query_get_n_allocation_params (<a title=\"GstQuery\" href=\"gstquery.html#GstQuery\">GstQuery</a> * query)</pre>\n\n<p>Retrieve the number of values currently stored in the\nallocator params array of the query's structure.</p>\n<p>If no memory allocator is specified, the downstream element can handle\nthe default memory allocator. The first memory allocator in the query\nshould be generic and allow mapping to system memory, all following\nallocators should be ordered by preference with the preferred one first.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters18\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>query:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a GST_QUERY_ALLOCATION type query <a href=\"gstquery.html#GstQuery\">GstQuery</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns19\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the allocator array size as a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});