fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gsterror.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gsterror.h\">\n<h1 id=\"gsterror\">GstError</h1><p>GStreamer elements can throw non-fatal warnings and fatal errors.\nHigher-level elements and applications can programmatically filter\nthe ones they are interested in or can recover from,\nand have a default handler handle the rest of them.</p>\n<p>The rest of this section will use the term <quote>error</quote>\nto mean both (non-fatal) warnings and (fatal) errors; they are treated\nsimilarly.</p>\n<p>Errors from elements are the combination of a <a href=\"https://developer.gnome.org/glib/unstable/glib-Error-Reporting.html#GError\">GError</a> and a debug string.\nThe <a href=\"https://developer.gnome.org/glib/unstable/glib-Error-Reporting.html#GError\">GError</a> contains:</p>\n<ul>\n<li>a domain type: CORE, LIBRARY, RESOURCE or STREAM</li>\n<li>a code: an enum value specific to the domain</li>\n<li>a translated, human-readable message</li>\n<li>a non-translated additional debug string, which also contains</li>\n<li>file and line information</li>\n</ul>\n<p>Elements do not have the context required to decide what to do with\nerrors.  As such, they should only inform about errors, and stop their\nprocessing.  In short, an element doesn't know what it is being used for.</p>\n<p>It is the application or compound element using the given element that\nhas more context about the use of the element. Errors can be received by\nlistening to the <a href=\"gstbus.html#GstBus\">GstBus</a> of the element/pipeline for <a href=\"gstmessage.html#GstMessage\">GstMessage</a> objects with\nthe type <a href=\"gstmessage.html#GST_MESSAGE_ERROR\">GST_MESSAGE_ERROR</a> or <a href=\"gstmessage.html#GST_MESSAGE_WARNING\">GST_MESSAGE_WARNING</a>. The thrown errors should\nbe inspected, and filtered if appropriate.</p>\n<p>An application is expected to, by default, present the user with a\ndialog box (or an equivalent) showing the error message.  The dialog\nshould also allow a way to get at the additional debug information,\nso the user can provide bug reporting information.</p>\n<p>A compound element is expected to forward errors by default higher up\nthe hierarchy; this is done by default in the same way as for other types\nof <a href=\"gstmessage.html#GstMessage\">GstMessage</a>.</p>\n<p>When applications or compound elements trigger errors that they can\nrecover from, they can filter out these errors and take appropriate action.\nFor example, an application that gets an error from xvimagesink\nthat indicates all XVideo ports are taken, the application can attempt\nto use another sink instead.</p>\n<p>Elements throw errors using the <a href=\"gstelement.html#GST_ELEMENT_ERROR\">GST_ELEMENT_ERROR</a> convenience macro:</p>\n<h2 id=\"throwing-an-error\">Throwing an error</h2>\n<pre><code class=\"language-|[\">     GST_ELEMENT_ERROR (src, RESOURCE, NOT_FOUND,\n       (_(\"No file name specified for reading.\")), (NULL));\n</code></pre>\n<p>Things to keep in mind:</p>\n<ul>\n<li>\n<p>Don't go off inventing new error codes.  The ones\ncurrently provided should be enough.  If you find your type of error\ndoes not fit the current codes, you should use FAILED.</p>\n</li>\n<li>\n<p>Don't provide a message if the default one suffices.\nthis keeps messages more uniform.  Use (%NULL) - not forgetting the\nparentheses.</p>\n</li>\n<li>\n<p>If you do supply a custom message, it should be\nmarked for translation.  The message should start with a capital\nand end with a period.  The message should describe the error in short,\nin a human-readable form, and without any complex technical terms.\nA user interface will present this message as the first thing a user\nsees.  Details, technical info, ... should go in the debug string.</p>\n</li>\n<li>\n<p>The debug string can be as you like.  Again, use (%NULL)\nif there's nothing to add - file and line number will still be\npassed.  <a href=\"gsterror.html#GST_ERROR_SYSTEM\">GST_ERROR_SYSTEM</a> can be used as a shortcut to give\ndebug information on a system call error.</p>\n</li>\n</ul>\n\n</div>\n\n\n"});