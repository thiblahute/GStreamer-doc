fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstevent.html#GstEventType", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstEventType\">\n\t\t<h3 id=\"gsteventtype\">\n\t\tGstEventType\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\ntypedef enum {\n  GST_EVENT_UNKNOWN               = GST_EVENT_MAKE_TYPE (0, 0),\n\n  /* bidirectional events */\n  GST_EVENT_FLUSH_START           = GST_EVENT_MAKE_TYPE (10, FLAG(BOTH)),\n  GST_EVENT_FLUSH_STOP            = GST_EVENT_MAKE_TYPE (20, FLAG(BOTH) | FLAG(SERIALIZED)),\n\n  /* downstream serialized events */\n  GST_EVENT_STREAM_START          = GST_EVENT_MAKE_TYPE (40, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY)),\n  GST_EVENT_CAPS                  = GST_EVENT_MAKE_TYPE (50, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY)),\n  GST_EVENT_SEGMENT               = GST_EVENT_MAKE_TYPE (70, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY)),\n  GST_EVENT_STREAM_COLLECTION     = GST_EVENT_MAKE_TYPE (75, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY) | FLAG(STICKY_MULTI)),\n  GST_EVENT_TAG                   = GST_EVENT_MAKE_TYPE (80, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY) | FLAG(STICKY_MULTI)),\n  GST_EVENT_BUFFERSIZE            = GST_EVENT_MAKE_TYPE (90, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY)),\n  GST_EVENT_SINK_MESSAGE          = GST_EVENT_MAKE_TYPE (100, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY) | FLAG(STICKY_MULTI)),\n  GST_EVENT_STREAM_GROUP_DONE     = GST_EVENT_MAKE_TYPE (105, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY)),\n  GST_EVENT_EOS                   = GST_EVENT_MAKE_TYPE (110, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY)),\n  GST_EVENT_TOC                   = GST_EVENT_MAKE_TYPE (120, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY) | FLAG(STICKY_MULTI)),\n  GST_EVENT_PROTECTION            = GST_EVENT_MAKE_TYPE (130, FLAG (DOWNSTREAM) | FLAG (SERIALIZED) | FLAG (STICKY) | FLAG (STICKY_MULTI)),\n\n  /* non-sticky downstream serialized */\n  GST_EVENT_SEGMENT_DONE          = GST_EVENT_MAKE_TYPE (150, FLAG(DOWNSTREAM) | FLAG(SERIALIZED)),\n  GST_EVENT_GAP                   = GST_EVENT_MAKE_TYPE (160, FLAG(DOWNSTREAM) | FLAG(SERIALIZED)),\n\n  /* upstream events */\n  GST_EVENT_QOS                   = GST_EVENT_MAKE_TYPE (190, FLAG(UPSTREAM)),\n  GST_EVENT_SEEK                  = GST_EVENT_MAKE_TYPE (200, FLAG(UPSTREAM)),\n  GST_EVENT_NAVIGATION            = GST_EVENT_MAKE_TYPE (210, FLAG(UPSTREAM)),\n  GST_EVENT_LATENCY               = GST_EVENT_MAKE_TYPE (220, FLAG(UPSTREAM)),\n  GST_EVENT_STEP                  = GST_EVENT_MAKE_TYPE (230, FLAG(UPSTREAM)),\n  GST_EVENT_RECONFIGURE           = GST_EVENT_MAKE_TYPE (240, FLAG(UPSTREAM)),\n  GST_EVENT_TOC_SELECT            = GST_EVENT_MAKE_TYPE (250, FLAG(UPSTREAM)),\n  GST_EVENT_SELECT_STREAMS        = GST_EVENT_MAKE_TYPE (260, FLAG(UPSTREAM)),\n\n  /* custom events start here */\n  GST_EVENT_CUSTOM_UPSTREAM          = GST_EVENT_MAKE_TYPE (270, FLAG(UPSTREAM)),\n  GST_EVENT_CUSTOM_DOWNSTREAM        = GST_EVENT_MAKE_TYPE (280, FLAG(DOWNSTREAM) | FLAG(SERIALIZED)),\n  GST_EVENT_CUSTOM_DOWNSTREAM_OOB    = GST_EVENT_MAKE_TYPE (290, FLAG(DOWNSTREAM)),\n  GST_EVENT_CUSTOM_DOWNSTREAM_STICKY = GST_EVENT_MAKE_TYPE (300, FLAG(DOWNSTREAM) | FLAG(SERIALIZED) | FLAG(STICKY) | FLAG(STICKY_MULTI)),\n  GST_EVENT_CUSTOM_BOTH              = GST_EVENT_MAKE_TYPE (310, FLAG(BOTH) | FLAG(SERIALIZED)),\n  GST_EVENT_CUSTOM_BOTH_OOB          = GST_EVENT_MAKE_TYPE (320, FLAG(BOTH))\n} GstEventType;\n</pre>\n\n<p><a href=\"../../libgstreamer-doc-1.0/c/gstevent.html#GstEventType\">GstEventType</a> lists the standard event types that can be sent in a pipeline.</p>\n<p>The custom event types can be used for private messages between elements\nthat can't be expressed using normal\nGStreamer buffer passing semantics. Custom events carry an arbitrary\n<a href=\"../../libgstreamer-doc-1.0/c/gststructure.html#GstStructure\">GstStructure</a>.\nSpecific custom events are distinguished by the name of the structure.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_UNKNOWN\"></a>\n\t\tGST_EVENT_UNKNOWN\n\t\t</p>\n\t</td>\n\t<td><p>unknown event.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_FLUSH_START\"></a>\n\t\tGST_EVENT_FLUSH_START\n\t\t</p>\n\t</td>\n\t<td><p>Start a flush operation. This event clears all data\nfrom the pipeline and unblock all streaming threads.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2563</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_FLUSH_STOP\"></a>\n\t\tGST_EVENT_FLUSH_STOP\n\t\t</p>\n\t</td>\n\t<td><p>Stop a flush operation. This event resets the\nrunning-time of the pipeline.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 5127</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_STREAM_START\"></a>\n\t\tGST_EVENT_STREAM_START\n\t\t</p>\n\t</td>\n\t<td><p>Event to mark the start of a new stream. Sent before any\nother serialized event and only sent at the start of a new stream,\nnot after flushing seeks.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 10254</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CAPS\"></a>\n\t\tGST_EVENT_CAPS\n\t\t</p>\n\t</td>\n\t<td><p><a href=\"../../libgstreamer-doc-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> event. Notify the pad of a new media type.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 12814</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SEGMENT\"></a>\n\t\tGST_EVENT_SEGMENT\n\t\t</p>\n\t</td>\n\t<td><p>A new media segment follows in the dataflow. The\nsegment events contains information for clipping buffers and\nconverting buffer timestamps to running-time and\nstream-time.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 17934</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_STREAM_COLLECTION\"></a>\n\t\tGST_EVENT_STREAM_COLLECTION\n\t\t</p>\n\t</td>\n\t<td><p>A new <a href=\"../../libgstreamer-doc-1.0/c/gststreamcollection.html#GstStreamCollection\">GstStreamCollection</a> is available (Since 1.10)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 19230</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TAG\"></a>\n\t\tGST_EVENT_TAG\n\t\t</p>\n\t</td>\n\t<td><p>A new set of metadata tags has been found in the stream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 20510</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_BUFFERSIZE\"></a>\n\t\tGST_EVENT_BUFFERSIZE\n\t\t</p>\n\t</td>\n\t<td><p>Notification of buffering requirements. Currently not\nused yet.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 23054</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SINK_MESSAGE\"></a>\n\t\tGST_EVENT_SINK_MESSAGE\n\t\t</p>\n\t</td>\n\t<td><p>An event that sinks turn into a message. Used to\nsend messages that should be emitted in sync with\nrendering.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 25630</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_STREAM_GROUP_DONE\"></a>\n\t\tGST_EVENT_STREAM_GROUP_DONE\n\t\t</p>\n\t</td>\n\t<td><p>Indicates that there is no more data for\nthe stream group ID in the message. Sent before EOS\nin some instances and should be handled mostly the same. (Since 1.10)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 26894</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_EOS\"></a>\n\t\tGST_EVENT_EOS\n\t\t</p>\n\t</td>\n\t<td><p>End-Of-Stream. No more data is to be expected to follow\nwithout either a STREAM_START event, or a FLUSH_STOP and a SEGMENT\nevent.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 28174</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TOC\"></a>\n\t\tGST_EVENT_TOC\n\t\t</p>\n\t</td>\n\t<td><p>An event which indicates that a new table of contents (TOC)\nwas found or updated.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 30750</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_PROTECTION\"></a>\n\t\tGST_EVENT_PROTECTION\n\t\t</p>\n\t</td>\n\t<td><p>An event which indicates that new or updated\nencryption information has been found in the stream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 33310</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SEGMENT_DONE\"></a>\n\t\tGST_EVENT_SEGMENT_DONE\n\t\t</p>\n\t</td>\n\t<td><p>Marks the end of a segment playback.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 38406</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_GAP\"></a>\n\t\tGST_EVENT_GAP\n\t\t</p>\n\t</td>\n\t<td><p>Marks a gap in the datastream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 40966</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_QOS\"></a>\n\t\tGST_EVENT_QOS\n\t\t</p>\n\t</td>\n\t<td><p>A quality message. Used to indicate to upstream elements\nthat the downstream elements should adjust their processing\nrate.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 48641</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SEEK\"></a>\n\t\tGST_EVENT_SEEK\n\t\t</p>\n\t</td>\n\t<td><p>A request for a new playback position and rate.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 51201</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_NAVIGATION\"></a>\n\t\tGST_EVENT_NAVIGATION\n\t\t</p>\n\t</td>\n\t<td><p>Navigation events are usually used for communicating\nuser requests, such as mouse or keyboard movements,\nto upstream elements.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 53761</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_LATENCY\"></a>\n\t\tGST_EVENT_LATENCY\n\t\t</p>\n\t</td>\n\t<td><p>Notification of new latency adjustment. Sinks will use\nthe latency information to adjust their synchronisation.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 56321</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_STEP\"></a>\n\t\tGST_EVENT_STEP\n\t\t</p>\n\t</td>\n\t<td><p>A request for stepping through the media. Sinks will usually\nexecute the step operation.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 58881</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_RECONFIGURE\"></a>\n\t\tGST_EVENT_RECONFIGURE\n\t\t</p>\n\t</td>\n\t<td><p>A request for upstream renegotiating caps and reconfiguring.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 61441</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TOC_SELECT\"></a>\n\t\tGST_EVENT_TOC_SELECT\n\t\t</p>\n\t</td>\n\t<td><p>A request for a new playback position based on TOC\nentry's UID.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 64001</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SELECT_STREAMS\"></a>\n\t\tGST_EVENT_SELECT_STREAMS\n\t\t</p>\n\t</td>\n\t<td><p>A request to select one or more streams (Since 1.10)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 66561</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_UPSTREAM\"></a>\n\t\tGST_EVENT_CUSTOM_UPSTREAM\n\t\t</p>\n\t</td>\n\t<td><p>Upstream custom event</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 69121</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_DOWNSTREAM\"></a>\n\t\tGST_EVENT_CUSTOM_DOWNSTREAM\n\t\t</p>\n\t</td>\n\t<td><p>Downstream custom event that travels in the\ndata flow.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 71686</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_DOWNSTREAM_OOB\"></a>\n\t\tGST_EVENT_CUSTOM_DOWNSTREAM_OOB\n\t\t</p>\n\t</td>\n\t<td><p>Custom out-of-band downstream event.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 74242</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_DOWNSTREAM_STICKY\"></a>\n\t\tGST_EVENT_CUSTOM_DOWNSTREAM_STICKY\n\t\t</p>\n\t</td>\n\t<td><p>Custom sticky downstream event.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 76830</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_BOTH\"></a>\n\t\tGST_EVENT_CUSTOM_BOTH\n\t\t</p>\n\t</td>\n\t<td><p>Custom upstream or downstream event.\nIn-band when travelling downstream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 79367</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_BOTH_OOB\"></a>\n\t\tGST_EVENT_CUSTOM_BOTH_OOB\n\t\t</p>\n\t</td>\n\t<td><p>Custom upstream or downstream out-of-band event.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 81923</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n"});