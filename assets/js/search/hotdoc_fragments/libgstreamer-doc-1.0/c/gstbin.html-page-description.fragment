fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstbin.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstbin.h\">\n<h1 id=\"gstbin\">GstBin</h1><p><a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#GstBin\">GstBin</a> is an element that can contain other <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstElement.html#GstElement-struct\">GstElement</a>, allowing them to be\nmanaged as a group.\nPads from the child elements can be ghosted to the bin, see <a href=\"../../libgstreamer-doc-1.0/c/gstghostpad.html#GstGhostPad\">GstGhostPad</a>.\nThis makes the bin look like any other elements and enables creation of\nhigher-level abstraction elements.</p>\n<p>A new <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#GstBin\">GstBin</a> is created with <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#gst_bin_new\">gst_bin_new</a>. Use a <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstPipeline.html#GstPipeline-struct\">GstPipeline</a> instead if you\nwant to create a toplevel bin because a normal bin doesn't have a bus or\nhandle clock distribution of its own.</p>\n<p>After the bin has been created you will typically add elements to it with\n<a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#gst_bin_add\">gst_bin_add</a>. You can remove elements with <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#gst_bin_remove\">gst_bin_remove</a>.</p>\n<p>An element can be retrieved from a bin with <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#gst_bin_get_by_name\">gst_bin_get_by_name</a>, using the\nelements name. <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#gst_bin_get_by_name_recurse_up\">gst_bin_get_by_name_recurse_up</a> is mainly used for internal\npurposes and will query the parent bins when the element is not found in the\ncurrent bin.</p>\n<p>An iterator of elements in a bin can be retrieved with\n<a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#gst_bin_iterate_elements\">gst_bin_iterate_elements</a>. Various other iterators exist to retrieve the\nelements in a bin.</p>\n<p><a href=\"../../libgstreamer-doc-1.0/c/gstobject.html#gst_object_unref\">gst_object_unref</a> is used to drop your reference to the bin.</p>\n<p>The <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#GstBin::element-added\">GstBin::element-added</a> signal is fired whenever a new element is added to\nthe bin. Likewise the <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#GstBin::element-removed\">GstBin::element-removed</a> signal is fired whenever an\nelement is removed from the bin.</p>\n<h2 id=\"notes\">Notes</h2>\n<p>A <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#GstBin\">GstBin</a> internally intercepts every <a href=\"../../gst-plugins-base-pbutils-doc-1.0/c/missing-plugins.html#GstMessage\">GstMessage</a> posted by its children and\nimplements the following default behaviour for each of them:</p>\n<ul>\n<li>\n<p>GST_MESSAGE_EOS: This message is only posted by sinks in the PLAYING\nstate. If all sinks posted the EOS message, this bin will post and EOS\nmessage upwards.</p>\n</li>\n<li>\n<p>GST_MESSAGE_SEGMENT_START: Just collected and never forwarded upwards.\nThe messages are used to decide when all elements have completed playback\nof their segment.</p>\n</li>\n<li>\n<p>GST_MESSAGE_SEGMENT_DONE: Is posted by <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#GstBin\">GstBin</a> when all elements that posted\na SEGMENT_START have posted a SEGMENT_DONE.</p>\n</li>\n<li>\n<p>GST_MESSAGE_DURATION_CHANGED: Is posted by an element that detected a change\nin the stream duration. The default bin behaviour is to clear any\ncached duration values so that the next duration query will perform\na full duration recalculation. The duration change is posted to the\napplication so that it can refetch the new duration with a duration\nquery. Note that these messages can be posted before the bin is\nprerolled, in which case the duration query might fail.</p>\n</li>\n<li>\n<p>GST_MESSAGE_CLOCK_LOST: This message is posted by an element when it\ncan no longer provide a clock. The default bin behaviour is to\ncheck if the lost clock was the one provided by the bin. If so and\nthe bin is currently in the PLAYING state, the message is forwarded to\nthe bin parent.\nThis message is also generated when a clock provider is removed from\nthe bin. If this message is received by the application, it should\nPAUSE the pipeline and set it back to PLAYING to force a new clock\ndistribution.</p>\n</li>\n<li>\n<p>GST_MESSAGE_CLOCK_PROVIDE: This message is generated when an element\ncan provide a clock. This mostly happens when a new clock\nprovider is added to the bin. The default behaviour of the bin is to\nmark the currently selected clock as dirty, which will perform a clock\nrecalculation the next time the bin is asked to provide a clock.\nThis message is never sent tot the application but is forwarded to\nthe parent of the bin.</p>\n</li>\n<li>\n<p>OTHERS: posted upwards.</p>\n</li>\n</ul>\n<p>A <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#GstBin\">GstBin</a> implements the following default behaviour for answering to a\n<a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstQuery.html#GstQuery-struct\">GstQuery</a>:</p>\n<ul>\n<li>\n<p>GST_QUERY_DURATION:If the query has been asked before with the same format\nand the bin is a toplevel bin (ie. has no parent),\nuse the cached previous value. If no previous value was cached, the\nquery is sent to all sink elements in the bin and the MAXIMUM of all\nvalues is returned. If the bin is a toplevel bin the value is cached.\nIf no sinks are available in the bin, the query fails.</p>\n</li>\n<li>\n<p>GST_QUERY_POSITION:The query is sent to all sink elements in the bin and the\nMAXIMUM of all values is returned. If no sinks are available in the bin,\nthe query fails.</p>\n</li>\n<li>\n<p>OTHERS:the query is forwarded to all sink elements, the result\nof the first sink that answers the query successfully is returned. If no\nsink is in the bin, the query fails.</p>\n</li>\n</ul>\n<p>A <a href=\"../../libgstreamer-doc-1.0/c/gstbin.html#GstBin\">GstBin</a> will by default forward any event sent to it to all sink\n(#GST_EVENT_TYPE_DOWNSTREAM) or source (#GST_EVENT_TYPE_UPSTREAM) elements\ndepending on the event type.\nIf all the elements return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>, the bin will also return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>, else <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a>\nis returned. If no elements of the required type are in the bin, the event\nhandler will return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>.</p>\n\n</div>\n\n\n"});