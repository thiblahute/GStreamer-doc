fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstdebugutils.html#gst_debug_bin_to_dot_file", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_debug_bin_to_dot_file\">\n\t\t<h3 id=\"gst_debug_bin_to_dot_file1\">\n\t<span><code>gst_debug_bin_to_dot_file</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_debug_bin_to_dot_file (<a title=\"GstBin\" href=\"../../libgstreamer-doc-1.0/c/gstbin.html#GstBin\">GstBin</a> * bin,\n                           <a title=\"GstDebugGraphDetails\" href=\"../../libgstreamer-doc-1.0/c/gstdebugutils.html#GstDebugGraphDetails\">GstDebugGraphDetails</a> details,\n                           const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * file_name)</pre>\n\n<p>To aid debugging applications one can use this method to write out the whole\nnetwork of gstreamer elements that form the pipeline into an dot file.\nThis file can be processed with graphviz to get an image.\n<informalexample><programlisting>\ndot -Tpng -oimage.png graph_lowlevel.dot\n</programlisting></informalexample></p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters1\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the top-level pipeline that should be analyzed</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>file_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>output base filename (e.g. \"myplayer\")</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});