fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstplugin.html#gst_plugin_load", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_plugin_load\">\n\t\t<h3 id=\"gst_plugin_load1\">\n\t<span><code>gst_plugin_load</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstPlugin\" href=\"../../libgstreamer-doc-1.0/c/gstplugin.html#GstPlugin\">GstPlugin</a> *\ngst_plugin_load (<a title=\"GstPlugin\" href=\"../../libgstreamer-doc-1.0/c/gstplugin.html#GstPlugin\">GstPlugin</a> * plugin)</pre>\n\n<p>Loads <em>plugin</em>. Note that the <em>return value</em> is the loaded plugin; <em>plugin</em> is\nuntouched. The normal use pattern of this function goes like this:</p>\n<pre><code class=\"language-[\"> GstPlugin *loaded_plugin;\n loaded_plugin = gst_plugin_load (plugin);\n // presumably, we're no longer interested in the potentially-unloaded plugin\n gst_object_unref (plugin);\n plugin = loaded_plugin;\n</code></pre>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters15\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>plugin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>plugin to load</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns15\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a reference to a loaded plugin, or <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> on error.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPlugin\" href=\"../../libgstreamer-doc-1.0/c/gstplugin.html#GstPlugin\">GstPlugin</a> *\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});