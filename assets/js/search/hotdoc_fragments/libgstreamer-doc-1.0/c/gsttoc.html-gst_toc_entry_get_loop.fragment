fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gsttoc.html#gst_toc_entry_get_loop", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"gst_toc_entry_get_loop\">\n\t\t<h3 id=\"gst_toc_entry_get_loop1\">\n\t<span><code>gst_toc_entry_get_loop</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_toc_entry_get_loop (const <a title=\"GstTocEntry\" href=\"gsttoc.html#GstTocEntry\">GstTocEntry</a> * entry,\n                        <a title=\"GstTocLoopType\" href=\"gsttoc.html#GstTocLoopType\">GstTocLoopType</a> * loop_type,\n                        <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> * repeat_count)</pre>\n\n<p>Get <em>loop_type</em> and <em>repeat_count</em> values from the <em>entry</em> and write them into\nappropriate storages. Loops are e.g. used by sampled instruments. GStreamer\nis not automatically applying the loop. The application can process this\nmeta data and use it e.g. to send a seek-event to loop a section.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters12\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>entry:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p><a href=\"gsttoc.html#GstTocEntry\">GstTocEntry</a> to get values from.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>loop_type:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the storage for the loop_type\nvalue, leave <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> if not need.</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>repeat_count:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the storage for the repeat_count\nvalue, leave <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> if not need.</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns7\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if all non-%NULL storage pointers were filled with appropriate\nvalues, <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> otherwise.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.4\n\t\t</p>\n\n</div>\n\n\n\n"});