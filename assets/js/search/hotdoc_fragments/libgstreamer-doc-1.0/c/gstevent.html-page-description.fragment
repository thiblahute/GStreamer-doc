fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstevent.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstevent.h\">\n<h1 id=\"gstevent\">GstEvent</h1><p>The event class provides factory methods to construct events for sending\nand functions to query (parse) received events.</p>\n<p>Events are usually created with gst_event_new_*() which takes event-type\nspecific parameters as arguments.\nTo send an event application will usually use <a href=\"../../libgstreamer-doc-1.0/gstelement.html#gst_element_send_event\">gst_element_send_event</a> and\nelements will use <a href=\"../../libgstreamer-doc-1.0/gstpad.html#gst_pad_send_event\">gst_pad_send_event</a> or <a href=\"../../libgstreamer-doc-1.0/gstpad.html#gst_pad_push_event\">gst_pad_push_event</a>.\nThe event should be unreffed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstEvent.html#gst-event-unref\">gst_event_unref</a> if it has not been sent.</p>\n<p>Events that have been received can be parsed with their respective\ngst_event_parse_*() functions. It is valid to pass <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> for unwanted details.</p>\n<p>Events are passed between elements in parallel to the data stream. Some events\nare serialized with buffers, others are not. Some events only travel downstream,\nothers only upstream. Some events can travel both upstream and downstream.</p>\n<p>The events are used to signal special conditions in the datastream such as\nEOS (end of stream) or the start of a new stream-segment.\nEvents are also used to flush the pipeline of any pending data.</p>\n<p>Most of the event API is used inside plugins. Applications usually only\nconstruct and use seek events.\nTo do that <a href=\"../../libgstreamer-doc-1.0/gstevent.html#gst_event_new_seek\">gst_event_new_seek</a> is used to create a seek event. It takes\nthe needed parameters to specify seeking time and mode.</p>\n<pre><code class=\"language-[&lt;!--\">   GstEvent *event;\n   gboolean result;\n   ...\n   // construct a seek event to play the media from second 2 to 5, flush\n   // the pipeline to decrease latency.\n   event = gst_event_new_seek (1.0,\n      GST_FORMAT_TIME,\n      GST_SEEK_FLAG_FLUSH,\n      GST_SEEK_TYPE_SET, 2 * GST_SECOND,\n      GST_SEEK_TYPE_SET, 5 * GST_SECOND);\n   ...\n   result = gst_element_send_event (pipeline, event);\n   if (!result)\n     g_warning (\"seek failed\");\n   ...\n</code></pre>\n\n</div>\n\n\n"});