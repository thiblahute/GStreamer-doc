fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstelement.html#gst_element_get_state", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_element_get_state\">\n\t\t<h3 id=\"gst_element_get_state1\">\n\t<span><code>gst_element_get_state</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstStateChangeReturn\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstStateChangeReturn\">GstStateChangeReturn</a>\ngst_element_get_state (<a title=\"GstElement\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                       <a title=\"GstState\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstState\">GstState</a> * state,\n                       <a title=\"GstState\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstState\">GstState</a> * pending,\n                       <a title=\"GstClockTime\" href=\"../../gst-plugins-base-audio-doc-1.0/c/gstaudioclock.html#GstClockTime\">GstClockTime</a> timeout)</pre>\n\n<p>Gets the state of the element.</p>\n<p>For elements that performed an ASYNC state change, as reported by\n<a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#gst_element_set_state\">gst_element_set_state</a>, this function will block up to the\nspecified timeout value for the state change to complete.\nIf the element completes the state change or goes into\nan error, this function returns immediately with a return value of\n<a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_CHANGE_SUCCESS\">GST_STATE_CHANGE_SUCCESS</a> or <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_CHANGE_FAILURE\">GST_STATE_CHANGE_FAILURE</a> respectively.</p>\n<p>For elements that did not return <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_CHANGE_ASYNC\">GST_STATE_CHANGE_ASYNC</a>, this function\nreturns the current and pending state immediately.</p>\n<p>This function returns <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_CHANGE_NO_PREROLL\">GST_STATE_CHANGE_NO_PREROLL</a> if the element\nsuccessfully changed its state but is not able to provide data yet.\nThis mostly happens for live sources that only produce data in\n<a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_PLAYING\">GST_STATE_PLAYING</a>. While the state change return is equivalent to\n<a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_CHANGE_SUCCESS\">GST_STATE_CHANGE_SUCCESS</a>, it is returned to the application to signal that\nsome sink elements might not be able to complete their state change because\nan element is not producing data to complete the preroll. When setting the\nelement to playing, the preroll will complete and playback will start.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters43\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a> to get the state of.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>state:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer to <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstState\">GstState</a> to hold the state.\nCan be <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a>.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pending:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer to <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstState\">GstState</a> to hold the pending\nstate. Can be <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a>.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timeout:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../gst-plugins-base-audio-doc-1.0/c/gstaudioclock.html#GstClockTime\">GstClockTime</a> to specify the timeout for an async\nstate change or <a href=\"../../libgstreamer-doc-1.0/c/gstclock.html#GST_CLOCK_TIME_NONE\">GST_CLOCK_TIME_NONE</a> for infinite timeout.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns29\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_CHANGE_SUCCESS\">GST_STATE_CHANGE_SUCCESS</a> if the element has no more pending state\nand the last state change succeeded, <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_CHANGE_ASYNC\">GST_STATE_CHANGE_ASYNC</a> if the\nelement is still performing a state change or\n<a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_CHANGE_FAILURE\">GST_STATE_CHANGE_FAILURE</a> if the last state change failed.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstStateChangeReturn\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstStateChangeReturn\">GstStateChangeReturn</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});