fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstpoll.html#gst_poll_write_control", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_poll_write_control\">\n\t\t<h3 id=\"gst_poll_write_control1\">\n\t<span><code>gst_poll_write_control</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_poll_write_control (<a title=\"GstPoll\" href=\"../../libgstreamer-doc-1.0/c/gstpoll.html#GstPoll\">GstPoll</a> * set)</pre>\n\n<p>Write a byte to the control socket of the controllable <em>set</em>.\nThis function is mostly useful for timer <a href=\"../../libgstreamer-doc-1.0/c/gstpoll.html#GstPoll\">GstPoll</a> objects created with\n<a href=\"../../libgstreamer-doc-1.0/c/gstpoll.html#gst_poll_new_timer\">gst_poll_new_timer</a>.</p>\n<p>It will make any current and future <a href=\"../../libgstreamer-doc-1.0/c/gstpoll.html#gst_poll_wait\">gst_poll_wait</a> function return with\n1, meaning the control socket is set. After an equal amount of calls to\n<a href=\"../../libgstreamer-doc-1.0/c/gstpoll.html#gst_poll_read_control\">gst_poll_read_control</a> have been performed, calls to <a href=\"../../libgstreamer-doc-1.0/c/gstpoll.html#gst_poll_wait\">gst_poll_wait</a> will\nblock again until their timeout expired.</p>\n<p>This function only works for timer <a href=\"../../libgstreamer-doc-1.0/c/gstpoll.html#GstPoll\">GstPoll</a> objects created with\n<a href=\"../../libgstreamer-doc-1.0/c/gstpoll.html#gst_poll_new_timer\">gst_poll_new_timer</a>.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters17\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>set:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstreamer-doc-1.0/c/gstpoll.html#GstPoll\">GstPoll</a>.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns12\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> on success. <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> when when the byte could not be written.\nerrno contains the detailed error code but will never be EAGAIN, EINTR or\nEWOULDBLOCK. <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> always signals a critical error.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});