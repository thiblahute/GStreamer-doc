fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstelement.html#gst_element_lost_state", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_element_lost_state\">\n\t\t<h3 id=\"gst_element_lost_state1\">\n\t<span><code>gst_element_lost_state</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_element_lost_state (int * element)</pre>\n\n<p>Brings the element to the lost state. The current state of the\nelement is copied to the pending state so that any call to\n<a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#gst_element_get_state\">gst_element_get_state</a> will return <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_CHANGE_ASYNC\">GST_STATE_CHANGE_ASYNC</a>.</p>\n<p>An ASYNC_START message is posted. If the element was PLAYING, it will\ngo to PAUSED. The element will be restored to its PLAYING state by\nthe parent pipeline when it prerolls again.</p>\n<p>This is mostly used for elements that lost their preroll buffer\nin the <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_PAUSED\">GST_STATE_PAUSED</a> or <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GST_STATE_PLAYING\">GST_STATE_PLAYING</a> state after a flush,\nthey will go to their pending state again when a new preroll buffer is\nqueued. This function can only be called when the element is currently\nnot in error or an async state change.</p>\n<p>This function is used internally and should normally not be called from\nplugins or applications.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters47\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstElement.html#GstElement-struct\">GstElement</a> the state is lost of</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});