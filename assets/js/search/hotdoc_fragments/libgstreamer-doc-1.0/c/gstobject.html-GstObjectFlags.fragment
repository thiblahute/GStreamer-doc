fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstobject.html#GstObjectFlags", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstObjectFlags\">\n\t\t<h3 id=\"gstobjectflags\">\n\t\tGstObjectFlags\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\ntypedef enum\n{\n  GST_OBJECT_FLAG_MAY_BE_LEAKED = (1 &lt;&lt; 0),\n  /* padding */\n  GST_OBJECT_FLAG_LAST = (1&lt;&lt;4)\n} GstObjectFlags;\n</pre>\n\n<p>The standard flags that an gstobject may have.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_OBJECT_FLAG_MAY_BE_LEAKED\"></a>\n\t\tGST_OBJECT_FLAG_MAY_BE_LEAKED\n\t\t</p>\n\t</td>\n\t<td><p>the object is expected to stay alive even\nafter <a href=\"../../libgstreamer-doc-1.0/c/gst.html#gst_deinit\">gst_deinit</a> has been called and so should be ignored by leak\ndetection tools. (Since 1.10)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_OBJECT_FLAG_LAST\"></a>\n\t\tGST_OBJECT_FLAG_LAST\n\t\t</p>\n\t</td>\n\t<td><p>subclasses can add additional flags starting from this flag</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 16</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});