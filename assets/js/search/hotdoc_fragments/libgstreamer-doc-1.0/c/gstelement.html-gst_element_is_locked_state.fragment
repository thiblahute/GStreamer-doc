fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/c/gstelement.html#gst_element_is_locked_state", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_element_is_locked_state\">\n\t\t<h3 id=\"gst_element_is_locked_state1\">\n\t<span><code>gst_element_is_locked_state</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_element_is_locked_state (<a title=\"GstElement\" href=\"gstelement.html#GstElement\">GstElement</a> * element)</pre>\n\n<p>Checks if the state of an element is locked.\nIf the state of an element is locked, state changes of the parent don't\naffect the element.\nThis way you can leave currently unused elements inside bins. Just lock their\nstate before changing the state from <a href=\"gstelement.html#GST_STATE_NULL\">GST_STATE_NULL</a>.</p>\n<p>MT safe.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters25\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstelement.html#GstElement\">GstElement</a>.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns22\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>, if the element's state is locked.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});