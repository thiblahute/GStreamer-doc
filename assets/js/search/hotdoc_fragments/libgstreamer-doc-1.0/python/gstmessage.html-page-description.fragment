fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstmessage.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstmessage.h\">\n<h1 id=\"gstmessage\">GstMessage</h1><p>Messages are implemented as a subclass of <a href=\"../../libgstreamer-doc-1.0/python/gstminiobject.html#GstMiniObject\">Gst.MiniObject</a> with a generic\n<a href=\"../../libgstreamer-doc-1.0/python/gststructure.html#GstStructure\">Gst.Structure</a> as the content. This allows for writing custom messages without\nrequiring an API change while allowing a wide range of different types\nof messages.</p>\n<p>Messages are posted by objects in the pipeline and are passed to the\napplication using the <a href=\"../../libgstreamer-doc-1.0/python/gstbus.html#GstBus\">Gst.Bus</a>.</p>\n<p>The basic use pattern of posting a message on a <a href=\"../../libgstreamer-doc-1.0/python/gstbus.html#GstBus\">Gst.Bus</a> is as follows:</p>\n<pre><code class=\"language-c\">  gst_bus_post (bus, gst_message_new_eos());\n</code></pre>\n<p>A <a href=\"../../libgstreamer-doc-1.0/python/gstelement.html#GstElement\">Gst.Element</a> usually posts messages on the bus provided by the parent\ncontainer using <a href=\"../../libgstreamer-doc-1.0/python/gstelement.html#gst_element_post_message\">Gst.Element.post_message</a>.</p>\n\n</div>\n\n\n"});