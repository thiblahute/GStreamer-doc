fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstpipeline.html#gst_pipeline_set_auto_flush_bus", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_pipeline_set_auto_flush_bus\">\n\t\t<h3 id=\"gstpipelineset_auto_flush_bus\">\n\t<span><code>Gst.Pipeline.set_auto_flush_bus</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Pipeline.set_auto_flush_bus (self, auto_flush):\n    #python wrapper for 'gst_pipeline_set_auto_flush_bus'</pre>\n\n<p>Usually, when a pipeline goes from READY to NULL state, it automatically\nflushes all pending messages on the bus, which is done for refcounting\npurposes, to break circular references.</p>\n<p>This means that applications that update state using (async) bus messages\n(e.g. do certain things when a pipeline goes from PAUSED to READY) might\nnot get to see messages when the pipeline is shut down, because they might\nbe flushed before they can be dispatched in the main thread. This behaviour\ncan be disabled using this function.</p>\n<p>It is important that all messages on the bus are handled when the\nautomatic flushing is disabled else memory leaks will be introduced.</p>\n<p>MT safe.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters8\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pipeline:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstreamer-doc-1.0/python/gstpipeline.html#GstPipeline\">Gst.Pipeline</a></p>\n</td>\n<td>\n<a title=\"Gst.Pipeline\" href=\"../../libgstreamer-doc-1.0/python/gstpipeline.html#GstPipeline\">Gst.Pipeline</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>auto_flush:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>whether or not to automatically flush the bus when\nthe pipeline goes from READY to NULL state</p>\n</td>\n<td>\n<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});