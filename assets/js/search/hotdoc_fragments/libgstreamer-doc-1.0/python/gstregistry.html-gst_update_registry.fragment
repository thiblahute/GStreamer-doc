fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstregistry.html#gst_update_registry", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_update_registry\">\n\t\t<h3 id=\"gstupdate_registry\">\n\t<span><code>Gst.update_registry</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.update_registry ():\n    #python wrapper for 'gst_update_registry'</pre>\n\n<p>Forces GStreamer to re-scan its plugin paths and update the default\nplugin registry.</p>\n<p>Applications will almost never need to call this function, it is only\nuseful if the application knows new plugins have been installed (or old\nones removed) since the start of the application (or, to be precise, the\nfirst call to <a href=\"../../libgstreamer-doc-1.0/python/gst.html#gst_init\">Gst.init</a>) and the application wants to make use of any\nnewly-installed plugins without restarting the application.</p>\n<p>Applications should assume that the registry update is neither atomic nor\nthread-safe and should therefore not have any dynamic pipelines running\n(including the playbin and decodebin elements) and should also not create\nany elements or access the GStreamer registry while the update is in\nprogress.</p>\n<p>Note that this function may block for a significant amount of time.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns16\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a> if the registry has been updated successfully (does not\nimply that there were changes), otherwise <a href=\"https://docs.python.org/2/library/constants.html#False\">False</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\t"});