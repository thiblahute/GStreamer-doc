fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstquery.html#gst_query_new_latency", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_query_new_latency\">\n\t\t<h3 id=\"gstquerynew_latency\">\n\t<span><code>Gst.Query.new_latency</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Query.new_latency ():\n    #python wrapper for 'gst_query_new_latency'</pre>\n\n<p>Constructs a new latency query object.\nUse <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstQuery.html#gst-query-unref\">gst_query_unref (not introspectable)</a> when done with it. A latency query is usually performed\nby sinks to compensate for additional latency introduced by elements in the\npipeline.</p>\n<p>Free-function: <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstQuery.html#gst-query-unref\">gst_query_unref (not introspectable)</a></p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns10\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"../../libgstreamer-doc-1.0/gstquery.html#GstQuery\">Gst.Query</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Query\" href=\"../../libgstreamer-doc-1.0/gstquery.html#GstQuery\">Gst.Query</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});