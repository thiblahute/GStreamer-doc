fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstobject.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstobject.h\">\n<h1 id=\"gstobject\">GstObject</h1><p><a href=\"../../libgstreamer-doc-1.0/python/gstobject.html#GstObject\">Gst.Object</a> provides a root for the object hierarchy tree filed in by the\nGStreamer library.  It is currently a thin wrapper on top of\n<a href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GObject.InitiallyUnowned</a>. It is an abstract class that is not very usable on its own.</p>\n<p><a href=\"../../libgstreamer-doc-1.0/python/gstobject.html#GstObject\">Gst.Object</a> gives us basic refcounting, parenting functionality and locking.\nMost of the functions are just extended for special GStreamer needs and can be\nfound under the same name in the base class of <a href=\"../../libgstreamer-doc-1.0/python/gstobject.html#GstObject\">Gst.Object</a> which is <a href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject.Object</a>\n(e.g. <a href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#g-object-ref\">GObject.Object.ref</a> becomes <a href=\"../../libgstreamer-doc-1.0/python/gstobject.html#gst_object_ref\">Gst.Object.ref</a>).</p>\n<p>Since <a href=\"../../libgstreamer-doc-1.0/python/gstobject.html#GstObject\">Gst.Object</a> derives from <a href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GObject.InitiallyUnowned</a>, it also inherits the\nfloating reference. Be aware that functions such as <a href=\"../../libgstreamer-doc-1.0/python/gstbin.html#gst_bin_add\">Gst.Bin.add</a> and\n<a href=\"../../libgstreamer-doc-1.0/python/gstelement.html#gst_element_add_pad\">Gst.Element.add_pad</a> take ownership of the floating reference.</p>\n<p>In contrast to <a href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject.Object</a> instances, <a href=\"../../libgstreamer-doc-1.0/python/gstobject.html#GstObject\">Gst.Object</a> adds a name property. The functions\n<a href=\"../../libgstreamer-doc-1.0/python/gstobject.html#gst_object_set_name\">Gst.Object.set_name</a> and <a href=\"../../libgstreamer-doc-1.0/python/gstobject.html#gst_object_get_name\">Gst.Object.get_name</a> are used to set/get the name\nof the object.</p>\n<h2 id=\"controlled-properties\">controlled properties</h2>\n<p>Controlled properties offers a lightweight way to adjust gobject properties\nover stream-time. It works by using time-stamped value pairs that are queued\nfor element-properties. At run-time the elements continuously pull value\nchanges for the current stream-time.</p>\n<p>What needs to be changed in a <a href=\"../../libgstreamer-doc-1.0/python/gstelement.html#GstElement\">Gst.Element</a>?\nVery little - it is just two steps to make a plugin controllable!</p>\n<ul>\n<li>\n<p>mark gobject-properties paramspecs that make sense to be controlled,\nby GST_PARAM_CONTROLLABLE.</p>\n</li>\n<li>\n<p>when processing data (get, chain, loop function) at the beginning call\ngst_object_sync_values(element,timestamp).\nThis will make the controller update all GObject properties that are\nunder its control with the current values based on the timestamp.</p>\n</li>\n</ul>\n<p>What needs to be done in applications? Again it's not a lot to change.</p>\n<ul>\n<li>\n<p>create a <a href=\"../../libgstreamer-doc-1.0/python/gstcontrolsource.html#GstControlSource\">Gst.ControlSource</a>.\ncsource = gst_interpolation_control_source_new ();\ng_object_set (csource, \"mode\", GST_INTERPOLATION_MODE_LINEAR, NULL);</p>\n</li>\n<li>\n<p>Attach the <a href=\"../../libgstreamer-doc-1.0/python/gstcontrolsource.html#GstControlSource\">Gst.ControlSource</a> on the controller to a property.\ngst_object_add_control_binding (object, gst_direct_control_binding_new (object, \"prop1\", csource));</p>\n</li>\n<li>\n<p>Set the control values\ngst_timed_value_control_source_set ((GstTimedValueControlSource *)csource,0 * GST_SECOND, value1);\ngst_timed_value_control_source_set ((GstTimedValueControlSource *)csource,1 * GST_SECOND, value2);</p>\n</li>\n<li>\n<p>start your pipeline</p>\n</li>\n</ul>\n\n</div>\n\n\n"});