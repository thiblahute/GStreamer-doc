fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstcaps.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstcaps.h\">\n<h1 id=\"gstcaps\">GstCaps</h1><p>Caps (capabilities) are lightweight refcounted objects describing media types.\nThey are composed of an array of <a href=\"../../libgstreamer-doc-1.0/python/gststructure.html#GstStructure\">Gst.Structure</a>.</p>\n<p>Caps are exposed on <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstPadTemplate.html#GstPadTemplate-struct\">Gst.PadTemplate</a> to describe all possible types a\ngiven pad can handle. They are also stored in the <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstRegistry.html#GstRegistry-struct\">Gst.Registry</a> along with\na description of the <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstElement.html#GstElement-struct\">Gst.Element</a>.</p>\n<p>Caps are exposed on the element pads using the <a href=\"../../libgstreamer-doc-1.0/python/gstutils.html#gst_pad_query_caps\">Gst.Pad.query_caps</a> pad\nfunction. This function describes the possible types that the pad can\nhandle or produce at runtime.</p>\n<p>A <a href=\"../../libgstreamer-doc-1.0/python/gstcaps.html#GstCaps\">Gst.Caps</a> can be constructed with the following code fragment:</p>\n<pre><code class=\"language-[&lt;!--\">   GstCaps *caps = gst_caps_new_simple (\"video/x-raw\",\n      \"format\", G_TYPE_STRING, \"I420\",\n      \"framerate\", GST_TYPE_FRACTION, 25, 1,\n      \"pixel-aspect-ratio\", GST_TYPE_FRACTION, 1, 1,\n      \"width\", G_TYPE_INT, 320,\n      \"height\", G_TYPE_INT, 240,\n      NULL);\n</code></pre>\n<p>A <a href=\"../../libgstreamer-doc-1.0/python/gstcaps.html#GstCaps\">Gst.Caps</a> is fixed when it has no properties with ranges or lists. Use\n<a href=\"../../libgstreamer-doc-1.0/python/gstcaps.html#gst_caps_is_fixed\">Gst.Caps.is_fixed</a> to test for fixed caps. Fixed caps can be used in a\ncaps event to notify downstream elements of the current media type.</p>\n<p>Various methods exist to work with the media types such as subtracting\nor intersecting.</p>\n<p>Be aware that the current <a href=\"../../libgstreamer-doc-1.0/python/gstcaps.html#GstCaps\">Gst.Caps</a> / <a href=\"../../libgstreamer-doc-1.0/python/gststructure.html#GstStructure\">Gst.Structure</a> serialization into string\nhas limited support for nested <a href=\"../../libgstreamer-doc-1.0/python/gstcaps.html#GstCaps\">Gst.Caps</a> / <a href=\"../../libgstreamer-doc-1.0/python/gststructure.html#GstStructure\">Gst.Structure</a> fields. It can only\nsupport one level of nesting. Using more levels will lead to unexpected\nbehavior when using serialization features, such as <a href=\"../../libgstreamer-doc-1.0/python/gstcaps.html#gst_caps_to_string\">Gst.Caps.to_string</a> or\n<a href=\"../../libgstreamer-doc-1.0/python/gstvalue.html#gst_value_serialize\">Gst.value_serialize</a> and their counterparts.</p>\n\n</div>\n\n\n"});