fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstallocator.html#gst_allocator_find", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_allocator_find\">\n\t\t<h3 id=\"gstallocatorfind\">\n\t<span><code>Gst.Allocator.find</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Allocator.find (name):\n    #python wrapper for 'gst_allocator_find'</pre>\n\n<p>Find a previously registered allocator with <em>name</em>. When <em>name</em> is <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">None</a>, the\ndefault allocator will be returned.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters3\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the name of the allocator</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns1\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"../../libgstreamer-doc-1.0/gstallocator.html#GstAllocator\">Gst.Allocator</a> or <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">None</a> when\nthe allocator with <em>name</em> was not registered. Use <a href=\"../../libgstreamer-doc-1.0/gstobject.html#gst_object_unref\">Gst.Object.unref</a>\nto release the allocator after usage.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Allocator\" href=\"../../libgstreamer-doc-1.0/gstallocator.html#GstAllocator\">Gst.Allocator</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});