fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstpad.html#GstPadFlags", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstPadFlags\">\n\t\t<h3 id=\"gstpadflags\">\n\t\tGst.PadFlags\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\ntypedef enum {\n  GST_PAD_FLAG_BLOCKED          = (GST_OBJECT_FLAG_LAST &lt;&lt; 0),\n  GST_PAD_FLAG_FLUSHING         = (GST_OBJECT_FLAG_LAST &lt;&lt; 1),\n  GST_PAD_FLAG_EOS              = (GST_OBJECT_FLAG_LAST &lt;&lt; 2),\n  GST_PAD_FLAG_BLOCKING         = (GST_OBJECT_FLAG_LAST &lt;&lt; 3),\n  GST_PAD_FLAG_NEED_PARENT      = (GST_OBJECT_FLAG_LAST &lt;&lt; 4),\n  GST_PAD_FLAG_NEED_RECONFIGURE = (GST_OBJECT_FLAG_LAST &lt;&lt; 5),\n  GST_PAD_FLAG_PENDING_EVENTS   = (GST_OBJECT_FLAG_LAST &lt;&lt; 6),\n  GST_PAD_FLAG_FIXED_CAPS       = (GST_OBJECT_FLAG_LAST &lt;&lt; 7),\n  GST_PAD_FLAG_PROXY_CAPS       = (GST_OBJECT_FLAG_LAST &lt;&lt; 8),\n  GST_PAD_FLAG_PROXY_ALLOCATION = (GST_OBJECT_FLAG_LAST &lt;&lt; 9),\n  GST_PAD_FLAG_PROXY_SCHEDULING = (GST_OBJECT_FLAG_LAST &lt;&lt; 10),\n  GST_PAD_FLAG_ACCEPT_INTERSECT = (GST_OBJECT_FLAG_LAST &lt;&lt; 11),\n  GST_PAD_FLAG_ACCEPT_TEMPLATE  = (GST_OBJECT_FLAG_LAST &lt;&lt; 12),\n  /* padding */\n  GST_PAD_FLAG_LAST        = (GST_OBJECT_FLAG_LAST &lt;&lt; 16)\n} GstPadFlags;\n</pre>\n\n<p>Pad state flags</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members6\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_BLOCKED\"></a>\n\t\tGst.PadFlags.blocked\n\t\t</p>\n\t</td>\n\t<td><p>is dataflow on a pad blocked</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_FLUSHING\"></a>\n\t\tGst.PadFlags.flushing\n\t\t</p>\n\t</td>\n\t<td><p>is pad flushing</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_EOS\"></a>\n\t\tGst.PadFlags.eos\n\t\t</p>\n\t</td>\n\t<td><p>is pad in EOS state</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_BLOCKING\"></a>\n\t\tGst.PadFlags.blocking\n\t\t</p>\n\t</td>\n\t<td><p>is pad currently blocking on a buffer or event</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 3</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_NEED_PARENT\"></a>\n\t\tGst.PadFlags.need_parent\n\t\t</p>\n\t</td>\n\t<td><p>ensure that there is a parent object before calling\ninto the pad callbacks.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_NEED_RECONFIGURE\"></a>\n\t\tGst.PadFlags.need_reconfigure\n\t\t</p>\n\t</td>\n\t<td><p>the pad should be reconfigured/renegotiated.\nThe flag has to be unset manually after\nreconfiguration happened.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 5</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_PENDING_EVENTS\"></a>\n\t\tGst.PadFlags.pending_events\n\t\t</p>\n\t</td>\n\t<td><p>the pad has pending events</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 6</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_FIXED_CAPS\"></a>\n\t\tGst.PadFlags.fixed_caps\n\t\t</p>\n\t</td>\n\t<td><p>the pad is using fixed caps. This means that\nonce the caps are set on the pad, the default caps query function\nwill only return those caps.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 7</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_PROXY_CAPS\"></a>\n\t\tGst.PadFlags.proxy_caps\n\t\t</p>\n\t</td>\n\t<td><p>the default event and query handler will forward\nall events and queries to the internally linked pads\ninstead of discarding them.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 8</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_PROXY_ALLOCATION\"></a>\n\t\tGst.PadFlags.proxy_allocation\n\t\t</p>\n\t</td>\n\t<td><p>the default query handler will forward\nallocation queries to the internally linked pads\ninstead of discarding them.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 9</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_PROXY_SCHEDULING\"></a>\n\t\tGst.PadFlags.proxy_scheduling\n\t\t</p>\n\t</td>\n\t<td><p>the default query handler will forward\nscheduling queries to the internally linked pads\ninstead of discarding them.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 10</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_ACCEPT_INTERSECT\"></a>\n\t\tGst.PadFlags.accept_intersect\n\t\t</p>\n\t</td>\n\t<td><p>the default accept-caps handler will check\nit the caps intersect the query-caps result instead\nof checking for a subset. This is interesting for\nparsers that can accept incompletely specified caps.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 11</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_ACCEPT_TEMPLATE\"></a>\n\t\tGst.PadFlags.accept_template\n\t\t</p>\n\t</td>\n\t<td><p>the default accept-caps handler will use\nthe template pad caps instead of query caps to\ncompare with the accept caps. Use this in combination\nwith <a href=\"../../libgstreamer-doc-1.0/python/gstpad.html#GST_PAD_FLAG_ACCEPT_INTERSECT\">Gst.PadFlags.accept_intersect</a>. (Since 1.6)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 12</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_PAD_FLAG_LAST\"></a>\n\t\tGst.PadFlags.last\n\t\t</p>\n\t</td>\n\t<td><p>offset to define more flags</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 13</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});