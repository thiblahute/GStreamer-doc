fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstevent.html#gst_event_new_eos", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_eos\">\n\t\t<h3 id=\"gsteventnew_eos\">\n\t<span><code>Gst.Event.new_eos</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_eos ():\n    #python wrapper for 'gst_event_new_eos'</pre>\n\n<p>Create a new EOS event. The eos event can only travel downstream\nsynchronized with the buffer flow. Elements that receive the EOS\nevent on a pad can return <a href=\"../../libgstreamer-doc-1.0/python/gstpad.html#GST_FLOW_EOS\">Gst.FlowReturn.eos</a> as a <a href=\"../../libgstreamer-doc-1.0/python/gstpad.html#GstFlowReturn\">Gst.FlowReturn</a>\nwhen data after the EOS event arrives.</p>\n<p>The EOS event will travel down to the sink elements in the pipeline\nwhich will then post the <a href=\"../../libgstreamer-doc-1.0/python/gstmessage.html#GST_MESSAGE_EOS\">Gst.MessageType.eos</a> on the bus after they have\nfinished playing any buffered data.</p>\n<p>When all sinks have posted an EOS message, an EOS message is\nforwarded to the application.</p>\n<p>The EOS event itself will not cause any state transitions of the pipeline.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns29\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new EOS event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"../../gst-plugins-base-video-doc-1.0/python/video-event.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});