fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstevent.html#gst_event_new_stream_start", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_stream_start\">\n\t\t<h3 id=\"gsteventnew_stream_start\">\n\t<span><code>Gst.Event.new_stream_start</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_stream_start (stream_id):\n    #python wrapper for 'gst_event_new_stream_start'</pre>\n\n<p>Create a new STREAM_START event. The stream start event can only\ntravel downstream synchronized with the buffer flow. It is expected\nto be the first event that is sent for a new stream.</p>\n<p>Source elements, demuxers and other elements that create new streams\nare supposed to send this event as the first event of a new stream. It\nshould not be sent after a flushing seek or in similar situations\nand is used to mark the beginning of a new logical stream. Elements\ncombining multiple streams must ensure that this event is only forwarded\ndownstream once and not for every single input stream.</p>\n<p>The <em>stream_id</em> should be a unique string that consists of the upstream\nstream-id, / as separator and a unique stream-id for this specific\nstream. A new stream-id should only be created for a stream if the upstream\nstream is split into (potentially) multiple new streams, e.g. in a demuxer,\nbut not for every single element in the pipeline.\n<a href=\"../../libgstreamer-doc-1.0/python/gstutils.html#gst_pad_create_stream_id\">Gst.Pad.create_stream_id</a> or <a href=\"../../libgstreamer-doc-1.0/c/gstutils.html#gst_pad_create_stream_id_printf\">gst_pad_create_stream_id_printf (not introspectable)</a> can be\nused to create a stream-id.  There are no particular semantics for the\nstream-id, though it should be deterministic (to support stream matching)\nand it might be used to order streams (besides any information conveyed by\nstream flags).</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters17\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>stream_id:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Identifier for this stream</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns16\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new STREAM_START event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"../../gst-plugins-base-video-doc-1.0/python/video-event.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});