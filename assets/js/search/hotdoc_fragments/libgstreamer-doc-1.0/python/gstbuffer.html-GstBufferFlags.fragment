fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstbuffer.html#GstBufferFlags", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBufferFlags\">\n\t\t<h3 id=\"gstbufferflags\">\n\t\tGst.BufferFlags\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\ntypedef enum {\n  GST_BUFFER_FLAG_LIVE        = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 0),\n  GST_BUFFER_FLAG_DECODE_ONLY = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 1),\n  GST_BUFFER_FLAG_DISCONT     = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 2),\n  GST_BUFFER_FLAG_RESYNC      = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 3),\n  GST_BUFFER_FLAG_CORRUPTED   = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 4),\n  GST_BUFFER_FLAG_MARKER      = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 5),\n  GST_BUFFER_FLAG_HEADER      = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 6),\n  GST_BUFFER_FLAG_GAP         = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 7),\n  GST_BUFFER_FLAG_DROPPABLE   = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 8),\n  GST_BUFFER_FLAG_DELTA_UNIT  = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 9),\n  GST_BUFFER_FLAG_TAG_MEMORY  = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 10),\n  GST_BUFFER_FLAG_SYNC_AFTER  = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 11),\n\n  GST_BUFFER_FLAG_LAST        = (GST_MINI_OBJECT_FLAG_LAST &lt;&lt; 16)\n} GstBufferFlags;\n</pre>\n\n<p>A set of buffer flags used to describe properties of a <a href=\"../../gst-plugins-base-audio-doc-1.0/python/audio.html#GstBuffer\">Gst.Buffer</a>.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_LIVE\"></a>\n\t\tGst.BufferFlags.live\n\t\t</p>\n\t</td>\n\t<td><p>the buffer is live data and should be discarded in\nthe PAUSED state.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_DECODE_ONLY\"></a>\n\t\tGst.BufferFlags.decode_only\n\t\t</p>\n\t</td>\n\t<td><p>the buffer contains data that should be dropped\nbecause it will be clipped against the segment\nboundaries or because it does not contain data\nthat should be shown to the user.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_DISCONT\"></a>\n\t\tGst.BufferFlags.discont\n\t\t</p>\n\t</td>\n\t<td><p>the buffer marks a data discontinuity in the stream.\nThis typically occurs after a seek or a dropped buffer\nfrom a live or network source.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_RESYNC\"></a>\n\t\tGst.BufferFlags.resync\n\t\t</p>\n\t</td>\n\t<td><p>the buffer timestamps might have a discontinuity\nand this buffer is a good point to resynchronize.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 3</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_CORRUPTED\"></a>\n\t\tGst.BufferFlags.corrupted\n\t\t</p>\n\t</td>\n\t<td><p>the buffer data is corrupted.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_MARKER\"></a>\n\t\tGst.BufferFlags.marker\n\t\t</p>\n\t</td>\n\t<td><p>the buffer contains a media specific marker. for\nvideo this is typically the end of a frame boundary, for audio\nthis is usually the start of a talkspurt.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 5</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_HEADER\"></a>\n\t\tGst.BufferFlags.header\n\t\t</p>\n\t</td>\n\t<td><p>the buffer contains header information that is\nneeded to decode the following data.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 6</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_GAP\"></a>\n\t\tGst.BufferFlags.gap\n\t\t</p>\n\t</td>\n\t<td><p>the buffer has been created to fill a gap in the\nstream and contains media neutral data (elements can\nswitch to optimized code path that ignores the buffer\ncontent).</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 7</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_DROPPABLE\"></a>\n\t\tGst.BufferFlags.droppable\n\t\t</p>\n\t</td>\n\t<td><p>the buffer can be dropped without breaking the\nstream, for example to reduce bandwidth.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 8</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_DELTA_UNIT\"></a>\n\t\tGst.BufferFlags.delta_unit\n\t\t</p>\n\t</td>\n\t<td><p>this unit cannot be decoded independently.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 9</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_TAG_MEMORY\"></a>\n\t\tGst.BufferFlags.tag_memory\n\t\t</p>\n\t</td>\n\t<td><p>this flag is set when memory of the buffer\nis added/removed</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 10</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_SYNC_AFTER\"></a>\n\t\tGst.BufferFlags.sync_after\n\t\t</p>\n\t</td>\n\t<td><p>Elements which write to disk or permanent\nstorage should ensure the data is synced after\nwriting the contents of this buffer. (Since 1.6)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 11</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUFFER_FLAG_LAST\"></a>\n\t\tGst.BufferFlags.last\n\t\t</p>\n\t</td>\n\t<td><p>additional media specific flags can be added starting from\nthis flag.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 12</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n"});