fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstsegment.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstsegment.h\">\n<h1 id=\"gstsegment\">GstSegment</h1><p>This helper structure holds the relevant values for tracking the region of\ninterest in a media file, called a segment.</p>\n<p>The structure can be used for two purposes:</p>\n<ul>\n<li>performing seeks (handling seek events)</li>\n<li>tracking playback regions (handling newsegment events)</li>\n</ul>\n<p>The segment is usually configured by the application with a seek event which\nis propagated upstream and eventually handled by an element that performs the seek.</p>\n<p>The configured segment is then propagated back downstream with a newsegment event.\nThis information is then used to clip media to the segment boundaries.</p>\n<p>A segment structure is initialized with <a href=\"../../libgstreamer-doc-1.0/gstsegment.html#gst_segment_init\">Gst.Segment.init</a>, which takes a <a href=\"../../GstFormat\">Gst.Format</a>\nthat will be used as the format of the segment values. The segment will be configured\nwith a start value of 0 and a stop/duration of -1, which is undefined. The default\nrate and applied_rate is 1.0.</p>\n<p>The public duration field contains the duration of the segment. When using\nthe segment for seeking, the start and time members should normally be left\nto their default 0 value. The stop position is left to -1 unless explicitly\nconfigured to a different value after a seek event.</p>\n<p>The current position in the segment should be set by changing the position\nmember in the structure.</p>\n<p>For elements that perform seeks, the current segment should be updated with the\n<a href=\"../../libgstreamer-doc-1.0/gstsegment.html#gst_segment_do_seek\">Gst.Segment.do_seek</a> and the values from the seek event. This method will update\nall the segment fields. The position field will contain the new playback position.\nIf the start_type was different from GST_SEEK_TYPE_NONE, playback continues from\nthe position position, possibly with updated flags or rate.</p>\n<p>For elements that want to use <a href=\"../../libgstreamer-doc-1.0/gstsegment.html#GstSegment\">Gst.Segment</a> to track the playback region,\nupdate the segment fields with the information from the newsegment event.\nThe <a href=\"../../libgstreamer-doc-1.0/gstsegment.html#gst_segment_clip\">Gst.Segment.clip</a> method can be used to check and clip\nthe media data to the segment boundaries.</p>\n<p>For elements that want to synchronize to the pipeline clock, <a href=\"../../libgstreamer-doc-1.0/gstsegment.html#gst_segment_to_running_time\">Gst.Segment.to_running_time</a>\ncan be used to convert a timestamp to a value that can be used to synchronize\nto the clock. This function takes into account the base as well as\nany rate or applied_rate conversions.</p>\n<p>For elements that need to perform operations on media data in stream_time,\n<a href=\"../../libgstreamer-doc-1.0/gstsegment.html#gst_segment_to_stream_time\">Gst.Segment.to_stream_time</a> can be used to convert a timestamp and the segment\ninfo to stream time (which is always between 0 and the duration of the stream).</p>\n\n</div>\n\n\n"});