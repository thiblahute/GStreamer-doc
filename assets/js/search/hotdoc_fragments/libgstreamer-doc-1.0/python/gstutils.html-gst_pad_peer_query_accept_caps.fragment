fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstutils.html#gst_pad_peer_query_accept_caps", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_pad_peer_query_accept_caps\">\n\t\t<h3 id=\"gstpadpeer_query_accept_caps\">\n\t<span><code>Gst.Pad.peer_query_accept_caps</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Pad.peer_query_accept_caps (self, caps):\n    #python wrapper for 'gst_pad_peer_query_accept_caps'</pre>\n\n<p>Check if the peer of <em>pad</em> accepts <em>caps</em>. If <em>pad</em> has no peer, this function\nreturns <a href=\"https://docs.python.org/2/library/constants.html#True\">True</a>.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters74\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pad:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a  <a href=\"../../libgstreamer-doc-1.0/python/gstpad.html#GstPad\">Gst.Pad</a> to check the peer of</p>\n</td>\n<td>\n<a title=\"Gst.Pad\" href=\"../../libgstreamer-doc-1.0/python/gstpad.html#GstPad\">Gst.Pad</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstreamer-doc-1.0/python/gstcaps.html#GstCaps\">Gst.Caps</a> to check on the pad</p>\n</td>\n<td>\n<a title=\"Gst.Caps\" href=\"../../libgstreamer-doc-1.0/python/gstcaps.html#GstCaps\">Gst.Caps</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns59\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a> if the peer of <em>pad</em> can accept the caps or <em>pad</em> has no peer.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});