fragment_downloaded_cb({"url": "libgstreamer-doc-1.0/python/gstpad.html#gst_pad_send_event", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_pad_send_event\">\n\t\t<h3 id=\"gstpadsend_event\">\n\t<span><code>Gst.Pad.send_event</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Pad.send_event (self, event):\n    #python wrapper for 'gst_pad_send_event'</pre>\n\n<p>Sends the event to the pad. This function can be used\nby applications to send events in the pipeline.</p>\n<p>If <em>pad</em> is a source pad, <em>event</em> should be an upstream event. If <em>pad</em> is a\nsink pad, <em>event</em> should be a downstream event. For example, you would not\nsend a <a href=\"../../libgstreamer-doc-1.0/python/gstevent.html#GST_EVENT_EOS\">Gst.EventType.eos</a> on a src pad; EOS events only propagate downstream.\nFurthermore, some downstream events have to be serialized with data flow,\nlike EOS, while some can travel out-of-band, like <a href=\"../../libgstreamer-doc-1.0/python/gstevent.html#GST_EVENT_FLUSH_START\">Gst.EventType.flush_start</a>. If\nthe event needs to be serialized with data flow, this function will take the\npad's stream lock while calling its event function.</p>\n<p>To find out whether an event type is upstream, downstream, or downstream and\nserialized, see <a href=\"../../libgstreamer-doc-1.0/python/gstevent.html#GstEventTypeFlags\">Gst.EventTypeFlags</a>, <a href=\"../../libgstreamer-doc-1.0/python/gstevent.html#gst_event_type_get_flags\">Gst.event_type_get_flags</a>,\n<a href=\"../../libgstreamer-doc-1.0/c/gstevent.html#GST_EVENT_IS_UPSTREAM\">GST_EVENT_IS_UPSTREAM (not introspectable)</a>, <a href=\"../../libgstreamer-doc-1.0/c/gstevent.html#GST_EVENT_IS_DOWNSTREAM\">GST_EVENT_IS_DOWNSTREAM (not introspectable)</a>, and\n<a href=\"../../libgstreamer-doc-1.0/c/gstevent.html#GST_EVENT_IS_SERIALIZED\">GST_EVENT_IS_SERIALIZED (not introspectable)</a>. Note that in practice that an application or\nplugin doesn't need to bother itself with this information; the core handles\nall necessary locks and checks.</p>\n<p>This function takes ownership of the provided event so you should\n<a href=\"../../libgstreamer-doc-1.0/c/gstevent.html#gst_event_ref\">gst_event_ref (not introspectable)</a> it if you want to reuse the event after this call.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters58\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pad:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstreamer-doc-1.0/python/gstpad.html#GstPad\">Gst.Pad</a> to send the event to.</p>\n</td>\n<td>\n<a title=\"Gst.Pad\" href=\"../../libgstreamer-doc-1.0/python/gstpad.html#GstPad\">Gst.Pad</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"../../libgstreamer-doc-1.0/python/gstevent.html#GstEvent\">Gst.Event</a> to send to the pad.</p>\n</td>\n<td>\nint \n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns42\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a> if the event was handled.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});