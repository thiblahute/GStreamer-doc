fragment_downloaded_cb({"url": "gst-plugins-base-riff-doc-1.0/riff-read.html#gst_riff_parse_strf_vids", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_riff_parse_strf_vids\">\n\t\t<h3 id=\"gst_riff_parse_strf_vids1\">\n\t<span><code>gst_riff_parse_strf_vids</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\nint \ngst_riff_parse_strf_vids (int * element,\n                          int * buf,\n                          <a title=\"gst_riff_strf_vids\" href=\"riff-ids.html#gst_riff_strf_vids\">gst_riff_strf_vids</a> ** strf,\n                          int ** data)</pre>\n\n<p>Parses a video stream\u00c3\u201a\u00c2\u00b4s strf structure plus optionally some\nextradata from input data. This function takes ownership of <em>buf</em>.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters3\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>caller element (used for debugging/error).</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>buf:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>input data to be used for parsing, stripped from header.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>strf:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer (returned by this function) to a filled-in\nstrf/vids structure. Caller should free it.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer (returned by this function) to a buffer\ncontaining extradata for this particular stream (e.g.\npalette, codec initialization data).</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns3\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>TRUE if parsing succeeded, otherwise FALSE. The stream\nshould be skipped on error, but it is not fatal.</p>\n\n\t</td>\n\t<td>\n\t\tint \n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});