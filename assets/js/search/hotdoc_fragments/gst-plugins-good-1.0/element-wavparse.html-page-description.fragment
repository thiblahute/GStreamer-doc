fragment_downloaded_cb({"url": "gst-plugins-good-1.0/element-wavparse.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-wavparse\">\n        <h1 id=\"wavparse\">wavparse</h1><p>Parse a .wav file into raw or compressed audio.</p>\n<p>Wavparse supports both push and pull mode operations, making it possible to\nstream from a network source.</p>\n<h2 id=\"example-launch-line\">Example launch line</h2>\n<pre><code class=\"language-[\"> gst-launch-1.0 filesrc location=sine.wav ! wavparse ! audioconvert ! alsasink\n ]| Read a wav file and output to the soundcard using the ALSA element. The\n wav file is assumed to contain raw uncompressed samples.\n |[\n gst-launch-1.0 gnomevfssrc location=http://www.example.org/sine.wav ! queue ! wavparse ! audioconvert ! alsasink\n ]| Stream data from a network url.\n</code></pre>\n\n        \n\n            <h2 class=\"symbol_section\" id=\"Pad_Templates\">Pad Templates</h2>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstWavParse-&gt;sink\">\n\t\t<h3 id=\"sink\">\n    sink:\n</h3>\n<table>\n    <tbody>\n        <tr><td><b>Presence:</b></td><td>always</td></tr>\n        <tr><td><b>Direction:</b></td><td>sink</td></tr>\n        <tr><td><b>Capabilities:</b></td><td>audio/x-wav</td></tr>\n    </tbody>\n</table>\n\n\t\t\t\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstWavParse-&gt;src\">\n\t\t<h3 id=\"src\">\n    src:\n</h3>\n<table>\n    <tbody>\n        <tr><td><b>Presence:</b></td><td>always</td></tr>\n        <tr><td><b>Direction:</b></td><td>src</td></tr>\n        <tr><td><b>Capabilities:</b></td><td>audio/ms-gsm; audio/mpeg, mpegversion=(int)1, layer=(int)3; audio/mpeg, mpegversion=(int)1, layer=(int)2; audio/x-raw, format=(string){ S8, U8, S16LE, U16LE, S24LE, U24LE, S32LE, U32LE }, layout=(string)interleaved; audio/x-vorbis; audio/x-ac3; audio/x-dts; audio/mpeg, mpegversion=(int)4; audio/x-alaw; audio/x-mulaw; audio/x-wms, bitrate=(int)[ 0, 2147483647 ], block_align=(int)[ 1, 2147483647 ]; audio/x-adpcm, layout=(string)microsoft, block_align=(int)[ 1, 2147483647 ]; audio/x-adpcm, layout=(string)dvi, block_align=(int)[ 1, 2147483647 ]; audio/x-truespeech; audio/x-wma, wmaversion=(int)1, bitrate=(int)[ 0, 2147483647 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)2, bitrate=(int)[ 0, 2147483647 ], block_align=(int)[ 1, 2147483647 ]; audio/x-wma, wmaversion=(int)3, bitrate=(int)[ 0, 2147483647 ], block_align=(int)[ 1, 2147483647 ]; audio/x-vnd.sony.atrac3; audio/x-raw, format=(string){ F32LE, F64LE }, layout=(string)interleaved; audio/x-voxware, voxwaretype=(int)117; audio/x-adpcm, layout=(string)dk4; audio/x-adpcm, layout=(string)dk3; audio/x-adpcm, layout=(string)dvi; audio/AMR; audio/AMR-WB; audio/x-siren; application/x-ogg-avi</td></tr>\n    </tbody>\n</table>\n\n\t\t\t\n</div>\n\n\n            <h2 class=\"symbol_section\" id=\"Properties\">Properties</h2>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstWavParse:ignore-length\">\n\t\t\n<h3 class=\"method\" id=\"ignorelength\">\n\t<span><code>ignore-length</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cignore-length\u201d <span class=\"type\"><a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a></span>\n</pre>\n\n<p>This selects whether the length found in a data chunk\nshould be ignored. This may be useful for streamed audio\nwhere the length is unknown until the end of streaming,\nand various software/hardware just puts some random value\nin there and hopes it doesn't break too much.</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n</p>\n<p>\n\tDefault value :\tfalse\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstWavParse:name\">\n\t\t\n<h3 class=\"method\" id=\"name\">\n\t<span><code>name</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cname\u201d <span class=\"type\"><a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> *</span>\n</pre>\n\n<p>The name of the object</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tConstruct\n\t\t\t\n</p>\n<p>\n\tDefault value :\twavparse0\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstWavParse:parent\">\n\t\t\n<h3 class=\"method\" id=\"parent\">\n\t<span><code>parent</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cparent\u201d <span class=\"type\"><a title=\"GstObject\" href=\"../libgstreamer-1.0/c/gstobject.html#GstObject\">GstObject</a> *</span>\n</pre>\n\n<p>The parent of the object</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n</p>\n\n</div>\n\n\n    </div>\n\n\n        "});