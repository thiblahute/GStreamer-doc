fragment_downloaded_cb({"url": "gst-plugins-good-1.0/element-rganalysis.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-rganalysis\">\n        <h1 id=\"rganalysis1\">rganalysis</h1><p>This element analyzes raw audio sample data in accordance with the proposed\n<ulink url=\"http://replaygain.org\">ReplayGain standard</ulink> for\ncalculating the ideal replay gain for music tracks and albums.  The element\nis designed as a pass-through filter that never modifies any data.  As it\nreceives an EOS event, it finalizes the ongoing analysis and generates a tag\nlist containing the results.  It is sent downstream with a tag event and\nposted on the message bus with a tag message.  The EOS event is forwarded as\nnormal afterwards.  Result tag lists at least contain the tags\n<a href=\"../libgstreamer-1.0/c/gsttaglist.html#GST_TAG_TRACK_GAIN\">GST_TAG_TRACK_GAIN</a>, <a href=\"../libgstreamer-1.0/c/gsttaglist.html#GST_TAG_TRACK_PEAK\">GST_TAG_TRACK_PEAK</a> and <a href=\"../libgstreamer-1.0/c/gsttaglist.html#GST_TAG_REFERENCE_LEVEL\">GST_TAG_REFERENCE_LEVEL</a>.</p>\n<p>Because the generated metadata tags become available at the end of streams,\ndownstream muxer and encoder elements are normally unable to save them in\ntheir output since they generally save metadata in the file header.\nTherefore, it is often necessary that applications read the results in a bus\nevent handler for the tag message.  Obtaining the values this way is always\nneeded for album processing (see <a href=\"element-rganalysis.html#GstRgAnalysis:num-tracks\">num-tracks</a> property) since\nthe album gain and peak values need to be associated with all tracks of an\nalbum, not just the last one.</p>\n<h2 id=\"example-launch-lines\">Example launch lines</h2>\n<pre><code class=\"language-[\"> gst-launch-1.0 -t audiotestsrc wave=sine num-buffers=512 ! rganalysis ! fakesink\n ]| Analyze a simple test waveform\n |[\n gst-launch-1.0 -t filesrc location=filename.ext ! decodebin \\\n     ! audioconvert ! audioresample ! rganalysis ! fakesink\n ]| Analyze a given file\n |[\n gst-launch-1.0 -t gnomevfssrc location=http://replaygain.hydrogenaudio.org/ref_pink.wav \\\n     ! wavparse ! rganalysis ! fakesink\n ]| Analyze the pink noise reference file\n\n The above launch line yields a result gain of +6 dB (instead of the expected\n +0 dB).  This is not in error, refer to the #GstRgAnalysis:reference-level\n property documentation for more information.\n\n ## Acknowledgements\n\n This element is based on code used in the &lt;ulink\n url=\"http://sjeng.org/vorbisgain.html\"&gt;vorbisgain&lt;/ulink&gt; program and many\n others.  The relevant parts are copyrighted by David Robinson, Glen Sawyer\n and Frank Klemm.\n</code></pre>\n\n        \n\n            <h2 class=\"symbol_section\" id=\"Classes\">Classes</h2>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"rganalysis\">\n\t\t\t\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstBaseTransform\" href=\"../libgstbase-1.0/c/gstbasetransform.html#GstBaseTransform\">GstBaseTransform</a>\n                    <span class=\"lineart\">\u2570\u2500\u2500</span>rganalysis\n</pre>\n\n</div>\n\n</div>\n\n\n\n\n</div>\n\n\n            <h2 class=\"symbol_section\" id=\"Pad_Templates\">Pad Templates</h2>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgAnalysis-&gt;sink\">\n\t\t<h3 id=\"sink\">\n    sink:\n</h3>\n<table>\n    <tbody>\n        <tr><td><b>Presence:</b></td><td>always</td></tr>\n        <tr><td><b>Direction:</b></td><td>sink</td></tr>\n        <tr><td><b>Capabilities:</b></td><td>audio/x-raw, format=(string){ F32LE, S16LE }, layout=(string)interleaved, channels=(int)1, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }; audio/x-raw, format=(string){ F32LE, S16LE }, layout=(string)interleaved, channels=(int)2, channel-mask=(bitmask)0x0000000000000003, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }</td></tr>\n    </tbody>\n</table>\n\n\t\t\t\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgAnalysis-&gt;src\">\n\t\t<h3 id=\"src\">\n    src:\n</h3>\n<table>\n    <tbody>\n        <tr><td><b>Presence:</b></td><td>always</td></tr>\n        <tr><td><b>Direction:</b></td><td>src</td></tr>\n        <tr><td><b>Capabilities:</b></td><td>audio/x-raw, format=(string){ F32LE, S16LE }, layout=(string)interleaved, channels=(int)1, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }; audio/x-raw, format=(string){ F32LE, S16LE }, layout=(string)interleaved, channels=(int)2, channel-mask=(bitmask)0x0000000000000003, rate=(int){ 8000, 11025, 12000, 16000, 22050, 24000, 32000, 44100, 48000 }</td></tr>\n    </tbody>\n</table>\n\n\t\t\t\n</div>\n\n\n            <h2 class=\"symbol_section\" id=\"Properties\">Properties</h2>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgAnalysis:forced\">\n\t\t\n<h3 class=\"method\" id=\"forced\">\n\t<span><code>forced</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cforced\u201d <span class=\"type\"><a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a></span>\n</pre>\n\n<p>Whether to analyze streams even when ReplayGain tags exist.</p>\n<p>For assisting transcoder/converter applications, the element can silently\nskip the processing of streams that already contain the necessary tags.\nData will flow as usual but the element will not consume CPU time and will\nnot generate result tags.  To enable possible skipping, set this property\nto <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a>.</p>\n<p>If used in conjunction with <link linkend=\"GstRgAnalysis--num-tracks\">album\nprocessing, the element will skip the number of remaining album\ntracks if a full set of tags is found for the first track.  If a subsequent\ntrack of the album is missing tags, processing cannot start again.  If this\nis undesired, the application has to scan all files beforehand and enable\nforcing of processing if needed.</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n</p>\n<p>\n\tDefault value :\ttrue\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgAnalysis:message\">\n\t\t\n<h3 class=\"method\" id=\"message\">\n\t<span><code>message</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cmessage\u201d <span class=\"type\"><a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a></span>\n</pre>\n\n<p>Post statics messages</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tConstruct\n\t\t\t\n</p>\n<p>\n\tDefault value :\tfalse\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgAnalysis:name\">\n\t\t\n<h3 class=\"method\" id=\"name\">\n\t<span><code>name</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cname\u201d <span class=\"type\"><a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> *</span>\n</pre>\n\n<p>The name of the object</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tConstruct\n\t\t\t\n</p>\n<p>\n\tDefault value :\trganalysis0\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgAnalysis:num-tracks\">\n\t\t\n<h3 class=\"method\" id=\"numtracks\">\n\t<span><code>num-tracks</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cnum-tracks\u201d <span class=\"type\"><a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a></span>\n</pre>\n\n<p>Number of remaining album tracks.</p>\n<p>Analyzing several streams sequentially and assigning them a common result\ngain is known as \"album processing\".  If this gain is used during playback\n(by switching to \"album mode\"), all tracks of an album receive the same\namplification.  This keeps the relative volume levels between the tracks\nintact.  To enable this, set this property to the number of streams that\nwill be processed as album tracks.</p>\n<p>Every time an EOS event is received, the value of this property is\ndecremented by one.  As it reaches zero, it is assumed that the last track\nof the album finished.  The tag list for the final stream will contain the\nadditional tags <a href=\"../libgstreamer-1.0/c/gsttaglist.html#GST_TAG_ALBUM_GAIN\">GST_TAG_ALBUM_GAIN</a> and <a href=\"../libgstreamer-1.0/c/gsttaglist.html#GST_TAG_ALBUM_PEAK\">GST_TAG_ALBUM_PEAK</a>.  All other\nstreams just get the two track tags posted because the values for the album\ntags are not known before all tracks are analyzed.  Applications need to\nensure that the album gain and peak values are also associated with the\nother tracks when storing the results.</p>\n<p>If the total number of album tracks is unknown beforehand, just ensure that\nthe value is greater than 1 before each track starts.  Then before the end\nof the last track, set it to the value 1.</p>\n<p>To perform album processing, the element has to preserve data between\nstreams.  This cannot survive a state change to the NULL or READY state.\nIf you change your pipeline's state to NULL or READY between tracks, lock\nthe element's state using <a href=\"../libgstreamer-1.0/c/gstelement.html#gst_element_set_locked_state\">gst_element_set_locked_state</a> when it is in\nPAUSED or PLAYING.</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n</p>\n<p>\n\tDefault value :\t0\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgAnalysis:parent\">\n\t\t\n<h3 class=\"method\" id=\"parent\">\n\t<span><code>parent</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cparent\u201d <span class=\"type\"><a title=\"GstObject\" href=\"../libgstreamer-1.0/c/gstobject.html#GstObject\">GstObject</a> *</span>\n</pre>\n\n<p>The parent of the object</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgAnalysis:qos\">\n\t\t\n<h3 class=\"method\" id=\"qos\">\n\t<span><code>qos</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cqos\u201d <span class=\"type\"><a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a></span>\n</pre>\n\n<p>Handle Quality-of-Service events</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n</p>\n<p>\n\tDefault value :\tfalse\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgAnalysis:reference-level\">\n\t\t\n<h3 class=\"method\" id=\"referencelevel\">\n\t<span><code>reference-level</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201creference-level\u201d <span class=\"type\"><a title=\"gdouble\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a></span>\n</pre>\n\n<p>Reference level [dB].</p>\n<p>Analyzing the ReplayGain pink noise reference waveform computes a result of\n+6 dB instead of the expected 0 dB.  This is because the default reference\nlevel is 89 dB.  To obtain values as lined out in the original proposal of\nReplayGain, set this property to 83.</p>\n<p>Almost all software uses 89 dB as a reference however, and this value has\nbecome the new official value.  That is to say, while the change has been\nacclaimed by the author of the ReplayGain proposal, the <ulink url=\"http://replaygain.org\">webpage</ulink> is still outdated at the time\nof this writing.</p>\n<p>The value was changed because the original proposal recommends a default\npre-amp value of +6 dB for playback.  This seemed a bit odd, as it means\nthat the algorithm has the general tendency to produce adjustment values\nthat are 6 dB too low.  Bumping the reference level by 6 dB compensated for\nthis.</p>\n<p>The problem of the reference level being ambiguous for lack of concise\nstandardization is to be solved by adopting the <a href=\"../libgstreamer-1.0/c/gsttaglist.html#GST_TAG_REFERENCE_LEVEL\">GST_TAG_REFERENCE_LEVEL</a>\ntag, which allows to store the used value alongside the gain values.</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n</p>\n<p>\n\tDefault value :\t89\n</p>\n\n</div>\n\n\n    </div>\n\n\n        "});