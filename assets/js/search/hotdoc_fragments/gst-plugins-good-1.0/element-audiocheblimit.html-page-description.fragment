fragment_downloaded_cb({"url": "gst-plugins-good-1.0/element-audiocheblimit.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-audiocheblimit\">\n<h1 id=\"audiocheblimit1\">audiocheblimit</h1><p>Attenuates all frequencies above the cutoff frequency (low-pass) or all frequencies below the\ncutoff frequency (high-pass). The number of poles and the ripple parameter control the rolloff.</p>\n<p>This element has the advantage over the windowed sinc lowpass and highpass filter that it is\nmuch faster and produces almost as good results. It's only disadvantages are the highly\nnon-linear phase and the slower rolloff compared to a windowed sinc filter with a large kernel.</p>\n<p>For type 1 the ripple parameter specifies how much ripple in dB is allowed in the passband, i.e.\nsome frequencies in the passband will be amplified by that value. A higher ripple value will allow\na faster rolloff.</p>\n<p>For type 2 the ripple parameter specifies the stopband attenuation. In the stopband the gain will\nbe at most this value. A lower ripple value will allow a faster rolloff.</p>\n<p>As a special case, a Chebyshev type 1 filter with no ripple is a Butterworth filter.</p>\n<blockquote>\n<p>Be warned that a too large number of poles can produce noise. The most poles are possible with\na cutoff frequency at a quarter of the sampling rate.</p>\n</blockquote>\n<h2 id=\"example-launch-line\">Example launch line</h2>\n<pre><code class=\"language-[\"> gst-launch-1.0 audiotestsrc freq=1500 ! audioconvert ! audiocheblimit mode=low-pass cutoff=1000 poles=4 ! audioconvert ! alsasink\n gst-launch-1.0 filesrc location=\"melo1.ogg\" ! oggdemux ! vorbisdec ! audioconvert ! audiocheblimit mode=high-pass cutoff=400 ripple=0.2 ! audioconvert ! alsasink\n gst-launch-1.0 audiotestsrc wave=white-noise ! audioconvert ! audiocheblimit mode=low-pass cutoff=800 type=2 ! audioconvert ! alsasink\n</code></pre>\n\n</div>\n\n\n"});