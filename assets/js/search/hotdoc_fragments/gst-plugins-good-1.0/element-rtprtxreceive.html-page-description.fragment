fragment_downloaded_cb({"url": "gst-plugins-good-1.0/element-rtprtxreceive.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-rtprtxreceive\">\n        <h1 id=\"rtprtxreceive1\">rtprtxreceive</h1><p>rtprtxreceive listens to the retransmission events from the\ndownstream rtpjitterbuffer and remembers the SSRC (ssrc1) of the stream and\nthe sequence number that was requested. When it receives a packet with\na sequence number equal to one of the ones stored and with a different SSRC,\nit identifies the new SSRC (ssrc2) as the retransmission stream of ssrc1.\nFrom this point on, it replaces ssrc2 with ssrc1 in all packets of the\nssrc2 stream and flags them as retransmissions, so that rtpjitterbuffer\ncan reconstruct the original stream.</p>\n<p>This algorithm is implemented as specified in RFC 4588.</p>\n<p>This element is meant to be used with rtprtxsend on the sender side.\nSee <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-good/html/gst-plugins-good-plugins-rtprtxsend.html#GstRtpRtxSend-struct\">GstRtpRtxSend</a></p>\n<p>Below you can see some examples that illustrate how rtprtxreceive and\nrtprtxsend fit among the other rtp elements and how they work internally.\nNormally, hoewever, you should avoid using such pipelines and use\nrtpbin instead, with its <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-good/html/gst-plugins-good-plugins-rtpbin.html#GstRtpBin-request-aux-sender\">GstRtpBin::request-aux-sender</a> and\n<a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-good/html/gst-plugins-good-plugins-rtpbin.html#GstRtpBin-request-aux-receiver\">GstRtpBin::request-aux-receiver</a> signals. See <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-good/html/gst-plugins-good-plugins-rtpbin.html#GstRtpBin-struct\">GstRtpBin</a>.</p>\n<h2 id=\"example-pipelines\">Example pipelines</h2>\n<pre><code class=\"language-[\"> gst-launch-1.0 rtpsession name=rtpsession rtp-profile=avpf \\\n     audiotestsrc is-live=true ! opusenc ! rtpopuspay pt=96 ! \\\n         rtprtxsend payload-type-map=\"application/x-rtp-pt-map,96=(uint)97\" ! \\\n         rtpsession.send_rtp_sink \\\n     rtpsession.send_rtp_src ! identity drop-probability=0.01 ! \\\n         udpsink host=\"127.0.0.1\" port=5000 \\\n     udpsrc port=5001 ! rtpsession.recv_rtcp_sink \\\n     rtpsession.send_rtcp_src ! udpsink host=\"127.0.0.1\" port=5002 \\\n         sync=false async=false\n ]| Send audio stream through port 5000 (5001 and 5002 are just the rtcp\n link with the receiver)\n\n |[\n gst-launch-1.0 rtpsession name=rtpsession rtp-profile=avpf \\\n     udpsrc port=5000 caps=\"application/x-rtp,media=(string)audio,clock-rate=(int)48000,encoding-name=(string)OPUS,payload=(int)96\" ! \\\n         rtpsession.recv_rtp_sink \\\n     rtpsession.recv_rtp_src ! \\\n         rtprtxreceive payload-type-map=\"application/x-rtp-pt-map,96=(uint)97\" ! \\\n         rtpssrcdemux ! rtpjitterbuffer do-retransmission=true ! \\\n         rtpopusdepay ! opusdec ! audioconvert ! audioresample ! autoaudiosink \\\n     rtpsession.send_rtcp_src ! \\\n         udpsink host=\"127.0.0.1\" port=5001 sync=false async=false \\\n     udpsrc port=5002 ! rtpsession.recv_rtcp_sink\n</code></pre>\n<p>Receive audio stream from port 5000 (5001 and 5002 are just the rtcp\nlink with the sender)</p>\n<p>In this example we can see a simple streaming of an OPUS stream with some\nof the packets being artificially dropped by the identity element.\nThanks to retransmission, you should still hear a clear sound when setting\ndrop-probability to something greater than 0.</p>\n<p>Internally, the rtpjitterbuffer will generate a custom upstream event,\nGstRTPRetransmissionRequest, when it detects that one packet is missing.\nThen this request is translated to a FB NACK in the rtcp link by rtpsession.\nFinally the rtpsession of the sender side will re-convert it in a\nGstRTPRetransmissionRequest that will be handled by rtprtxsend. rtprtxsend\nwill then re-send the missing packet with a new srrc and a different payload\ntype (here, 97), but with the same original sequence number. On the receiver\nside, rtprtxreceive will associate this new stream with the original and\nforward the retransmission packets to rtpjitterbuffer with the original\nssrc and payload type.</p>\n<pre><code class=\"language-[\"> gst-launch-1.0 rtpsession name=rtpsession rtp-profile=avpf \\\n     audiotestsrc is-live=true ! opusenc ! rtpopuspay pt=97 seqnum-offset=1 ! \\\n         rtprtxsend payload-type-map=\"application/x-rtp-pt-map,97=(uint)99\" ! \\\n         funnel name=f ! rtpsession.send_rtp_sink \\\n     audiotestsrc freq=660.0 is-live=true ! opusenc ! \\\n         rtpopuspay pt=97 seqnum-offset=100 ! \\\n         rtprtxsend payload-type-map=\"application/x-rtp-pt-map,97=(uint)99\" ! \\\n         f. \\\n     rtpsession.send_rtp_src ! identity drop-probability=0.01 ! \\\n         udpsink host=\"127.0.0.1\" port=5000 \\\n     udpsrc port=5001 ! rtpsession.recv_rtcp_sink \\\n     rtpsession.send_rtcp_src ! udpsink host=\"127.0.0.1\" port=5002 \\\n         sync=false async=false\n</code></pre>\n<p>Send two audio streams to port 5000.</p>\n<pre><code class=\"language-[\"> gst-launch-1.0 rtpsession name=rtpsession rtp-profile=avpf \\\n     udpsrc port=5000 caps=\"application/x-rtp,media=(string)audio,clock-rate=(int)48000,encoding-name=(string)OPUS,payload=(int)97\" ! \\\n         rtpsession.recv_rtp_sink \\\n     rtpsession.recv_rtp_src ! \\\n         rtprtxreceive payload-type-map=\"application/x-rtp-pt-map,97=(uint)99\" ! \\\n         rtpssrcdemux name=demux \\\n     demux. ! queue ! rtpjitterbuffer do-retransmission=true ! rtpopusdepay ! \\\n         opusdec ! audioconvert ! autoaudiosink \\\n     demux. ! queue ! rtpjitterbuffer do-retransmission=true ! rtpopusdepay ! \\\n         opusdec ! audioconvert ! autoaudiosink \\\n     udpsrc port=5002 ! rtpsession.recv_rtcp_sink \\\n     rtpsession.send_rtcp_src ! udpsink host=\"127.0.0.1\" port=5001 \\\n         sync=false async=false\n</code></pre>\n<p>Receive two audio streams from port 5000.</p>\n<p>In this example we are streaming two streams of the same type through the\nsame port. They, however, are using a different SSRC (ssrc is randomly\ngenerated on each payloader - rtpopuspay in this example), so they can be\nidentified and demultiplexed by rtpssrcdemux on the receiver side. This is\nan example of SSRC-multiplexing.</p>\n<p>It is important here to use a different starting sequence number\n(seqnum-offset), since this is the only means of identification that\nrtprtxreceive uses the very first time to identify retransmission streams.\nIt is an error, according to RFC4588 to have two retransmission requests for\npackets belonging to two different streams but with the same sequence number.\nNote that the default seqnum-offset value (-1, which means random) would\nwork just fine, but it is overriden here for illustration purposes.</p>\n\n        \n\n            <h2 class=\"symbol_section\" id=\"Classes\">Classes</h2>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"rtprtxreceive\">\n\t\t\t\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span>rtprtxreceive\n</pre>\n\n</div>\n\n</div>\n\n\n\n\n</div>\n\n\n            <h2 class=\"symbol_section\" id=\"Pad_Templates\">Pad Templates</h2>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRtpRtxReceive-&gt;sink\">\n\t\t<h3 id=\"sink\">\n    sink:\n</h3>\n<table>\n    <tbody>\n        <tr><td><b>Presence:</b></td><td>always</td></tr>\n        <tr><td><b>Direction:</b></td><td>sink</td></tr>\n        <tr><td><b>Capabilities:</b></td><td>application/x-rtp</td></tr>\n    </tbody>\n</table>\n\n\t\t\t\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRtpRtxReceive-&gt;src\">\n\t\t<h3 id=\"src\">\n    src:\n</h3>\n<table>\n    <tbody>\n        <tr><td><b>Presence:</b></td><td>always</td></tr>\n        <tr><td><b>Direction:</b></td><td>src</td></tr>\n        <tr><td><b>Capabilities:</b></td><td>application/x-rtp</td></tr>\n    </tbody>\n</table>\n\n\t\t\t\n</div>\n\n\n            <h2 class=\"symbol_section\" id=\"Properties\">Properties</h2>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRtpRtxReceive:name\">\n\t\t\n<h3 class=\"method\" id=\"name\">\n\t<span><code>name</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cname\u201d <span class=\"type\"><a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> *</span>\n</pre>\n\n<p>The name of the object</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tConstruct\n\t\t\t\n</p>\n<p>\n\tDefault value :\trtprtxreceive0\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRtpRtxReceive:num-rtx-assoc-packets\">\n\t\t\n<h3 class=\"method\" id=\"numrtxassocpackets\">\n\t<span><code>num-rtx-assoc-packets</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cnum-rtx-assoc-packets\u201d <span class=\"type\"><a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a></span>\n</pre>\n\n<p>Number of retransmission packets correctly associated with retransmission requests</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n</p>\n<p>\n\tDefault value :\t0\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRtpRtxReceive:num-rtx-packets\">\n\t\t\n<h3 class=\"method\" id=\"numrtxpackets\">\n\t<span><code>num-rtx-packets</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cnum-rtx-packets\u201d <span class=\"type\"><a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a></span>\n</pre>\n\n<p>Number of retransmission packets received</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n</p>\n<p>\n\tDefault value :\t0\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRtpRtxReceive:num-rtx-requests\">\n\t\t\n<h3 class=\"method\" id=\"numrtxrequests\">\n\t<span><code>num-rtx-requests</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cnum-rtx-requests\u201d <span class=\"type\"><a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a></span>\n</pre>\n\n<p>Number of retransmission events received</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n</p>\n<p>\n\tDefault value :\t0\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRtpRtxReceive:parent\">\n\t\t\n<h3 class=\"method\" id=\"parent\">\n\t<span><code>parent</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cparent\u201d <span class=\"type\"><a title=\"GstObject\" href=\"../libgstreamer-1.0/c/gstobject.html#GstObject\">GstObject</a> *</span>\n</pre>\n\n<p>The parent of the object</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRtpRtxReceive:payload-type-map\">\n\t\t\n<h3 class=\"method\" id=\"payloadtypemap\">\n\t<span><code>payload-type-map</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cpayload-type-map\u201d <span class=\"type\"><a title=\"GstStructure\" href=\"../libgstreamer-1.0/c/gststructure.html#GstStructure\">GstStructure</a> *</span>\n</pre>\n\n<p>Map of original payload types to their retransmission payload types</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n</p>\n\n</div>\n\n\n    </div>\n\n\n        "});