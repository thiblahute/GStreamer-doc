fragment_downloaded_cb({"url": "gst-plugins-good-1.0/element-deinterleave.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-deinterleave\">\n<h1 id=\"deinterleave\">deinterleave</h1><p>Splits one interleaved multichannel audio stream into many mono audio streams.</p>\n<p>This element handles all raw audio formats and supports changing the input caps as long as\nall downstream elements can handle the new caps and the number of channels and the channel\npositions stay the same. This restriction will be removed in later versions by adding or\nremoving some source pads as required.</p>\n<p>In most cases a queue and an audioconvert element should be added after each source pad\nbefore further processing of the audio data.</p>\n<h2 id=\"example-launch-line\">Example launch line</h2>\n<pre><code class=\"language-[\"> gst-launch-1.0 filesrc location=/path/to/file.mp3 ! decodebin ! audioconvert ! \"audio/x-raw,channels=2 ! deinterleave name=d  d.src_0 ! queue ! audioconvert ! vorbisenc ! oggmux ! filesink location=channel1.ogg  d.src_1 ! queue ! audioconvert ! vorbisenc ! oggmux ! filesink location=channel2.ogg\n ]| Decodes an MP3 file and encodes the left and right channel into separate\n Ogg Vorbis files.\n |[\n gst-launch-1.0 filesrc location=file.mp3 ! decodebin ! audioconvert ! \"audio/x-raw,channels=2\" ! deinterleave name=d  interleave name=i ! audioconvert ! wavenc ! filesink location=test.wav    d.src_0 ! queue ! audioconvert ! i.sink_1    d.src_1 ! queue ! audioconvert ! i.sink_0\n ]| Decodes and deinterleaves a Stereo MP3 file into separate channels and\n then interleaves the channels again to a WAV file with the channel with the\n channels exchanged.\n</code></pre>\n\n</div>\n\n\n        "});