fragment_downloaded_cb({"url": "gst-plugins-good-1.0/element-capssetter.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-capssetter\">\n<h1 id=\"capssetter1\">capssetter</h1><p>Sets or merges caps on a stream's buffers. That is, a buffer's caps are\nupdated using (fields of) <a href=\"element-capssetter.html#GstCapsSetter:caps\">caps</a>. Note that this may contain\nmultiple structures (though not likely recommended), but each of these must\nbe fixed (or will otherwise be rejected).</p>\n<p>If <a href=\"element-capssetter.html#GstCapsSetter:join\">join</a> is <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>, then the incoming caps' mime-type is\ncompared to the mime-type(s) of provided caps and only matching structure(s)\nare considered for updating.</p>\n<p>If <a href=\"element-capssetter.html#GstCapsSetter:replace\">replace</a> is <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>, then any caps update is preceded by\nclearing existing fields, making provided fields (as a whole) replace\nincoming ones. Otherwise, no clearing is performed, in which case provided\nfields are added/merged onto incoming caps</p>\n<p>Although this element might mainly serve as debug helper,\nit can also practically be used to correct a faulty pixel-aspect-ratio,\nor to modify a yuv fourcc value to effectively swap chroma components or such\nalike.</p>\n\n</div>\n\n\n"});