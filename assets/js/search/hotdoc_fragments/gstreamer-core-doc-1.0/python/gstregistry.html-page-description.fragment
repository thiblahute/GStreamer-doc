fragment_downloaded_cb({"url": "gstreamer-core-doc-1.0/python/gstregistry.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstregistry.h\">\n<h1 id=\"gstregistryclass\">GstRegistryClass</h1><p>One registry holds the metadata of a set of plugins.</p>\n<p><emphasis role=\"bold\">Design:</emphasis></p>\n<p>The <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstRegistry.html#GstRegistry-struct\">Gst.Registry</a> object is a list of plugins and some functions for dealing\nwith them. Each <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstPlugin.html#GstPlugin-struct\">Gst.Plugin</a> is matched 1-1 with a file on disk, and may or may\nnot be loaded at a given time.</p>\n<p>The primary source, at all times, of plugin information is each plugin file\nitself. Thus, if an application wants information about a particular plugin,\nor wants to search for a feature that satisfies given criteria, the primary\nmeans of doing so is to load every plugin and look at the resulting\ninformation that is gathered in the default registry. Clearly, this is a time\nconsuming process, so we cache information in the registry file. The format\nand location of the cache file is internal to gstreamer.</p>\n<p>On startup, plugins are searched for in the plugin search path. The following\nlocations are checked in this order:</p>\n<ul>\n<li>location from --gst-plugin-path commandline option.</li>\n<li>the GST_PLUGIN_PATH environment variable.</li>\n<li>the GST_PLUGIN_SYSTEM_PATH environment variable.</li>\n<li>default locations (if GST_PLUGIN_SYSTEM_PATH is not set).\nThose default locations are:\n<code>$XDG_DATA_HOME/gstreamer-$GST_API_VERSION/plugins/</code>\nand <code>$prefix/libs/gstreamer-$GST_API_VERSION/</code>.\n<a href=\"http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html\">$XDG_DATA_HOME</a> defaults to\n<code>$HOME/.local/share</code>.</li>\n</ul>\n<p>The registry cache file is loaded from\n<code>$XDG_CACHE_HOME/gstreamer-$GST_API_VERSION/registry-$ARCH.bin</code>\n(where $XDG_CACHE_HOME defaults to <code>$HOME/.cache</code>) or the file listed in the <code>GST_REGISTRY</code>\nenv var. One reason to change the registry location is for testing.</p>\n<p>For each plugin that is found in the plugin search path, there could be 3\npossibilities for cached information:</p>\n<ul>\n<li>the cache may not contain information about a given file.</li>\n<li>the cache may have stale information.</li>\n<li>the cache may have current information.</li>\n</ul>\n<p>In the first two cases, the plugin is loaded and the cache updated. In\naddition to these cases, the cache may have entries for plugins that are not\nrelevant to the current process. These are marked as not available to the\ncurrent process. If the cache is updated for whatever reason, it is marked\ndirty.</p>\n<p>A dirty cache is written out at the end of initialization. Each entry is\nchecked to make sure the information is minimally valid. If not, the entry is\nsimply dropped.</p>\n<h2 id=\"implementation-notes\">Implementation notes:</h2>\n<p>The \"cache\" and \"registry\" are different concepts and can represent\ndifferent sets of plugins. For various reasons, at init time, the cache is\nstored in the default registry, and plugins not relevant to the current\nprocess are marked with the <a href=\"../../gstreamer-core-doc-1.0/python/gstplugin.html#GST_PLUGIN_FLAG_CACHED\">Gst.PluginFlags.cached</a> bit. These plugins are\nremoved at the end of initialization.</p>\n\n</div>\n\n\n"});