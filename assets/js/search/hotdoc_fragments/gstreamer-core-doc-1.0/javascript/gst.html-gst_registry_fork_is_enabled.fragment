fragment_downloaded_cb({"url": "gstreamer-core-doc-1.0/javascript/gst.html#gst_registry_fork_is_enabled", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_registry_fork_is_enabled\">\n\t\t<h3 id=\"gstregistryprototypefork_is_enabled\">\n\t<span><code>Gst.Registry.prototype.fork_is_enabled</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\nfunction Gst.Registry.prototype.fork_is_enabled(): {\n    // javascript wrapper for 'gst_registry_fork_is_enabled'\n}</pre>\n\n<p>By default GStreamer will perform scanning and rebuilding of the\nregistry file using a helper child process.</p>\n<p>Applications might want to disable this behaviour with the\n<a href=\"../../gstreamer-core-doc-1.0/javascript/gst.html#gst_registry_fork_set_enabled\">Gst.Registry.prototype.fork_set_enabled</a> function, in which case new plugins\nare scanned (and loaded) into the application process.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns4\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">true</a> if GStreamer will use the child helper process when\nrebuilding the registry.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Number\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/Number\">Number</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});