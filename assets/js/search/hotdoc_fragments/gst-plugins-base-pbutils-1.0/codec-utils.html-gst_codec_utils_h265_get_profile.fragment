fragment_downloaded_cb({"url": "gst-plugins-base-pbutils-1.0/codec-utils.html#gst_codec_utils_h265_get_profile", "fragment": "prototype.codec_utils_h265_get_profile \nGstPbutils.codec_utils_h265_get_profile \ngst_codec_utils_h265_get_profile \nConverts the profile indication general_profile_idc in the stream s profile_level_tier structure into a string. The profile_tier_level is expected to have the following format as defined in the H.265 specification. The profile_tier_level is viewed as a bitstream here with bit being the most significant bit of the first byte. \nParameters \nPointer to the profile_tier_level structure for the stream. \nLength of the data available in profile_tier_level \nThe profile as a const string or null if there is an error. \nSince \nConverts the profile indication general_profile_idc in the stream s profile_level_tier structure into a string. The profile_tier_level is expected to have the following format as defined in the H.265 specification. The profile_tier_level is viewed as a bitstream here with bit being the most significant bit of the first byte. \nParameters \nPointer to the profile_tier_level structure for the stream. \nLength of the data available in profile_tier_level \nThe profile as a const string or None if there is an error. \nSince \nConverts the profile indication general_profile_idc in the stream s profile_level_tier structure into a string. The profile_tier_level is expected to have the following format as defined in the H.265 specification. The profile_tier_level is viewed as a bitstream here with bit being the most significant bit of the first byte. \nParameters \nPointer to the profile_tier_level structure for the stream. \nLength of the data available in profile_tier_level \nThe profile as a const string or NULL if there is an error. \nSince \n"});