fragment_downloaded_cb({"url": "gst-plugins-base-pbutils-1.0/python/install-plugins.html#page-description", "fragment": "Arguments passed to the install helper \nDetail string describing the missing plugin \nExit codes the installer should return \nHow to map the required detail string to packages \nGStreamer will pass the following arguments to the install helper this is in addition to the path of the executable itself which is by convention argv \nnone to many optional arguments in the form of foo bar val. Example transient for XID where XID is the X Window ID of the main window of the calling application so the installer can make itself transient to that window Unknown optional arguments should be ignored by the installer. \none installer detail string argument for each plugin to be installed these strings will have a gstreamer prefix the exact format of the detail string is explained below \nThe string is in UTF encoding and is made up of several fields separated by characters but neither the first nor the last character is a The fields are \nAn entire ID string might then look like this for example gstreamer totem Vorbis audio decoder decoder audio x vorbis \nPlugin installers parsing this ID string should expect further fields also separated by symbols and either ignore them warn the user or error out when encountering them. \nThose unfamiliar with the GStreamer caps system should note a few things about the caps string used in the above decoder encoder case \nThe installer should return one of the following exit codes when it exits \nIt is up to the vendor to find mechanism to map required components from the detail string to the actual packages plugins to install. This could be a hardcoded list of mappings for example or be part of the packaging system metadata. \nGStreamer plugin files can be introspected for this information. The gst inspect utility has a special command line option that will output information similar to what is required. For example gst inspect print plugin auto install info path to libgstvorbis.so should output something along the lines ofdecoder audio x vorbis element vorbisdecelement vorbisencelement vorbisparse element vorbistag encoder audio x vorbis \nNote that in the encoder and decoder case the introspected caps can be more complex with additional fields e.g. audio mpeg mpegversion int so they will not always exactly match the caps wanted by the application. It is up to the installer to deal with this either by doing proper caps intersection using the GStreamer Gst.Caps API or by only taking into account the media type \nAnother potential source of problems are plugins such as ladspa or libvisual where the list of elements depends on the installed ladspa libvisual plugins at the time. This is also up to the distribution to handle but usually not relevant for playback applications \n"});