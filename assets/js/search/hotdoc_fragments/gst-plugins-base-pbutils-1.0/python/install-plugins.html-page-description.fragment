fragment_downloaded_cb({"url": "gst-plugins-base-pbutils-1.0/python/install-plugins.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"install-plugins.h\">\n        <h1 id=\"installplugins\">Install-plugins</h1><h2 id=\"overview\">Overview</h2>\n<p>Using this API, applications can request the installation of missing\nGStreamer plugins. These may be missing decoders/demuxers or\nencoders/muxers for a certain format, sources or sinks for a certain URI\nprotocol (e.g. 'http'), or certain elements known by their element\nfactory name ('audioresample').</p>\n<p>Whether plugin installation is supported or not depends on the operating\nsystem and/or distribution in question. The vendor of the operating\nsystem needs to make sure the necessary hooks and mechanisms are in\nplace for plugin installation to work. See below for more detailed\ninformation.</p>\n<p>From the application perspective, plugin installation is usually\ntriggered either</p>\n<ul>\n<li>when the application itself has found that it wants or needs to\ninstall a certain element</li>\n<li>when the application has been notified by an element (such as\nplaybin or decodebin) that one or more plugins are missing <em>and</em> the\napplication has decided that it wants to install one or more of\nthose missing plugins</li>\n</ul>\n<p>The install functions in this section all take one or more 'detail\nstrings'. These detail strings contain information about the type of\nplugin that needs to be installed (decoder, encoder, source, sink, or\nnamed element), and some additional information such GStreamer version\nused and a human-readable description of the component to install for\nuser dialogs.</p>\n<p>Applications should not concern themselves with the composition of the\nstring itself. They should regard the string as if it was a shared\nsecret between GStreamer and the plugin installer application.</p>\n<p>Detail strings can be obtained using the function\n<a href=\"missing-plugins.html#gst_missing_plugin_message_get_installer_detail\">GstPbutils.missing_plugin_message_get_installer_detail</a> on a\nmissing-plugin message. Such a message will either have been found by\nthe application on a pipeline's <a href=\"../../libgstreamer-1.0/c/gstbus.html#GstBus\">Gst.Bus</a>, or the application will have\ncreated it itself using <a href=\"missing-plugins.html#gst_missing_element_message_new\">GstPbutils.missing_element_message_new</a>,\n<a href=\"missing-plugins.html#gst_missing_decoder_message_new\">GstPbutils.missing_decoder_message_new</a>,\n<a href=\"missing-plugins.html#gst_missing_encoder_message_new\">GstPbutils.missing_encoder_message_new</a>,\n<a href=\"missing-plugins.html#gst_missing_uri_sink_message_new\">GstPbutils.missing_uri_sink_message_new</a>, or\n<a href=\"missing-plugins.html#gst_missing_uri_source_message_new\">GstPbutils.missing_uri_source_message_new</a>.</p>\n<p>For each GStreamer element/plugin/component that should be installed,\nthe application needs one of those 'installer detail' string mentioned\nin the previous section. This string can be obtained, as already\nmentioned above, from a missing-plugin message using the function\n<a href=\"missing-plugins.html#gst_missing_plugin_message_get_installer_detail\">GstPbutils.missing_plugin_message_get_installer_detail</a>. The\nmissing-plugin message is either posted by another element and then\nfound on the bus by the application, or the application has created it\nitself as described above.</p>\n<p>The application will then call <a href=\"install-plugins.html#gst_install_plugins_async\">GstPbutils.install_plugins_async</a>, passing a\nNULL-terminated array of installer detail strings, and a function that\nshould be called when the installation of the plugins has finished\n(successfully or not). Optionally, a <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a> created\nwith <a href=\"install-plugins.html#gst_install_plugins_context_new\">GstPbutils.InstallPluginsContext.new</a> may be passed as well. This\nway additional optional arguments like the application window's XID can\nbe passed to the external installer application.</p>\n<p><a href=\"install-plugins.html#gst_install_plugins_async\">GstPbutils.install_plugins_async</a> will return almost immediately, with the\nreturn code indicating whether plugin installation was started or not.\nIf the necessary hooks for plugin installation are in place and an\nexternal installer application has in fact been called, the passed in\nfunction will be called with a result code as soon as the external\ninstaller has finished. If the result code indicates that new plugins\nhave been installed, the application will want to call\n<a href=\"../../libgstreamer-1.0/c/gstregistry.html#gst_update_registry\">Gst.update_registry</a> so the run-time plugin registry is updated and\nthe new plugins are made available to the application.</p>\n<blockquote>\n<p>A Gtk/GLib main loop must be running in order for the result function\nto be called when the external installer has finished. If this is not\nthe case, make sure to regularly call in your code:</p>\n<p>g_main_context_iteration (NULL,FALSE);</p>\n</blockquote>\n<h2 id=\"1-installer-hook\">1. Installer hook</h2>\n<p>When GStreamer applications initiate plugin installation via\n<a href=\"install-plugins.html#gst_install_plugins_async\">GstPbutils.install_plugins_async</a> or <a href=\"install-plugins.html#gst_install_plugins_sync\">GstPbutils.install_plugins_sync</a>, a\npre-defined helper application will be called.</p>\n<p>The exact path of the helper application to be called is set at compile\ntime, usually by the <code>./configure</code> script based on the install prefix.\nFor a normal package build into the <code>/usr</code> prefix, this will usually\ndefault to <code>/usr/libexec/gst-install-plugins-helper</code> or\n<code>/usr/lib/gst-install-plugins-helper</code>.</p>\n<p>Vendors/distros who want to support GStreamer plugin installation should\neither provide such a helper script/application or use the <code>./configure</code>\noption <code>--with-install-plugins-helper=/path/to/installer</code> to make\nGStreamer call an installer of their own directly.</p>\n<p>It is strongly recommended that vendors provide a small helper\napplication as interlocutor to the real installer though, even more so\nif command line argument munging is required to transform the command\nline arguments passed by GStreamer to the helper application into\narguments that are understood by the real installer.</p>\n<p>The helper application path defined at compile time can be overriden at\nruntime by setting the GST_INSTALL_PLUGINS_HELPER environment\nvariable. This can be useful for testing/debugging purposes.</p>\n<h2 id=\"2-arguments-passed-to-the-install-helper\">2. Arguments passed to the install helper</h2>\n<p>GStreamer will pass the following arguments to the install helper (this\nis in addition to the path of the executable itself, which is by\nconvention argv[0]):</p>\n<ul>\n<li>\n<p>none to many optional arguments in the form of <code>--foo-bar=val</code>.\nExample: <code>--transient-for=XID</code> where XID is the X Window ID of the\nmain window of the calling application (so the installer can make\nitself transient to that window). Unknown optional arguments should\nbe ignored by the installer.</p>\n</li>\n<li>\n<p>one 'installer detail string' argument for each plugin to be\ninstalled; these strings will have a <code>gstreamer</code> prefix; the exact\nformat of the detail string is explained below</p>\n</li>\n</ul>\n<h2 id=\"3-detail-string-describing-the-missing-plugin\">3. Detail string describing the missing plugin</h2>\n<p>The string is in UTF-8 encoding and is made up of several fields,\nseparated by '|' characters (but neither the first nor the last\ncharacter is a '|'). The fields are:</p>\n<ul>\n<li>plugin system identifier, ie. \"gstreamer\"\nThis identifier determines the format of the rest of the detail\nstring. Automatic plugin installers should not process detail\nstrings with unknown identifiers. This allows other plugin-based\nlibraries to use the same mechanism for their automatic plugin\ninstallation needs, or for the format to be changed should it turn\nout to be insufficient.</li>\n<li>plugin system version, e.g. \"0.10\"\nThis is required so that when there is a GStreamer-0.12 or\nGStreamer-1.0 at some point in future, the different major versions\ncan still co-exist and use the same plugin install mechanism in the\nsame way.</li>\n<li>application identifier, e.g. \"totem\"\nThis may also be in the form of \"pid/12345\" if the program name\ncan't be obtained for some reason.</li>\n<li>human-readable localised description of the required component, e.g.\n\"Vorbis audio decoder\"</li>\n<li>identifier string for the required component (see below for details\nabout how to map this to the package/plugin that needs installing),\ne.g.\n<ul>\n<li>urisource-$(PROTOCOL_REQUIRED), e.g. urisource-http or\nurisource-mms</li>\n<li>element-$(ELEMENT_REQUIRED), e.g. element-videoconvert</li>\n<li>decoder-$(CAPS_REQUIRED), e.g. (do read below for more\ndetails!):\n<ul>\n<li>decoder-audio/x-vorbis</li>\n<li>decoder-application/ogg</li>\n<li>decoder-audio/mpeg, mpegversion=(int)4</li>\n<li>decoder-video/mpeg, systemstream=(boolean)true,\nmpegversion=(int)2</li>\n</ul>\n</li>\n<li>encoder-$(CAPS_REQUIRED), e.g. encoder-audio/x-vorbis</li>\n</ul>\n</li>\n<li>optional further fields not yet specified</li>\n</ul>\n<p>An entire ID string might then look like this, for example: <code>gstreamer|0.10|totem|Vorbis audio decoder|decoder-audio/x-vorbis</code></p>\n<p>Plugin installers parsing this ID string should expect further fields\nalso separated by '|' symbols and either ignore them, warn the user, or\nerror out when encountering them.</p>\n<p>Those unfamiliar with the GStreamer 'caps' system should note a few\nthings about the caps string used in the above decoder/encoder case:</p>\n<ul>\n<li>the first part (\"video/mpeg\") of the caps string is a GStreamer\nmedia type and <em>not</em> a MIME type. Wherever possible, the GStreamer\nmedia type will be the same as the corresponding MIME type, but\noften it is not.</li>\n<li>a caps string may or may not have additional comma-separated fields\nof various types (as seen in the examples above)</li>\n<li>the caps string of a 'required' component (as above) will always\nhave fields with fixed values, whereas an introspected string (see\nbelow) may have fields with non-fixed values. Compare for example:\n<ul>\n<li><code>audio/mpeg, mpegversion=(int)4</code> vs.\n<code>audio/mpeg, mpegversion=(int){2, 4}</code></li>\n<li><code>video/mpeg, mpegversion=(int)2</code> vs.\n<code>video/mpeg, systemstream=(boolean){ true, false}, mpegversion=(int)[1, 2]</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-exit-codes-the-installer-should-return\">4. Exit codes the installer should return</h2>\n<p>The installer should return one of the following exit codes when it\nexits:</p>\n<ul>\n<li>0 if all of the requested plugins could be installed\n(#GST_INSTALL_PLUGINS_SUCCESS)</li>\n<li>1 if no appropriate installation candidate for any of the requested\nplugins could be found. Only return this if nothing has been\ninstalled (#GST_INSTALL_PLUGINS_NOT_FOUND)</li>\n<li>2 if an error occured during the installation. The application will\nassume that the user will already have seen an error message by the\ninstaller in this case and will usually not show another one\n(#GST_INSTALL_PLUGINS_ERROR)</li>\n<li>3 if some of the requested plugins could be installed, but not all\n(#GST_INSTALL_PLUGINS_PARTIAL_SUCCESS)</li>\n<li>4 if the user aborted the installation\n(#GST_INSTALL_PLUGINS_USER_ABORT)</li>\n</ul>\n<h2 id=\"5-how-to-map-the-required-detail-string-to-packages\">5. How to map the required detail string to packages</h2>\n<p>It is up to the vendor to find mechanism to map required components from\nthe detail string to the actual packages/plugins to install. This could\nbe a hardcoded list of mappings, for example, or be part of the\npackaging system metadata.</p>\n<p>GStreamer plugin files can be introspected for this information. The\n<code>gst-inspect</code> utility has a special command line option that will output\ninformation similar to what is required. For example <code>$ gst-inspect-1.0 --print-plugin-auto-install-info /path/to/libgstvorbis.so should output something along the lines of</code>decoder-audio/x-vorbis<code>,</code>element-vorbisdec<code></code>element-vorbisenc<code></code>element-vorbisparse<code>,</code>element-vorbistag<code>,</code>encoder-audio/x-vorbis`</p>\n<p>Note that in the encoder and decoder case the introspected caps can be\nmore complex with additional fields, e.g.\n<code>audio/mpeg,mpegversion=(int){2,4}</code>, so they will not always exactly\nmatch the caps wanted by the application. It is up to the installer to\ndeal with this (either by doing proper caps intersection using the\nGStreamer <a href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">Gst.Caps</a> API, or by only taking into account the media type).</p>\n<p>Another potential source of problems are plugins such as ladspa or\nlibvisual where the list of elements depends on the installed\nladspa/libvisual plugins at the time. This is also up to the\ndistribution to handle (but usually not relevant for playback\napplications).</p>\n\n        \n\n        <h2 class=\"symbols_section\" id=\"GstInstallPluginsContext\" data-hotdoc-by-parent=\"true\">GstInstallPluginsContext</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_install_plugins_context_new\">\n\t\t\n<h4 id=\"gstpbutilsinstallpluginscontextnew\">\n\t<span><code>GstPbutils.InstallPluginsContext.new</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.InstallPluginsContext.new ():\n    #python wrapper for 'gst_install_plugins_context_new'</pre>\n\n<p>Creates a new <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>. Free with\n<a href=\"install-plugins.html#gst_install_plugins_context_free\">GstPbutils.InstallPluginsContext.free</a> when no longer needed</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPbutils.InstallPluginsContext\" href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_install_plugins_context_free\">\n\t\t\n<h4 id=\"gstpbutilsinstallpluginscontextfree\">\n\t<span><code>GstPbutils.InstallPluginsContext.free</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.InstallPluginsContext.free (self):\n    #python wrapper for 'gst_install_plugins_context_free'</pre>\n\n<p>Frees a <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ctx:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a></p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsContext\" href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_install_plugins_context_set_confirm_search\">\n\t\t\n<h4 id=\"gstpbutilsinstallpluginscontextset_confirm_search\">\n\t<span><code>GstPbutils.InstallPluginsContext.set_confirm_search</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.InstallPluginsContext.set_confirm_search (self, confirm_search):\n    #python wrapper for 'gst_install_plugins_context_set_confirm_search'</pre>\n\n<p>This function is used to tell the external installer process whether it\nshould ask for confirmation or not before searching for missing plugins.</p>\n<p>If set, this option will be passed to the installer via a\n--interaction=[show-confirm-search|hide-confirm-search] command line option.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ctx:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a></p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsContext\" href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>confirm_search:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>whether to ask for confirmation before searching for plugins</p>\n</td>\n<td>\n<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_install_plugins_context_set_desktop_id\">\n\t\t\n<h4 id=\"gstpbutilsinstallpluginscontextset_desktop_id\">\n\t<span><code>GstPbutils.InstallPluginsContext.set_desktop_id</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.InstallPluginsContext.set_desktop_id (self, desktop_id):\n    #python wrapper for 'gst_install_plugins_context_set_desktop_id'</pre>\n\n<p>This function is used to pass the calling application's desktop file ID to\nthe external installer process.</p>\n<p>A desktop file ID is the basename of the desktop file, including the\n.desktop extension.</p>\n<p>If set, the desktop file ID will be passed to the installer via a\n--desktop-id= command line option.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters2\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ctx:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a></p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsContext\" href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>desktop_id:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the desktop file ID of the calling application</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_install_plugins_context_set_startup_notification_id\">\n\t\t\n<h4 id=\"gstpbutilsinstallpluginscontextset_startup_notification_id\">\n\t<span><code>GstPbutils.InstallPluginsContext.set_startup_notification_id</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.InstallPluginsContext.set_startup_notification_id (self, startup_id):\n    #python wrapper for 'gst_install_plugins_context_set_startup_notification_id'</pre>\n\n<p>Sets the startup notification ID for the launched process.</p>\n<p>This is typically used to to pass the current X11 event timestamp to the\nexternal installer process.</p>\n<p>Startup notification IDs are defined in the\n<a href=\"http://standards.freedesktop.org/startup-notification-spec/startup-notification-latest.txt\">FreeDesktop.Org Startup Notifications standard</a>.</p>\n<p>If set, the ID will be passed to the installer via a\n--startup-notification-id= command line option.</p>\n<p>GTK+/GNOME applications should be able to create a startup notification ID\nlike this:</p>\n<pre><code class=\"language-[\">   timestamp = gtk_get_current_event_time ();\n   startup_id = g_strdup_printf (\"_TIME%u\", timestamp);\n ...\n</code></pre>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters3\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ctx:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a></p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsContext\" href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>startup_id:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the startup notification ID</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_install_plugins_context_set_xid\">\n\t\t\n<h4 id=\"gstpbutilsinstallpluginscontextset_xid\">\n\t<span><code>GstPbutils.InstallPluginsContext.set_xid</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.InstallPluginsContext.set_xid (self, xid):\n    #python wrapper for 'gst_install_plugins_context_set_xid'</pre>\n\n<p>This function is for X11-based applications (such as most Gtk/Qt\napplications on linux/unix) only. You can use it to tell the external\ninstaller the XID of your main application window. That way the installer\ncan make its own window transient to your application window during the\ninstallation.</p>\n<p>If set, the XID will be passed to the installer via a --transient-for=XID\ncommand line option.</p>\n<p>Gtk+/Gnome application should be able to obtain the XID of the top-level\nwindow like this:</p>\n<pre><code class=\"language-[\"> ##include &amp;lt;gtk/gtk.h&amp;gt;\n ##ifdef GDK_WINDOWING_X11\n ##include &amp;lt;gdk/gdkx.h&amp;gt;\n ##endif\n ...\n ##ifdef GDK_WINDOWING_X11\n   xid = GDK_WINDOW_XWINDOW (GTK_WIDGET (application_window)-&amp;gt;window);\n ##endif\n ...\n</code></pre>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters4\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ctx:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a></p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsContext\" href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>xid:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the XWindow ID (XID) of the top-level application</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_install_plugins_async\">\n\t\t\n<h4 id=\"gstpbutilsinstall_plugins_async\">\n\t<span><code>GstPbutils.install_plugins_async</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.install_plugins_async (details, ctx, func, user_data):\n    #python wrapper for 'gst_install_plugins_async'</pre>\n\n<p>Requests plugin installation without blocking. Once the plugins have been\ninstalled or installation has failed, <em>func</em> will be called with the result\nof the installation and your provided <em>user_data</em> pointer.</p>\n<p>This function requires a running GLib/Gtk main loop. If you are not\nrunning a GLib/Gtk main loop, make sure to regularly call\ng_main_context_iteration(NULL,FALSE).</p>\n<p>The installer strings that make up <em>detail</em> are typically obtained by\ncalling <a href=\"missing-plugins.html#gst_missing_plugin_message_get_installer_detail\">GstPbutils.missing_plugin_message_get_installer_detail</a> on missing-plugin\nmessages that have been caught on a pipeline's bus or created by the\napplication via the provided API, such as <a href=\"missing-plugins.html#gst_missing_element_message_new\">GstPbutils.missing_element_message_new</a>.</p>\n<p>It is possible to request the installation of multiple missing plugins in\none go (as might be required if there is a demuxer for a certain format\ninstalled but no suitable video decoder and no suitable audio decoder).</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters5\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>NULL-terminated array\nof installer string details (see below)</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ctx:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>, or NULL</p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsContext\" href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>func:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the function to call when the installer program returns</p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsResultFunc\" href=\"install-plugins.html#GstInstallPluginsResultFunc\">GstPbutils.InstallPluginsResultFunc</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the user data to pass to <em>func</em> when called, or NULL</p>\n</td>\n<td>\n<a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns1\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>result code whether an external installer could be started</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPbutils.InstallPluginsReturn\" href=\"install-plugins.html#GstInstallPluginsReturn\">GstPbutils.InstallPluginsReturn</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_install_plugins_installation_in_progress\">\n\t\t\n<h4 id=\"gstpbutilsinstall_plugins_installation_in_progress\">\n\t<span><code>GstPbutils.install_plugins_installation_in_progress</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.install_plugins_installation_in_progress ():\n    #python wrapper for 'gst_install_plugins_installation_in_progress'</pre>\n\n<p>Checks whether plugin installation (initiated by this application only)\nis currently in progress.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns2\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>TRUE if plugin installation is in progress, otherwise FALSE</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_install_plugins_return_get_name\">\n\t\t\n<h4 id=\"gstpbutilsinstall_plugins_return_get_name\">\n\t<span><code>GstPbutils.install_plugins_return_get_name</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.install_plugins_return_get_name (ret):\n    #python wrapper for 'gst_install_plugins_return_get_name'</pre>\n\n<p>Convenience function to return the descriptive string associated\nwith a status code.  This function returns English strings and\nshould not be used for user messages. It is here only to assist\nin debugging.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters6\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ret:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the return status code</p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsReturn\" href=\"install-plugins.html#GstInstallPluginsReturn\">GstPbutils.InstallPluginsReturn</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns3\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a descriptive string for the status code in <em>ret</em></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_install_plugins_supported\">\n\t\t\n<h4 id=\"gstpbutilsinstall_plugins_supported\">\n\t<span><code>GstPbutils.install_plugins_supported</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.install_plugins_supported ():\n    #python wrapper for 'gst_install_plugins_supported'</pre>\n\n<p>Checks whether plugin installation is likely to be supported by the\ncurrent environment. This currently only checks whether the helper script\nthat is to be provided by the distribution or operating system vendor\nexists.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns4\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>TRUE if plugin installation is likely to be supported.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_install_plugins_sync\">\n\t\t\n<h4 id=\"gstpbutilsinstall_plugins_sync\">\n\t<span><code>GstPbutils.install_plugins_sync</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstPbutils.install_plugins_sync (details, ctx):\n    #python wrapper for 'gst_install_plugins_sync'</pre>\n\n<p>Requests plugin installation and block until the plugins have been\ninstalled or installation has failed.</p>\n<p>This function should almost never be used, it only exists for cases where\na non-GLib main loop is running and the user wants to run it in a separate\nthread and marshal the result back asynchronously into the main thread\nusing the other non-GLib main loop. You should almost always use\n<a href=\"install-plugins.html#gst_install_plugins_async\">GstPbutils.install_plugins_async</a> instead of this function.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters7\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>NULL-terminated array\nof installer string details</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ctx:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>, or NULL</p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsContext\" href=\"install-plugins.html#GstInstallPluginsContext\">GstPbutils.InstallPluginsContext</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns5\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the result of the installation.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPbutils.InstallPluginsReturn\" href=\"install-plugins.html#GstInstallPluginsReturn\">GstPbutils.InstallPluginsReturn</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Structures\">Structures</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstInstallPluginsContext\">\n\t\t<h3 id=\"gstpbutilsinstallpluginscontext\">\n\tGstPbutils.InstallPluginsContext\n</h3>\n\n\t\t<p>Opaque context structure for the plugin installation. Use the provided\nAPI to set details on it.</p>\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Enumerations\">Enumerations</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstInstallPluginsReturn\">\n\t\t\n<h4 id=\"enum-gstpbutilsinstallpluginsreturn\">\n\t\tenum GstPbutils.InstallPluginsReturn\n\t</h4>\n\n\t\t<p>Result codes returned by <a href=\"install-plugins.html#gst_install_plugins_async\">GstPbutils.install_plugins_async</a> and\n<a href=\"install-plugins.html#gst_install_plugins_sync\">GstPbutils.install_plugins_sync</a>, and also the result code passed to the\n<a href=\"install-plugins.html#GstInstallPluginsResultFunc\">GstPbutils.InstallPluginsResultFunc</a> specified with <a href=\"install-plugins.html#gst_install_plugins_async\">GstPbutils.install_plugins_async</a>.</p>\n<p>These codes indicate success or failure of starting an external installer\nprogram and to what extent the requested plugins could be installed.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_SUCCESS\"></a>\n\t\tGstPbutils.InstallPluginsReturn.success\n\t\t</p>\n\t</td>\n\t<td><p>all of the requested plugins could be\ninstalled</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_NOT_FOUND\"></a>\n\t\tGstPbutils.InstallPluginsReturn.not_found\n\t\t</p>\n\t</td>\n\t<td><p>no appropriate installation candidate for\nany of the requested plugins could be found. Only return this if nothing\nhas been installed. Return <a href=\"install-plugins.html#GST_INSTALL_PLUGINS_PARTIAL_SUCCESS\">GstPbutils.InstallPluginsReturn.partial_success</a> if\nsome (but not all) of the requested plugins could be installed.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_ERROR\"></a>\n\t\tGstPbutils.InstallPluginsReturn.error\n\t\t</p>\n\t</td>\n\t<td><p>an error occured during the installation. If\nthis happens, the  user has already seen an error message and another\none should not be displayed</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_PARTIAL_SUCCESS\"></a>\n\t\tGstPbutils.InstallPluginsReturn.partial_success\n\t\t</p>\n\t</td>\n\t<td><p>some of the requested plugins could\nbe installed, but not all</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 3</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_USER_ABORT\"></a>\n\t\tGstPbutils.InstallPluginsReturn.user_abort\n\t\t</p>\n\t</td>\n\t<td><p>the user has aborted the installation</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_CRASHED\"></a>\n\t\tGstPbutils.InstallPluginsReturn.crashed\n\t\t</p>\n\t</td>\n\t<td><p>the installer had an unclean exit code\n(ie. death by signal)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 100</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_INVALID\"></a>\n\t\tGstPbutils.InstallPluginsReturn.invalid\n\t\t</p>\n\t</td>\n\t<td><p>the helper returned an invalid status code</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 101</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_STARTED_OK\"></a>\n\t\tGstPbutils.InstallPluginsReturn.started_ok\n\t\t</p>\n\t</td>\n\t<td><p>returned by <a href=\"install-plugins.html#gst_install_plugins_async\">GstPbutils.install_plugins_async</a> to\nindicate that everything went fine so far and the provided callback\nwill be called with the result of the installation later</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 200</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_INTERNAL_FAILURE\"></a>\n\t\tGstPbutils.InstallPluginsReturn.internal_failure\n\t\t</p>\n\t</td>\n\t<td><p>some internal failure has\noccured when trying to start the installer</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 201</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_HELPER_MISSING\"></a>\n\t\tGstPbutils.InstallPluginsReturn.helper_missing\n\t\t</p>\n\t</td>\n\t<td><p>the helper script to call the\nactual installer is not installed</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 202</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_INSTALL_PLUGINS_INSTALL_IN_PROGRESS\"></a>\n\t\tGstPbutils.InstallPluginsReturn.install_in_progress\n\t\t</p>\n\t</td>\n\t<td><p>a previously-started plugin\ninstallation is still in progress, try again later</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 203</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Callbacks\">Callbacks</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstInstallPluginsResultFunc\">\n\t\t\n<h4 id=\"gstpbutilsinstallpluginsresultfunc\">\n\t<span><code>GstPbutils.InstallPluginsResultFunc</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid (not introspectable)\n(*GstPbutils.InstallPluginsResultFunc) (<a title=\"GstPbutils.InstallPluginsReturn\" href=\"install-plugins.html#GstInstallPluginsReturn\">GstPbutils.InstallPluginsReturn</a>,\n                                        <a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>)</pre>\n\n<p>The prototype of the callback function that will be called once the\nexternal plugin installer program has returned. You only need to provide\na callback function if you are using the asynchronous interface.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters8\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>result:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>whether the installation of the requested plugins succeeded or not</p>\n</td>\n<td>\n<a title=\"GstPbutils.InstallPluginsReturn\" href=\"install-plugins.html#GstInstallPluginsReturn\">GstPbutils.InstallPluginsReturn</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the user data passed to <a href=\"install-plugins.html#gst_install_plugins_async\">GstPbutils.install_plugins_async</a></p>\n</td>\n<td>\n<a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns6\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\tvoid (not introspectable)\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n    </div>\n\n\n        "});