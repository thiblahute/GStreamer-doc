fragment_downloaded_cb({"url": "gst-plugins-base-plugins-1.0/element-giostreamsrc.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-giostreamsrc\">\n<h1 id=\"giostreamsrc1\">giostreamsrc</h1><p>This plugin reads data from a custom GIO <a href=\"https://developer.gnome.org/gio/unstable/GInputStream.html#GInputStream-struct\">GInputStream</a>.</p>\n<p>It can, for example, be used to read data from memory with a\n<a href=\"https://developer.gnome.org/gio/unstable/GMemoryInputStream.html#GMemoryInputStream-struct\">GMemoryInputStream</a> or to read from a file with a\n<a href=\"https://developer.gnome.org/gio/unstable/GFileInputStream.html#GFileInputStream-struct\">GFileInputStream</a>.</p>\n<h2 id=\"example-code\">Example code</h2>\n<p>The following example reads data from a <a href=\"https://developer.gnome.org/gio/unstable/GMemoryInputStream.html#GMemoryInputStream-struct\">GMemoryInputStream</a>.</p>\n<pre><code class=\"language-[\">\n#include &lt;gst/gst.h&gt;\n#include &lt;gio/gio.h&gt;\n\n...\n\nGstElement *src;\nGMemoryInputStream *stream;\n// in_data will contain the data to send\nguint8 *in_data;\ngint i;\n\n...\nin_data = g_new (guint8, 512);\nfor (i = 0; i &lt; 512; i++)\n  in_data[i] = i % 256;\n\nstream = G_MEMORY_INPUT_STREAM (g_memory_input_stream_new_from_data (in_data, 512,\n          (GDestroyNotify) g_free));\nsrc = gst_element_factory_make (\"giostreamsrc\", \"src\");\ng_object_set (G_OBJECT (src), \"stream\", stream, NULL);\n\n...\n\n</code></pre>\n\n</div>\n\n\n"});