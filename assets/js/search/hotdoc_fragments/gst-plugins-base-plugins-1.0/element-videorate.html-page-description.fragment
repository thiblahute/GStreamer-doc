fragment_downloaded_cb({"url": "gst-plugins-base-plugins-1.0/element-videorate.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-videorate\">\n<h1 id=\"videorate\">videorate</h1><p>This element takes an incoming stream of timestamped video frames.\nIt will produce a perfect stream that matches the source pad's framerate.</p>\n<p>The correction is performed by dropping and duplicating frames, no fancy\nalgorithm is used to interpolate frames (yet).</p>\n<p>By default the element will simply negotiate the same framerate on its\nsource and sink pad.</p>\n<p>This operation is useful to link to elements that require a perfect stream.\nTypical examples are formats that do not store timestamps for video frames,\nbut only store a framerate, like Ogg and AVI.</p>\n<p>A conversion to a specific framerate can be forced by using filtered caps on\nthe source pad.</p>\n<p>The properties <a href=\"element-videorate.html#GstVideoRate:in\">in</a>, <a href=\"element-videorate.html#GstVideoRate:out\">out</a>, <a href=\"element-videorate.html#GstVideoRate:duplicate\">duplicate</a>\nand <a href=\"element-videorate.html#GstVideoRate:drop\">drop</a> can be read to obtain information about number of\ninput frames, output frames, dropped frames (i.e. the number of unused input\nframes) and duplicated frames (i.e. the number of times an input frame was\nduplicated, beside being used normally).</p>\n<p>An input stream that needs no adjustments will thus never have dropped or\nduplicated frames.</p>\n<p>When the <a href=\"element-videorate.html#GstVideoRate:silent\">silent</a> property is set to FALSE, a GObject property\nnotification will be emitted whenever one of the <a href=\"element-videorate.html#GstVideoRate:duplicate\">duplicate</a> or\n<a href=\"element-videorate.html#GstVideoRate:drop\">drop</a> values changes.\nThis can potentially cause performance degradation.\nNote that property notification will happen from the streaming thread, so\napplications should be prepared for this.</p>\n<p>The property <a href=\"element-videorate.html#GstVideoRate:rate\">rate</a> allows the modification of video speed by a\ncertain factor. It must not be confused with framerate. Think of rate as\nspeed and framerate as flow.</p>\n<h2 id=\"example-pipelines\">Example pipelines</h2>\n<pre><code class=\"language-[\"> gst-launch-1.0 -v uridecodebin uri=file:///path/to/video.ogg ! videoconvert ! videoscale ! videorate ! video/x-raw,framerate=15/1 ! autovideosink\n</code></pre>\n<p>Decode a video file and adjust the framerate to 15 fps before playing.\nTo create a test Ogg/Theora file refer to the documentation of theoraenc.</p>\n<pre><code class=\"language-[\"> gst-launch-1.0 -v v4l2src ! videorate ! video/x-raw,framerate=25/2 ! theoraenc ! oggmux ! filesink location=recording.ogg\n</code></pre>\n<p>Capture video from a V4L device, and adjust the stream to 12.5 fps before\nencoding to Ogg/Theora.</p>\n<pre><code class=\"language-[\"> gst-launch-1.0 -v uridecodebin uri=file:///path/to/video.ogg ! videoconvert ! videoscale ! videorate ! video/x-raw,framerate=1/5 ! jpegenc ! multifilesink location=snapshot-%05d.jpg\n</code></pre>\n<p>Decode a video file and save a snapshot every 5 seconds as consecutively numbered jpeg file.</p>\n\n</div>\n\n\n"});