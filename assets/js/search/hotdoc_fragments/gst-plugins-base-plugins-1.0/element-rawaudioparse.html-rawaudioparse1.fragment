fragment_downloaded_cb({"url": "gst-plugins-base-plugins-1.0/element-rawaudioparse.html#rawaudioparse1", "fragment": "rawaudioparse \nThis element parses incoming data as raw audio samples and timestamps it. It also handles seek queries in said raw audio data and ensures that output buffers contain an integer number of samples even if the input buffers don t. For example with sample format S16LE and channels an input buffer of bytes contains samples. rawaudioparse will then output samples bytes and keep the remaining bytes. These will then be prepended to the next input data. \nThe element implements the properties and sink caps configuration as specified in the GstRawBaseParse documentation. The properties configuration can be modified by using the sample rate num channels channel positions format and pcm format properties. \nCurrently this parser supports raw data in a law mu law or linear PCM format. \nTo facilitate operation with the unalignedaudioparse element rawaudioparse supports the audio x unaligned raw media type. This is treated identically to audio x raw except that it is used by source elements which do not guarantee that the buffers they push out are timestamped and contain an integer amount of samples see the bytes example above By using a different media type it is guaranteed that unalignedaudioparse is autoplugged making sure that the autoplugged chain does not push unparsed content downstream. The source caps media type with linear PCM data is always audio x raw even if the sink caps use audio x unaligned raw \nThe channel positions property can be used to set explicit position information for each channel. If the array that is passed to this property does not match the number of channels indicated by num channels then said number of channels is updated to the array length. If channel positions is NULL then the default GStreamer positioning is used. This property is also useful for swapping left and right in a stereo signal for example. \n"});