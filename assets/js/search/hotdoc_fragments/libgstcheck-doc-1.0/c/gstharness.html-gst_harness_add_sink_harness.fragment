fragment_downloaded_cb({"url": "libgstcheck-doc-1.0/c/gstharness.html#gst_harness_add_sink_harness", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_harness_add_sink_harness\">\n\t\t<h3 id=\"gst_harness_add_sink_harness1\">\n\t<span><code>gst_harness_add_sink_harness</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_harness_add_sink_harness (<a title=\"GstHarness\" href=\"gstharness.html#GstHarness\">GstHarness</a> * h,\n                              <a title=\"GstHarness\" href=\"gstharness.html#GstHarness\">GstHarness</a> * sink_harness)</pre>\n\n<p>Similar to gst_harness_add_src, this allows you to send the data coming out\nof your harnessed <a href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a> to a sink-element, allowing to test different\nresponses the element output might create in sink elements. An example might\nbe an existing sink providing some analytical data on the input it receives that\ncan be useful to your testing. If the goal is to test a sink-element itself,\nthis is better acheived using gst_harness_new directly on the sink.</p>\n<p>If a sink-harness already exists it will be replaced.</p>\n<p>MT safe.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters6\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>h:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstharness.html#GstHarness\">GstHarness</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>sink_harness:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstharness.html#GstHarness\">GstHarness</a> to be added as a sink-harness.</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n\n\n"});