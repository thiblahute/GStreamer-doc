fragment_downloaded_cb({"url": "libgstcheck-doc-1.0/python/gstharness.html#gst_harness_set_blocking_push_mode", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_harness_set_blocking_push_mode\">\n\t\t<h3 id=\"gstcheckharnessset_blocking_push_mode\">\n\t<span><code>GstCheck.Harness.set_blocking_push_mode</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef GstCheck.Harness.set_blocking_push_mode (self):\n    #python wrapper for 'gst_harness_set_blocking_push_mode'</pre>\n\n<p>Setting this will make the harness block in the chain-function, and\nthen release when <a href=\"../../libgstcheck-doc-1.0/python/gstharness.html#gst_harness_pull\">GstCheck.Harness.pull</a> or <a href=\"../../libgstcheck-doc-1.0/python/gstharness.html#gst_harness_try_pull\">GstCheck.Harness.try_pull</a> is called.\nCan be useful when wanting to control a src-element that is not implementing\n<a href=\"../../libgstreamer-doc-1.0/c/gstclock.html#gst_clock_id_wait\">Gst.Clock.id_wait</a> so it can't be controlled by the <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer-libs/html/GstTestClock.html#GstTestClock-struct\">GstCheck.TestClock</a>, since\nit otherwise would produce buffers as fast as possible.</p>\n<p>MT safe.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters32\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>h:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstcheck-doc-1.0/python/gstharness.html#GstHarness\">GstCheck.Harness</a></p>\n</td>\n<td>\n<a title=\"GstCheck.Harness\" href=\"../../libgstcheck-doc-1.0/python/gstharness.html#GstHarness\">GstCheck.Harness</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n\n\n"});