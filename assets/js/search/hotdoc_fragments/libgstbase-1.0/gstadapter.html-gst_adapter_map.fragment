fragment_downloaded_cb({"url": "libgstbase-1.0/gstadapter.html#gst_adapter_map", "fragment": "GstBase.prototype.map \ngst_adapter_map \ngst_adapter_map \ngst_adapter_map \nGets the first size bytes stored in the adapter. The returned pointer is valid until the next function is called on the adapter. \nNote that setting the returned pointer as the data of a Gst.Buffer is incorrect for general purpose plugins. The reason is that if a downstream element stores the buffer so that it has access to it outside of the bounds of its chain function the buffer will have an invalid data pointer after your element flushes the bytes. In that case you should use GstBase.prototype.take which returns a freshly allocated buffer that you can set as Gst.Buffer memory or the potentially more performant GstBase.prototype.take_buffer. \nReturns null if size bytes are not available. \nParameters \na GstBase.Adapter \nReturns a tuple made of \ntransfer none array length size element type guint8 nullable a pointer to the first size bytes of data or null \ntransfer none array length size element type guint8 nullable a pointer to the first size bytes of data or null \nGets the first size bytes stored in the adapter. The returned pointer is valid until the next function is called on the adapter. \nNote that setting the returned pointer as the data of a GstBuffer is incorrect for general purpose plugins. The reason is that if a downstream element stores the buffer so that it has access to it outside of the bounds of its chain function the buffer will have an invalid data pointer after your element flushes the bytes. In that case you should use gst_adapter_take which returns a freshly allocated buffer that you can set as GstBuffer memory or the potentially more performant gst_adapter_take_buffer. \nReturns NULL if size bytes are not available. \nParameters \na GstAdapter \nthe number of bytes to map peek \ntransfer none array length size element type guint8 nullable a pointer to the first size bytes of data or NULL \nGets the first size bytes stored in the adapter. The returned pointer is valid until the next function is called on the adapter. \nNote that setting the returned pointer as the data of a GstBuffer is incorrect for general purpose plugins. The reason is that if a downstream element stores the buffer so that it has access to it outside of the bounds of its chain function the buffer will have an invalid data pointer after your element flushes the bytes. In that case you should use gst_adapter_take which returns a freshly allocated buffer that you can set as GstBuffer memory or the potentially more performant gst_adapter_take_buffer. \nReturns NULL if size bytes are not available. \nParameters \nthe number of bytes to map peek \ntransfer none array length size element type guint8 nullable a pointer to the first size bytes of data or NULL \nGets the first size bytes stored in the adapter. The returned pointer is valid until the next function is called on the adapter. \nNote that setting the returned pointer as the data of a GstBuffer is incorrect for general purpose plugins. The reason is that if a downstream element stores the buffer so that it has access to it outside of the bounds of its chain function the buffer will have an invalid data pointer after your element flushes the bytes. In that case you should use gst_adapter_take which returns a freshly allocated buffer that you can set as GstBuffer memory or the potentially more performant gst_adapter_take_buffer. \nReturns NULL if size bytes are not available. \nParameters \na GstAdapter \nReturns a tuple made of \ntransfer none array length size element type guint8 nullable a pointer to the first size bytes of data or NULL \ntransfer none array length size element type guint8 nullable a pointer to the first size bytes of data or NULL \n"});