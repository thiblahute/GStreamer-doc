fragment_downloaded_cb({"url": "libgstbase-1.0/gsttypefindhelper.html#gst_type_find_helper_for_extension", "fragment": "gst_type_find_helper_for_extension \nGstBase.type_find_helper_for_extension \nGstBase.prototype.type_find_helper_for_extension \nTries to find the best GstCaps associated with extension. \nAll available typefinders will be checked against the extension in order of rank. The caps of the first typefinder that can handle extension will be returned. \nFree function gst_caps_unref \nParameters \nobject doing the typefinding or NULL used for logging \nan extension \nthe GstCaps corresponding to extension or NULL if no type could be found. The caller should free the caps returned with gst_caps_unref. \nTries to find the best Gst.Caps associated with extension. \nAll available typefinders will be checked against the extension in order of rank. The caps of the first typefinder that can handle extension will be returned. \nFree function gst_caps_unref \nParameters \nobject doing the typefinding or None used for logging \nan extension \nthe Gst.Caps corresponding to extension or None if no type could be found. The caller should free the caps returned with gst_caps_unref not introspectable \nTries to find the best Gst.Caps associated with extension. \nAll available typefinders will be checked against the extension in order of rank. The caps of the first typefinder that can handle extension will be returned. \nFree function gst_caps_unref \nParameters \nobject doing the typefinding or null used for logging \nan extension \nthe Gst.Caps corresponding to extension or null if no type could be found. The caller should free the caps returned with gst_caps_unref not introspectable \n"});