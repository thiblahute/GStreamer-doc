fragment_downloaded_cb({"url": "libgstbase-1.0/c/gsttypefindhelper.html#page-description", "fragment": "Tries to find what type of data is contained in the given GstBuffer the assumption being that the buffer represents the beginning of the stream or file. \nAll available typefinders will be called on the data in order of rank. If a typefinding function returns a probability of GST_TYPE_FIND_MAXIMUM typefinding is stopped immediately and the found caps will be returned right away. Otherwise all available typefind functions will the tried and the caps with the highest probability will be returned or NULL if the content of the buffer could not be identified. \nFree function gst_caps_unref \nTries to find what type of data is contained in the given data the assumption being that the data represents the beginning of the stream or file. \nAll available typefinders will be called on the data in order of rank. If a typefinding function returns a probability of GST_TYPE_FIND_MAXIMUM typefinding is stopped immediately and the found caps will be returned right away. Otherwise all available typefind functions will the tried and the caps with the highest probability will be returned or NULL if the content of data could not be identified. \nFree function gst_caps_unref \nTries to find the best GstCaps associated with extension. \nAll available typefinders will be checked against the extension in order of rank. The caps of the first typefinder that can handle extension will be returned. \nFree function gst_caps_unref \nUtility function to do pull based typefinding. Unlike gst_type_find_helper however this function will use the specified function func to obtain the data needed by the typefind functions rather than operating on a given source pad. This is useful mostly for elements like tag demuxers which strip off data at the beginning and or end of a file and want to typefind the stripped data stream before adding their own source pad the specified callback can then call the upstream peer pad with offsets adjusted for the tag size for example \nWhen extension is not NULL this function will first try the typefind functions for the given extension which might speed up the typefinding in many cases. \nFree function gst_caps_unref \nThis function will be called by gst_type_find_helper_get_range when typefinding functions request to peek at the data of a stream at certain offsets. If this function returns GST_FLOW_OK the result buffer will be stored in buffer. The contents of buffer is invalid for any other return value. \nThis function is supposed to behave exactly like a GstPadGetRangeFunction. \n"});