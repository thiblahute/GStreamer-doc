fragment_downloaded_cb({"url": "libgstbase-1.0/c/gstbaseparse.html#parsing-phase", "fragment": "Parsing phase \nGstBaseParse gathers at least min_frame_size bytes of data either by pulling it from upstream or collecting buffers in an internal GstAdapter. \nA buffer of at least min_frame_size bytes is passed to subclass with handle_frame. Subclass checks the contents and can optionally return GST_FLOW_OK along with an amount of data to be skipped to find a valid frame which will result in a subsequent DISCONT If otherwise the buffer does not hold a complete frame handle_frame can merely return and will be called again when additional data is available. In push mode this amounts to an additional input buffer thus minimal additional latency in pull mode this amounts to some arbitrary reasonable buffer size increase. Of course gst_base_parse_set_min_frame_size could also be used if a very specific known amount of additional data is required. If however the buffer holds a complete valid frame it can pass the size of this frame to gst_base_parse_finish_frame. If acting as a converter it can also merely indicate consumed input data while simultaneously providing custom output data. Note that baseclass performs some processing such as tracking overall consumed data rate versus duration for each finished frame but other state is only updated upon each call to handle_frame such as tracking upstream input timestamp \nSubclass is also responsible for setting the buffer metadata e.g. buffer timestamp and duration or keyframe if applicable although the latter can also be done by GstBaseParse if it is appropriately configured see below Frame is provided with timestamp derived from upstream as much as generally possible duration obtained from configuration see below and offset if meaningful in pull mode \nNote that check_valid_frame might receive any small amount of input data when leftover data is being drained e.g. at EOS \nAs part of finish frame processing just prior to actually pushing the buffer in question it is passed to pre_push_frame which gives subclass yet one last chance to examine buffer metadata or to send some custom tag events or to perform custom segment filtering. \nDuring the parsing process GstBaseParseClass will handle both srcpad and sinkpad events. They will be passed to subclass if event or src_event callbacks have been provided. \n"});