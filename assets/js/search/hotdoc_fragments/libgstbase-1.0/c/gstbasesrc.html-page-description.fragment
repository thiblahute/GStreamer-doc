fragment_downloaded_cb({"url": "libgstbase-1.0/c/gstbasesrc.html#page-description", "fragment": "Controlled shutdown of live sources in applications \nGstBaseSrc \nApplications that record from a live source may want to stop recording in a controlled way so that the recording is stopped but the data already in the pipeline is processed to the end remember that many live sources would go on recording forever otherwise For that to happen the application needs to make the source stop recording and send an EOS event down the pipeline. The application would then wait for an EOS message posted on the pipeline s bus to know when all data has been processed and the pipeline can safely be stopped. \nAn application may send an EOS event to a source element to make it perform the EOS logic send EOS event downstream or post a GST_MESSAGE_SEGMENT_DONE on the bus This can typically be done with the gst_element_send_event function on the element or its parent bin. \nAfter the EOS has been sent to the element the application should wait for an EOS message to be posted on the pipeline s bus. Once this EOS message is received it may safely shut down the entire pipeline. \nThe opaque GstBaseSrc data structure. \nQuery if src timestamps outgoing buffers based on the current running_time. \nPrepare a new seamless segment for emission downstream. This function must only be called by derived sub classes and only from the create function as the stream lock needs to be held. \nThe format for the new segment will be the current format of the source as configured with gst_base_src_set_format \nIf automatic_eos is TRUE src will automatically go EOS if a buffer after the total size is returned. By default this is TRUE but sources that can t return an authoritative size and only know that they re EOS when trying to read more should set this to FALSE. \nConfigure src to automatically timestamp outgoing buffers based on the current running_time of the pipeline. This property is mostly useful for live sources. \nIf not dynamic size is only updated when needed such as when trying to read past current tracked size. Otherwise size is checked for upon each read. \n"});