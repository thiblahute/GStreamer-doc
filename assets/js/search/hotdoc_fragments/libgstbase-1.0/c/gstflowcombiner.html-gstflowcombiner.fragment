fragment_downloaded_cb({"url": "libgstbase-1.0/c/gstflowcombiner.html#gstflowcombiner", "fragment": "GstFlowCombiner \nUtility struct to help handling GstFlowReturn combination. Useful for GstElements that have multiple source pads and need to combine the different GstFlowReturn for those pads. \nGstFlowCombiner works by using the last GstFlowReturn for all GstPad it has in its list and computes the combined return value and provides it to the caller. \nTo add a new pad to the GstFlowCombiner use gst_flow_combiner_add_pad. The new GstPad is stored with a default value of GST_FLOW_OK. \nIn case you want a GstPad to be removed use gst_flow_combiner_remove_pad. \nPlease be aware that this struct isn t thread safe as its designed to be used by demuxers those usually will have a single thread operating it. \nThese functions will take refs on the passed GstPads. \nAside from reducing the user s code size the main advantage of using this helper struct is to follow the standard rules for GstFlowReturn combination. These rules are \nGST_FLOW_ERROR or below GST_FLOW_NOT_NEGOTIATED and GST_FLOW_FLUSHING are returned immediatelly from the gst_flow_combiner_update_flow function. \n"});