fragment_downloaded_cb({"url": "libgstbase-1.0/c/gstadapter.html#gst_adapter_map", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_adapter_map\">\n\t\t\n<h4 id=\"gst_adapter_map1\">\n\t<span><code>gst_adapter_map</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint8\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint8\">guint8</a> *\ngst_adapter_map (<a title=\"GstAdapter\" href=\"gstadapter.html#GstAdapter\">GstAdapter</a> * adapter,\n                 <a title=\"gsize\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gsize\">gsize</a> size)</pre>\n\n<p>Gets the first <em>size</em> bytes stored in the <em>adapter</em>. The returned pointer is\nvalid until the next function is called on the adapter.</p>\n<p>Note that setting the returned pointer as the data of a <a href=\"../../libgstreamer-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a> is\nincorrect for general-purpose plugins. The reason is that if a downstream\nelement stores the buffer so that it has access to it outside of the bounds\nof its chain function, the buffer will have an invalid data pointer after\nyour element flushes the bytes. In that case you should use\n<a href=\"gstadapter.html#gst_adapter_take\">gst_adapter_take</a>, which returns a freshly-allocated buffer that you can set\nas <a href=\"../../libgstreamer-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a> memory or the potentially more performant\n<a href=\"gstadapter.html#gst_adapter_take_buffer\">gst_adapter_take_buffer</a>.</p>\n<p>Returns <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> if <em>size</em> bytes are not available.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters12\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>adapter:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstadapter.html#GstAdapter\">GstAdapter</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>size:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the number of bytes to map/peek</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h5 id=\"returns10\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>(transfer none) (array length=size) (element-type guint8) (nullable):\na pointer to the first <em>size</em> bytes of data, or <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint8\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint8\">guint8</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});