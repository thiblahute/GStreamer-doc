fragment_downloaded_cb({"url": "libgstbase-1.0/javascript/gstadapter.html#page-description", "fragment": "The opaque GstBase.Adapter data structure. \nGets the maximum amount of bytes available that is it returns the maximum value that can be supplied to GstBase.Adapter.prototype.map without that function returning null. \nGets the maximum number of bytes that are immediately available without requiring any expensive operations like copying the data into a temporary buffer \nSimilar to gst_adapter_copy but more suitable for language bindings. size bytes of data starting at offset will be copied out of the buffers contained in adapter and into a new GLib.Bytes structure which is returned. Depending on the value of the size argument an empty GLib.Bytes structure may be returned. \nGet the DTS that was on the last buffer with the GST_BUFFER_FLAG_DISCONT flag or GST_CLOCK_TIME_NONE. \nReturns a Gst.Buffer containing the first nbytes of the adapter but does not flush them from the adapter. See GstBase.Adapter.prototype.take_buffer for details. \nCaller owns a reference to the returned buffer. gst_buffer_unref not introspectable after usage. \nFree function gst_buffer_unref \nReturns a Gst.Buffer containing the first nbytes of the adapter but does not flush them from the adapter. See GstBase.Adapter.prototype.take_buffer_fast for details. \nCaller owns a reference to the returned buffer. gst_buffer_unref not introspectable after usage. \nFree function gst_buffer_unref \nReturns a Gst.BufferList of buffers containing the first nbytes bytes of the adapter but does not flush them from the adapter. See GstBase.Adapter.prototype.take_buffer_list for details. \nCaller owns the returned list. Call gst_buffer_list_unref not introspectable to free the list after usage. \nReturns a GLib.List of buffers containing the first nbytes bytes of the adapter but does not flush them from the adapter. See GstBase.Adapter.prototype.take_list for details. \nCaller owns returned list and contained buffers. gst_buffer_unref not introspectable each buffer in the list before freeing the list after usage. \nScan for pattern pattern with applied mask mask in the adapter data starting from offset offset. \nThe bytes in pattern and mask are interpreted left to right regardless of endianness. All four bytes of the pattern must be present in the adapter for it to match even if the first or last bytes are masked out. \nIt is an error to call this function without making sure that there is enough data offset size bytes in the adapter. \nThis function calls GstBase.Adapter.prototype.masked_scan_uint32_peek passing null for value. \nScan for pattern pattern with applied mask mask in the adapter data starting from offset offset. If a match is found the value that matched is returned through value otherwise value is left untouched. \nThe bytes in pattern and mask are interpreted left to right regardless of endianness. All four bytes of the pattern must be present in the adapter for it to match even if the first or last bytes are masked out. \nIt is an error to call this function without making sure that there is enough data offset size bytes in the adapter. \nGet the offset that was on the last buffer with the GST_BUFFER_FLAG_DISCONT flag or GST_BUFFER_OFFSET_NONE. \nGet the dts that was before the current byte in the adapter. When distance is given the amount of bytes between the dts and the current position is returned. \nThe dts is reset to GST_CLOCK_TIME_NONE and the distance is set to when the adapter is first created or when it is cleared. This also means that before the first byte with a dts is removed from the adapter the dts and distance returned are GST_CLOCK_TIME_NONE and respectively. \nGet the dts that was before the byte at offset offset in the adapter. When distance is given the amount of bytes between the dts and the current position is returned. \nThe dts is reset to GST_CLOCK_TIME_NONE and the distance is set to when the adapter is first created or when it is cleared. This also means that before the first byte with a dts is removed from the adapter the dts and distance returned are GST_CLOCK_TIME_NONE and respectively. \nGet the offset that was before the current byte in the adapter. When distance is given the amount of bytes between the offset and the current position is returned. \nThe offset is reset to GST_BUFFER_OFFSET_NONE and the distance is set to when the adapter is first created or when it is cleared. This also means that before the first byte with an offset is removed from the adapter the offset and distance returned are GST_BUFFER_OFFSET_NONE and respectively. \nGet the pts that was before the current byte in the adapter. When distance is given the amount of bytes between the pts and the current position is returned. \nThe pts is reset to GST_CLOCK_TIME_NONE and the distance is set to when the adapter is first created or when it is cleared. This also means that before the first byte with a pts is removed from the adapter the pts and distance returned are GST_CLOCK_TIME_NONE and respectively. \nGet the pts that was before the byte at offset offset in the adapter. When distance is given the amount of bytes between the pts and the current position is returned. \nThe pts is reset to GST_CLOCK_TIME_NONE and the distance is set to when the adapter is first created or when it is cleared. This also means that before the first byte with a pts is removed from the adapter the pts and distance returned are GST_CLOCK_TIME_NONE and respectively. \nGet the PTS that was on the last buffer with the GST_BUFFER_FLAG_DISCONT flag or GST_CLOCK_TIME_NONE. \nReturns a Gst.Buffer containing the first nbytes bytes of the adapter. The returned bytes will be flushed from the adapter. This function is potentially more performant than GstBase.Adapter.prototype.take since it can reuse the memory in pushed buffers by subbuffering or merging. This function will always return a buffer with a single memory region. \nNote that no assumptions should be made as to whether certain buffer flags such as the DISCONT flag are set on the returned buffer or not. The caller needs to explicitly set or unset flags that should be set or unset. \nSince this will also copy over all GstMeta of the input buffers except for meta with the Gst.MetaFlags.prototype.pooled flag or with the memory tag. \nCaller owns a reference to the returned buffer. gst_buffer_unref not introspectable after usage. \nFree function gst_buffer_unref \nReturns a Gst.Buffer containing the first nbytes of the adapter. The returned bytes will be flushed from the adapter. This function is potentially more performant than GstBase.Adapter.prototype.take_buffer since it can reuse the memory in pushed buffers by subbuffering or merging. Unlike GstBase.Adapter.prototype.take_buffer the returned buffer may be composed of multiple non contiguous Gst.Memory objects no copies are made. \nNote that no assumptions should be made as to whether certain buffer flags such as the DISCONT flag are set on the returned buffer or not. The caller needs to explicitly set or unset flags that should be set or unset. \nThis will also copy over all GstMeta of the input buffers except for meta with the Gst.MetaFlags.prototype.pooled flag or with the memory tag. \nThis function can return buffer up to the return value of GstBase.Adapter.prototype.available without making copies if possible. \nCaller owns a reference to the returned buffer. gst_buffer_unref not introspectable after usage. \nFree function gst_buffer_unref \nReturns a Gst.BufferList of buffers containing the first nbytes bytes of the adapter. The returned bytes will be flushed from the adapter. When the caller can deal with individual buffers this function is more performant because no memory should be copied. \nCaller owns the returned list. Call gst_buffer_list_unref not introspectable to free the list after usage. \nReturns a GLib.List of buffers containing the first nbytes bytes of the adapter. The returned bytes will be flushed from the adapter. When the caller can deal with individual buffers this function is more performant because no memory should be copied. \nCaller owns returned list and contained buffers. gst_buffer_unref not introspectable each buffer in the list before freeing the list after usage. \n"});