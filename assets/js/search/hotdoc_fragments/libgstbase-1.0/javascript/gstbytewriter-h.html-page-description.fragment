fragment_downloaded_cb({"url": "libgstbase-1.0/javascript/gstbytewriter-h.html#page-description", "fragment": "Checks if enough free space from the current write cursor is available and reallocates if necessary. \nWrites a unsigned bit integer to writer. \nWrites a signed bit integer to writer without checking if there is enough free space available in the byte writer. \nWrites a unsigned big endian bit integer to writer. \nWrites a unsigned little endian bit integer to writer. \nWrites a signed big endian bit integer to writer. \nWrites a signed little endian bit integer to writer. \nWrites a unsigned big endian bit integer to writer. \nWrites a unsigned little endian bit integer to writer. \nWrites a signed big endian bit integer to writer. \nWrites a signed little endian bit integer to writer. \nWrites a unsigned big endian bit integer to writer. \nWrites a unsigned little endian bit integer to writer. \nWrites a signed big endian bit integer to writer. \nWrites a signed little endian bit integer to writer. \nWrites a unsigned big endian bit integer to writer. \nWrites a unsigned little endian bit integer to writer. \nWrites a signed big endian bit integer to writer. \nWrites a signed little endian bit integer to writer. \nWrites a big endian bit float to writer. \nWrites a little endian bit float to writer. \nWrites a big endian bit float to writer. \nWrites a little endian bit float to writer. \nWrites size bytes of data to writer. \nWrites size bytes containing value to writer. \nWrites size bytes of data to writer. \nFrees writer and all memory allocated by it. \nFrees writer and all memory allocated by it except the current data which is returned as Gst.Buffer. \nFree function gst_buffer_unref \nFrees writer and all memory allocated by it except the current data which is returned. \nFree function g_free \nReturns the remaining size of data that can still be written. If is returned the remaining size is only limited by system resources. \nInitializes writer to an empty instance \nInitializes writer with the given memory area. If initialized is true it is possible to read size bytes from the GstBase.ByteWriter from the beginning. \nInitializes writer with the given initial data size. \nWrites a NUL terminated UTF16 string to writer including the terminator \nWrites a NUL terminated UTF32 string to writer including the terminator \nWrites a NUL terminated UTF8 string to writer including the terminator \nResets writer and frees the data if it s owned by writer. \nResets writer and returns the current data as buffer. \nFree function gst_buffer_unref \nResets writer and returns the current data. \nFree function g_free \n"});