fragment_downloaded_cb({"url": "libgstbase-1.0/javascript/gstcollectpads.html#gst_collect_pads_add_pad", "fragment": "GstBase.CollectPads.prototype.add_pad \nAdd a pad to the collection of collect pads. The pad has to be a sinkpad. The refcount of the pad is incremented. Use GstBase.CollectPads.prototype.remove_pad to remove the pad from the collection again. \nYou specify a size for the returned GstBase.CollectData structure so that you can use it to store additional information. \nYou can also specify a GstBase.CollectDataDestroyNotify that will be called just before the GstBase.CollectData structure is freed. It is passed the pointer to the structure and should free any custom memory and resources allocated for it. \nKeeping a pad locked in waiting state is only relevant when using the default collection algorithm providing the oldest buffer It ensures a buffer must be available on this pad for a collection to take place. This is of typical use to a muxer element where non subtitle streams should always be in waiting state e.g. to assure that caps information is available on all these streams when initial headers have to be written. \nThe pad will be automatically activated in push mode when pads is started. \nMT safe. \npads \nthe collectpads to use \npad \nthe pad to add \nsize \nthe size of the returned GstBase.CollectData structure \ndestroy_notify \nfunction to be called before the returned GstBase.CollectData structure is freed \nlock \nwhether to lock this pad in usual waiting state \n\na new GstBase.CollectData to identify the new pad. Or null if wrong parameters are supplied. \n"});