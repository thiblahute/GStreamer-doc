fragment_downloaded_cb({"url": "libgstbase-1.0/javascript/gstflowcombiner.html#gstflowcombiner-page", "fragment": "GstFlowCombiner \nUtility struct to help handling Gst.FlowReturn combination. Useful for Gst.Elements that have multiple source pads and need to combine the different Gst.FlowReturn for those pads. \nGstBase.FlowCombiner works by using the last Gst.FlowReturn for all Gst.Pad it has in its list and computes the combined return value and provides it to the caller. \nTo add a new pad to the GstBase.FlowCombiner use GstBase.FlowCombiner.prototype.add_pad. The new Gst.Pad is stored with a default value of Gst.FlowReturn.prototype.ok. \nIn case you want a Gst.Pad to be removed use GstBase.FlowCombiner.prototype.remove_pad. \nPlease be aware that this struct isn t thread safe as its designed to be used by demuxers those usually will have a single thread operating it. \nThese functions will take refs on the passed Gst.Pads. \nAside from reducing the user s code size the main advantage of using this helper struct is to follow the standard rules for Gst.FlowReturn combination. These rules are \nGst.FlowReturn.prototype.error or below GST_FLOW_NOT_NEGOTIATED and GST_FLOW_FLUSHING are returned immediatelly from the GstBase.FlowCombiner.prototype.update_flow function. \n"});