fragment_downloaded_cb({"url": "libgstbase-1.0/javascript/gstbaseparse.html#shutdown-phase", "fragment": "Shutdown phase \nSubclass is responsible for providing pad template caps for source and sink pads. The pads need to be named sink and src It also needs to set the fixed caps on srcpad when the format is ensured e.g. when base class calls subclass set_sink_caps function \nThis base class uses Gst.Format.prototype.default as a meaning of frames. So subclass conversion routine needs to know that conversion from Gst.Format.prototype.time to Gst.Format.prototype.default must return the frame number that can be found from the given byte position. \nGstBase.BaseParse uses subclasses conversion methods also for seeking or otherwise uses its own default one see also below \nSubclass start and stop functions will be called to inform the beginning and end of data processing. \nThings that subclass need to take care of \nProvide pad templates \nFixate the source pad caps when appropriate \nInform base class how big data chunks should be retrieved. This is done with GstBase.BaseParse.prototype.set_min_frame_size function. \nExamine data chunks passed to subclass with handle_frame and pass proper frame s to GstBase.BaseParse.prototype.finish_frame and setting src pad caps and timestamps on frame. \nProvide conversion functions \nUpdate the duration information with GstBase.BaseParse.prototype.set_duration \nOptionally passthrough using GstBase.BaseParse.prototype.set_passthrough \nConfigure various baseparse parameters using GstBase.BaseParse.prototype.set_average_bitrate GstBase.BaseParse.prototype.set_syncable and GstBase.BaseParse.prototype.set_frame_rate. \nIn particular if subclass is unable to determine a duration but parsing or specs yields a frames per seconds rate then this can be provided to GstBase.BaseParse to enable it to cater for buffer time metadata which will be taken from upstream as much as possible Internally keeping track of frame durations and respective sizes that have been pushed provides GstBase.BaseParse with an estimated bitrate. A default convert used if not overridden will then use these rates to perform obvious conversions. These rates are also used to update estimated duration at regular frame intervals. \n"});