fragment_downloaded_cb({"url": "libgstbase-1.0/gstbytereader-h.html#gst_byte_reader_skip_string_utf8", "fragment": "GstBase.prototype.skip_string_utf8 \nGstBase.ByteReader.skip_string_utf8 \ngst_byte_reader_skip_string_utf8 \nSkips a NUL terminated string in the GstBase.ByteReader instance advancing the current position to the byte after the string. This will work for any NUL terminated string with a character width of bits so ASCII UTF ISO N etc. No input checking for valid UTF is done. \nThis function will fail if no NUL terminator was found in in the data. \nParameters \na GstBase.ByteReader instance \ntrue if a string could be skipped false otherwise. \nSkips a NUL terminated string in the GstBase.ByteReader instance advancing the current position to the byte after the string. This will work for any NUL terminated string with a character width of bits so ASCII UTF ISO N etc. No input checking for valid UTF is done. \nThis function will fail if no NUL terminator was found in in the data. \nParameters \na GstBase.ByteReader instance \nTrue if a string could be skipped False otherwise. \nSkips a NUL terminated string in the GstByteReader instance advancing the current position to the byte after the string. This will work for any NUL terminated string with a character width of bits so ASCII UTF ISO N etc. No input checking for valid UTF is done. \nThis function will fail if no NUL terminator was found in in the data. \nParameters \na GstByteReader instance \nTRUE if a string could be skipped FALSE otherwise. \n"});