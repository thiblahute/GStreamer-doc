fragment_downloaded_cb({"url": "libgstbase-1.0/gstbasesrc.html#gst_base_src_new_seamless_segment", "fragment": "gst_base_src_new_seamless_segment \nGstBase.BaseSrc.new_seamless_segment \nGstBase.BaseSrc.prototype.new_seamless_segment \nPrepare a new seamless segment for emission downstream. This function must only be called by derived sub classes and only from the create function as the stream lock needs to be held. \nThe format for the new segment will be the current format of the source as configured with gst_base_src_set_format \nParameters \nThe source \nThe new start value for the segment \nStop value for the new segment \nThe new time value for the start of the new segment \nTRUE if preparation of the seamless segment succeeded. \nPrepare a new seamless segment for emission downstream. This function must only be called by derived sub classes and only from the create function as the stream lock needs to be held. \nThe format for the new segment will be the current format of the source as configured with GstBase.BaseSrc.set_format \nParameters \nThe source \nThe new start value for the segment \nStop value for the new segment \nThe new time value for the start of the new segment \nTrue if preparation of the seamless segment succeeded. \nPrepare a new seamless segment for emission downstream. This function must only be called by derived sub classes and only from the create function as the stream lock needs to be held. \nThe format for the new segment will be the current format of the source as configured with GstBase.BaseSrc.prototype.set_format \nParameters \nThe source \nThe new start value for the segment \nStop value for the new segment \nThe new time value for the start of the new segment \ntrue if preparation of the seamless segment succeeded. \n"});