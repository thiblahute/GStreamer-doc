fragment_downloaded_cb({"url": "libgstbase-1.0/python/gstcollectpads.html#page-description", "fragment": "Collectpads object. \nConvenience clipping function that converts incoming buffer s timestamp to running time or clips the buffer if outside configured segment. \nSince this clipping function also sets the DTS parameter of the GstCollectData structure. This version of the running time DTS can be negative. G_MININT64 is used to indicate invalid value. \nDefault GstBase.CollectPads event handling that elements should always chain up to to ensure proper operation. Element might however indicate event should not be forwarded downstream. \nDefault GstBase.CollectPads query handling that elements should always chain up to to ensure proper operation. Element might however indicate query should not be forwarded downstream. \nSet the callback function and user data that will be called with the oldest buffer when all pads have been collected or None on EOS. If a buffer is passed the callback owns a reference and must unref it. \nMT safe. \nInstall a clipping function that is called right after a buffer is received on a pad managed by pads. See GstBase.CollectPadsClipFunction for more info. \nSet the timestamp comparison function. \nMT safe. \nSet the event callback function and user data that will be called when collectpads has received an event originating from one of the collected pads. If the event being processed is a serialized one this callback is called with pads STREAM_LOCK held otherwise not. As this lock should be held when calling a number of CollectPads functions it should be acquired if so unusually needed. \nMT safe. \nInstall a flush function that is called when the internal state of all pads should be flushed as part of flushing seek handling. See GstBase.CollectPadsFlushFunction for more info. \nChange the flushing state of all the pads in the collection. No pad is able to accept anymore data when flushing is True. Calling this function with flushing False makes pads accept data again. Caller must ensure that downstream streaming thread is not blocked e.g. by sending a FLUSH_START downstream. \nMT safe. \nCollectPads provides a default collection algorithm that will determine the oldest buffer available on all of its pads and then delegate to a configured callback. However if circumstances are more complicated and or more control is desired this sets a callback that will be invoked instead when all the pads added to the collection have buffers queued. Evidently this callback is not compatible with GstBase.CollectPads.set_buffer_function callback. If this callback is set the former will be unset. \nMT safe. \nSet the query callback function and user data that will be called after collectpads has received a query originating from one of the collected pads. If the query being processed is a serialized one this callback is called with pads STREAM_LOCK held otherwise not. As this lock should be held when calling a number of CollectPads functions it should be acquired if so unusually needed. \nMT safe. \nDefault GstBase.CollectPads event handling for the src pad of elements. Elements can chain up to this to let flushing seek event handling be done by GstBase.CollectPads. \ngpointer _gst_reserved \nSet if collectdata s pad is flushing. \nGstBase.CollectPadsStateFlags.new_segment \nSet if collectdata s pad received a new_segment event. \nGstBase.CollectPadsStateFlags.waiting \nSet if collectdata s pad must be waited for when collecting. \nGstBase.CollectPadsStateFlags.locked \nA function that will be called when the GstBase.CollectData will be freed. It is passed the pointer to the structure and should free any custom memory and resources allocated for it. \nA function that will be called when a considered oldest buffer can be muxed. If all pads have reached EOS this function is called with None buffer and None data. \nA function that will be called when inbuffer is received on the pad managed by data in the collectpad object pads. \nThe function should use the segment of data and the negotiated media type on the pad to perform clipping of inbuffer. \nThis function takes ownership of inbuffer and should output a buffer in outbuffer or return None in outbuffer if the buffer should be dropped. \nA function for comparing two timestamps of buffers or newsegments collected on one pad. \nA function that will be called while processing an event. It takes ownership of the event and is responsible for chaining up to GstBase.CollectPads.event_default or dropping events such typical cases being handled by the default handler \nA function that will be called while processing a flushing seek event. \nThe function should flush any internal state of the element and the state of all the pads. It should clear only the state not directly managed by the pads object. It is therefore not necessary to call gst_collect_pads_set_flushing nor gst_collect_pads_clear from this function. \nA function that will be called while processing a query. It takes ownership of the query and is responsible for chaining up to events downstream with Gst.Pad.event_default \n"});