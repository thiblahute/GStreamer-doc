fragment_downloaded_cb({"url": "libgstbase-1.0/python/gstbasetransform.html#page-description", "fragment": "Modifications in place input buffer and output buffer are the same thing. \nModifications only to the caps metadata of a buffer \nSpecial output buffer allocations \nSub class settable flags on GstBaseTransform \nThe element must implement a transform_ip function. \nOutput buffer size must input buffer size \nIf the always_in_place flag is set non writable buffers will be copied and passed to the transform_ip function otherwise a new buffer will be created and the transform function called. \nIncoming writable buffers will be passed to the transform_ip function immediately. \nonly implementing transform_ip and not transform implies always_in_place True \nThe element does not require writable data but non writable buffers should be subbuffered so that the meta information can be replaced. \nElements wishing to operate in this mode should replace the prepare_output_buffer method to create subbuffers of the input buffer and set always_in_place to True \nExample elements \nElements which need to do special allocation of their output buffers beyond allocating output buffers via the negotiated allocator or buffer pool should implement the prepare_output_buffer method. \nExample elements \npassthrough \nalways_in_place \nDetermines whether a non writable buffer will be copied before passing to the transform_ip function. \nImplied True if no transform function is implemented. \nImplied False if ONLY transform function is implemented. \n"});