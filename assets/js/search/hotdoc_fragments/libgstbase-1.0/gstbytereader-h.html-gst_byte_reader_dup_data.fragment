fragment_downloaded_cb({"url": "libgstbase-1.0/gstbytereader-h.html#gst_byte_reader_dup_data", "fragment": "gst_byte_reader_dup_data \nGstBase.ByteReader.dup_data \nGstBase.ByteReader.prototype.dup_data \nFree function g_free \nReturns a newly allocated copy of the current data position if at least size bytes are left and updates the current position. Free with g_free when no longer needed. \nParameters \na GstByteReader instance \nSize in bytes \naddress of a guint8 pointer variable in which to store the result \nTRUE if successful FALSE otherwise. \nFree function g_free \nReturns a newly allocated copy of the current data position if at least size bytes are left and updates the current position. Free with GLib.free when no longer needed. \nParameters \na GstBase.ByteReader instance \nReturns a tuple made of \nTrue if successful False otherwise. \nTrue if successful False otherwise. \nTrue if successful False otherwise. \nFree function g_free \nReturns a newly allocated copy of the current data position if at least size bytes are left and updates the current position. Free with GLib.prototype.free when no longer needed. \nParameters \na GstBase.ByteReader instance \nReturns a tuple made of \ntrue if successful false otherwise. \ntrue if successful false otherwise. \ntrue if successful false otherwise. \n"});