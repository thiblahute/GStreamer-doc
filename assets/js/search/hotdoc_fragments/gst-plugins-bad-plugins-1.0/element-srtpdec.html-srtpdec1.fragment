fragment_downloaded_cb({"url": "gst-plugins-bad-plugins-1.0/element-srtpdec.html#srtpdec1", "fragment": "srtpdec \ngstrtpdec acts as a decoder that removes security from SRTP and SRTCP packets encryption and authentication and out RTP and RTCP. It receives packet of type application x srtp or application x srtcp on its sink pad and outs packets of type application x rtp or application x rtcp on its source pad. \nFor each packet received it checks if the internal SSRC is in the list of streams already in use. If this is not the case it sends a signal to the user to get the needed parameters to create a new stream master key encryption and authentication mecanisms for both RTP and RTCP. If the user can t provide those parameters the buffer is dropped and a warning is emitted. \nThis element uses libsrtp library. The encryption and authentication mecanisms available are \nEncryption \nAuthentication \nNote that for SRTP protection authentication is mandatory non null if encryption is used non null \nEach packet received is first analysed checked for valid SSRC then its buffer is unprotected with libsrtp then pushed on the source pad. If protection failed or the stream could not be created the buffer is dropped and a warning is emitted. \nWhen the maximum usage of the master key is reached a soft limit signal is sent to the user and new parameters master key are needed in return. If the hard limit is reached a flag is set and every subsequent packet is dropped until a new key is set and the stream has been updated. \nIf a stream is to be shared between multiple clients the SRTP rollover counter for a given SSRC must be set in the caps roc field when the request key signal is emitted by the decoder. The rollover counters should have been transmitted by a signaling protocol by some other means. If no rollover counter is provided by the user is used by default. \n"});