fragment_downloaded_cb({"url": "gst-plugins-base-video-1.0/video-overlay-composition.html#gst_video_overlay_rectangle_new_raw", "fragment": "GstVideo.prototype.new_raw \nGstVideo.VideoOverlayRectangle.new_raw \ngst_video_overlay_rectangle_new_raw \nCreates a new video overlay rectangle with ARGB or AYUV pixel data. The layout in case of ARGB of the components in memory is B G R A on little endian platforms corresponding to GstVideo.VideoFormat.BGRA and A R G B on big endian platforms corresponding to GstVideo.VideoFormat.ARGB In other words pixels are treated as bit words and the lowest bits then contain the blue component value and the highest bits contain the alpha component value. Unless specified in the flags the RGB values are non premultiplied. This is the format that is used by most hardware and also many rendering libraries such as Cairo for example. The pixel data buffer must have GstVideo.VideoMeta set. \nParameters \na Gst.Buffer pointing to the pixel memory \nthe X co ordinate on the video where the top left corner of this overlay rectangle should be rendered to \nthe Y co ordinate on the video where the top left corner of this overlay rectangle should be rendered to \nthe render width of this rectangle on the video \nthe render height of this rectangle on the video \nflags \na new GstVideo.VideoOverlayRectangle. Unref with gst_video_overlay_rectangle_unref not introspectable when no longer needed. \nCreates a new video overlay rectangle with ARGB or AYUV pixel data. The layout in case of ARGB of the components in memory is B G R A on little endian platforms corresponding to GstVideo.VideoFormat.BGRA and A R G B on big endian platforms corresponding to GstVideo.VideoFormat.ARGB In other words pixels are treated as bit words and the lowest bits then contain the blue component value and the highest bits contain the alpha component value. Unless specified in the flags the RGB values are non premultiplied. This is the format that is used by most hardware and also many rendering libraries such as Cairo for example. The pixel data buffer must have GstVideo.VideoMeta set. \nParameters \na Gst.Buffer pointing to the pixel memory \nthe X co ordinate on the video where the top left corner of this overlay rectangle should be rendered to \nthe Y co ordinate on the video where the top left corner of this overlay rectangle should be rendered to \nthe render width of this rectangle on the video \nthe render height of this rectangle on the video \nflags \na new GstVideo.VideoOverlayRectangle. Unref with gst_video_overlay_rectangle_unref not introspectable when no longer needed. \nCreates a new video overlay rectangle with ARGB or AYUV pixel data. The layout in case of ARGB of the components in memory is B G R A on little endian platforms corresponding to GST_VIDEO_FORMAT_BGRA and A R G B on big endian platforms corresponding to GST_VIDEO_FORMAT_ARGB In other words pixels are treated as bit words and the lowest bits then contain the blue component value and the highest bits contain the alpha component value. Unless specified in the flags the RGB values are non premultiplied. This is the format that is used by most hardware and also many rendering libraries such as Cairo for example. The pixel data buffer must have GstVideoMeta set. \nParameters \na GstBuffer pointing to the pixel memory \nthe X co ordinate on the video where the top left corner of this overlay rectangle should be rendered to \nthe Y co ordinate on the video where the top left corner of this overlay rectangle should be rendered to \nthe render width of this rectangle on the video \nthe render height of this rectangle on the video \nflags \na new GstVideoOverlayRectangle. Unref with gst_video_overlay_rectangle_unref when no longer needed. \n"});