fragment_downloaded_cb({"url": "gst-plugins-base-video-1.0/gstvideoencoder.html#gst_video_encoder_finish_frame", "fragment": "GstVideo.prototype.finish_frame \nGstVideo.VideoEncoder.finish_frame \ngst_video_encoder_finish_frame \nframe must have a valid encoded data buffer whose metadata fields are then appropriately set according to frame data or no buffer at all if the frame should be dropped. It is subsequently pushed downstream or provided to pre_push. In any case the frame is considered finished and released. \nAfter calling this function the output buffer of the frame is to be considered read only. This function will also change the metadata of the buffer. \nParameters \na GstVideo.VideoEncoder \nan encoded GstVideo.VideoCodecFrame \na Gst.FlowReturn resulting from sending data downstream \nframe must have a valid encoded data buffer whose metadata fields are then appropriately set according to frame data or no buffer at all if the frame should be dropped. It is subsequently pushed downstream or provided to pre_push. In any case the frame is considered finished and released. \nAfter calling this function the output buffer of the frame is to be considered read only. This function will also change the metadata of the buffer. \nParameters \na GstVideo.VideoEncoder \nan encoded GstVideo.VideoCodecFrame \na Gst.FlowReturn resulting from sending data downstream \nframe must have a valid encoded data buffer whose metadata fields are then appropriately set according to frame data or no buffer at all if the frame should be dropped. It is subsequently pushed downstream or provided to pre_push. In any case the frame is considered finished and released. \nAfter calling this function the output buffer of the frame is to be considered read only. This function will also change the metadata of the buffer. \nParameters \na GstVideoEncoder \nan encoded GstVideoCodecFrame \na GstFlowReturn resulting from sending data downstream \n"});