fragment_downloaded_cb({"url": "gst-plugins-base-video-1.0/video-format.html#GstVideoFormatInfo", "fragment": "GstVideoFormatInfo \nFields \nGstVideo.VideoFormatInfo \nAttributes \nGstVideo.VideoFormatInfo \nAttributes \nInformation for a video format. \nGstVideoFormat \nstring representation of the format \nuse readable description of the format \nGstVideoFormatFlags \nThe number of bits used to pack data items. This can be less than when multiple pixels are stored in a byte. for values multiple bytes should be read according to the endianness flag before applying the shift and mask. \nthe number of components in the video format. \nthe number of bits to shift away to get the component data \nthe depth in bits for each component \nthe pixel stride of each component. This is the amount of bytes to the pixel immediately to the right. When bits the stride is expressed in bits. For bit RGB this would be bytes for example while it would be bytes for RGBx or ARGB. \nthe number of planes for this format. The number of planes can be less than the amount of components when multiple components are packed into one plane. \nthe plane number where a component can be found \nthe offset in the plane where the first pixel of the components can be found. \nsubsampling factor of the width for the component. Use GST_VIDEO_SUB_SCALE to scale a width. \nsubsampling factor of the height for the component. Use GST_VIDEO_SUB_SCALE to scale a height. \nthe format of the unpacked pixels. This format must have the GST_VIDEO_FORMAT_FLAG_UNPACK flag set. \nan unpack function for this format \nthe amount of lines that will be packed \nan pack function for this format \nThe tiling mode \nThe width of a tile in bytes represented as a shift \nThe height of a tile in bytes represented as a shift \nInformation for a video format. \nGstVideo.VideoFormat \nstring representation of the format \nuse readable description of the format \nGstVideo.VideoFormatFlags \nThe number of bits used to pack data items. This can be less than when multiple pixels are stored in a byte. for values multiple bytes should be read according to the endianness flag before applying the shift and mask. \nthe number of components in the video format. \nthe number of bits to shift away to get the component data \nthe depth in bits for each component \nthe pixel stride of each component. This is the amount of bytes to the pixel immediately to the right. When bits the stride is expressed in bits. For bit RGB this would be bytes for example while it would be bytes for RGBx or ARGB. \nthe number of planes for this format. The number of planes can be less than the amount of components when multiple components are packed into one plane. \nthe plane number where a component can be found \nthe offset in the plane where the first pixel of the components can be found. \nsubsampling factor of the width for the component. Use GST_VIDEO_SUB_SCALE to scale a width. \nsubsampling factor of the height for the component. Use GST_VIDEO_SUB_SCALE to scale a height. \nthe format of the unpacked pixels. This format must have the GstVideo.VideoFormatFlags.UNPACK flag set. \nan unpack function for this format \nthe amount of lines that will be packed \nan pack function for this format \nThe tiling mode \nThe width of a tile in bytes represented as a shift \nThe height of a tile in bytes represented as a shift \nInformation for a video format. \nGstVideo.VideoFormat \nstring representation of the format \nuse readable description of the format \nGstVideo.VideoFormatFlags \nThe number of bits used to pack data items. This can be less than when multiple pixels are stored in a byte. for values multiple bytes should be read according to the endianness flag before applying the shift and mask. \nthe number of components in the video format. \nthe number of bits to shift away to get the component data \nthe depth in bits for each component \nthe pixel stride of each component. This is the amount of bytes to the pixel immediately to the right. When bits the stride is expressed in bits. For bit RGB this would be bytes for example while it would be bytes for RGBx or ARGB. \nthe number of planes for this format. The number of planes can be less than the amount of components when multiple components are packed into one plane. \nthe plane number where a component can be found \nthe offset in the plane where the first pixel of the components can be found. \nsubsampling factor of the width for the component. Use GST_VIDEO_SUB_SCALE to scale a width. \nsubsampling factor of the height for the component. Use GST_VIDEO_SUB_SCALE to scale a height. \nthe format of the unpacked pixels. This format must have the GstVideo.VideoFormatFlags.UNPACK flag set. \nan unpack function for this format \nthe amount of lines that will be packed \nan pack function for this format \nThe tiling mode \nThe width of a tile in bytes represented as a shift \nThe height of a tile in bytes represented as a shift \n"});