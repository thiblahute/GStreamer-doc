fragment_downloaded_cb({"url": "gst-plugins-base-video-1.0/c/gstvideoencoder.html#page-description", "fragment": "Virtual Methods \nThe opaque GstVideoEncoder data structure. \nGstVideoEncoderPrivate priv \nHelper function that allocates a buffer to hold an encoded video frame for encoder s current GstVideoCodecState. \nHelper function that allocates a buffer to hold an encoded video frame for encoder s current GstVideoCodecState. Subclass should already have configured video state and set src pad caps. \nThe buffer allocated here is owned by the frame and you should only keep references to the frame not the buffer. \nframe must have a valid encoded data buffer whose metadata fields are then appropriately set according to frame data or no buffer at all if the frame should be dropped. It is subsequently pushed downstream or provided to pre_push. In any case the frame is considered finished and released. \nAfter calling this function the output buffer of the frame is to be considered read only. This function will also change the metadata of the buffer. \nLets GstVideoEncoder sub classes to know the memory allocator used by the base class and its params. \nUnref the allocator after use it. \nQuery the configured encoding latency. Results will be returned via min_latency and max_latency. \nGet the oldest unfinished pending GstVideoCodecFrame \nGet the current GstVideoCodecState \nReturns caps that express caps or sink template caps if caps NULL restricted to resolution format combinations supported by downstream elements e.g. muxers \nSet the codec headers to be sent downstream whenever requested. \nInforms baseclass of encoding latency. \nRequest minimal value for PTS passed to handle_frame. \nFor streams with reordered frames this can be used to ensure that there is enough time to accomodate first DTS which may be less than first PTS \nSince \nCreates a new GstVideoCodecState with the specified caps as the output state for the encoder. Any previously set output state on encoder will be replaced by the newly created one. \nThe specified caps should not contain any resolution pixel aspect ratio framerate codec data Those should be specified instead in the returned GstVideoCodecState. \nIf the subclass wishes to copy over existing fields like pixel aspect ratio or framerate from an existing GstVideoCodecState it can be provided as a reference. \nIf the subclass wishes to override some fields from the output state like pixel aspect ratio or framerate it can do so on the returned GstVideoCodecState. \nThe new output state will only take effect set on pads and buffers starting from the next call to gst_video_encoder_finish_frame \ngpointer _gst_reserved \nGives the segment of the element. \nGives the segment of the element. \nRelease the lock that protects the encoder function from concurrent access. \nReturned while parsing to indicate more data is needed. \nReturned when the event buffer should be dropped. \n"});