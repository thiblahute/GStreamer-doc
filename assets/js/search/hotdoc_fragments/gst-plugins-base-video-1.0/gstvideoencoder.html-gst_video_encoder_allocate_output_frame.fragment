fragment_downloaded_cb({"url": "gst-plugins-base-video-1.0/gstvideoencoder.html#gst_video_encoder_allocate_output_frame", "fragment": "gst_video_encoder_allocate_output_frame \nGstVideo.VideoEncoder.allocate_output_frame \nGstVideo.prototype.allocate_output_frame \nHelper function that allocates a buffer to hold an encoded video frame for encoder s current GstVideoCodecState. Subclass should already have configured video state and set src pad caps. \nThe buffer allocated here is owned by the frame and you should only keep references to the frame not the buffer. \nParameters \na GstVideoEncoder \na GstVideoCodecFrame \nsize of the buffer \nGST_FLOW_OK if an output buffer could be allocated \nHelper function that allocates a buffer to hold an encoded video frame for encoder s current GstVideo.VideoCodecState. Subclass should already have configured video state and set src pad caps. \nThe buffer allocated here is owned by the frame and you should only keep references to the frame not the buffer. \nParameters \na GstVideo.VideoEncoder \na GstVideo.VideoCodecFrame \nsize of the buffer \nGst.FlowReturn.OK if an output buffer could be allocated \nHelper function that allocates a buffer to hold an encoded video frame for encoder s current GstVideo.VideoCodecState. Subclass should already have configured video state and set src pad caps. \nThe buffer allocated here is owned by the frame and you should only keep references to the frame not the buffer. \nParameters \na GstVideo.VideoEncoder \na GstVideo.VideoCodecFrame \nsize of the buffer \nGst.FlowReturn.OK if an output buffer could be allocated \n"});