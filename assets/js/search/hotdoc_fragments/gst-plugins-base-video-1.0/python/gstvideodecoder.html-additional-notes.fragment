fragment_downloaded_cb({"url": "gst-plugins-base-video-1.0/python/gstvideodecoder.html#additional-notes", "fragment": "Additional Notes \nSeeking Flushing \nEnd Of Stream \nThe subclass is responsible for providing pad template caps for source and sink pads. The pads need to be named sink and src It also needs to provide information about the ouptput caps when they are known. This may be when the base class calls the subclass set_format function though it might be during decoding before calling gst_video_decoder_finish_frame. This is done via gst_video_decoder_set_output_state \nThe subclass is also responsible for providing presentation timestamps likely based on corresponding input ones If that is not applicable or possible the base class provides limited framerate based interpolation. \nSimilarly the base class provides some limited legacy seeking support if specifically requested by the subclass as full fledged support should rather be left to upstream demuxer parser or alike. This simple approach caters for seeking and duration reporting using estimated input bitrates. To enable it a subclass should call gst_video_decoder_set_estimate_rate to enable handling of incoming byte streams. \nThe base class provides some support for reverse playback in particular in case incoming data is not packetized or upstream does not provide fragments on keyframe boundaries. However the subclass should then be prepared for the parsing and frame processing stage to occur separately in normal forward processing the latter immediately follows the former The subclass also needs to ensure the parsing stage properly marks keyframes unless it knows the upstream elements will do so properly for incoming data. \nThe bare minimum that a functional subclass needs to implement is \nProvide pad templates \nInform the base class of output caps via gst_video_decoder_set_output_state \nParse input data if it is not considered packetized from upstream Data will be provided to parse which should invoke gst_video_decoder_add_to_frame and gst_video_decoder_have_frame to separate the data belonging to each video frame. \nAccept data in handle_frame and provide decoded results to gst_video_decoder_finish_frame or call gst_video_decoder_drop_frame. \n"});