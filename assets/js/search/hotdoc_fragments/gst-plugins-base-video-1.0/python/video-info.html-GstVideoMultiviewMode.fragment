fragment_downloaded_cb({"url": "gst-plugins-base-video-1.0/python/video-info.html#GstVideoMultiviewMode", "fragment": "enum GstVideo.VideoMultiviewMode \nAll possible stereoscopic D and multiview representations. In conjunction with GstVideo.VideoMultiviewFlags describes how multiview content is being transported in the stream. \nAll frames represent a right eye view. \nGstVideo.VideoMultiviewMode.side_by_side \nLeft and right eye views are provided in the left and right half of the frame respectively. \nGstVideo.VideoMultiviewMode.side_by_side_quincunx \nLeft and right eye views are provided in the left and right half of the frame but have been sampled using quincunx method with half pixel offset between the views. \nGstVideo.VideoMultiviewMode.column_interleaved \nAlternating vertical columns of pixels represent the left and right eye view respectively. \nGstVideo.VideoMultiviewMode.row_interleaved \nAlternating horizontal rows of pixels represent the left and right eye view respectively. \nGstVideo.VideoMultiviewMode.top_bottom \nThe top half of the frame contains the left eye and the bottom half the right eye. \nGstVideo.VideoMultiviewMode.checkerboard \nPixels are arranged with alternating pixels representing left and right eye views in a checkerboard fashion. \nGstVideo.VideoMultiviewMode.frame_by_frame \nLeft and right eye views are provided in separate frames alternately. \nGstVideo.VideoMultiviewMode.multiview_frame_by_frame \nMultiple independent views are provided in separate frames in sequence. This method only applies to raw video buffers at the moment. Specific view identification is via the GstVideoMultiviewMeta and GstVideo.VideoMeta s on raw video buffers. \nGstVideo.VideoMultiviewMode.separated \nMultiple views are provided as separate Gst.Memory framebuffers attached to each Gst.Buffer described by the GstVideoMultiviewMeta and GstVideo.VideoMeta s \n"});