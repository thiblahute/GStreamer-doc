fragment_downloaded_cb({"url": "gst-plugins-base-video-1.0/python/video-overlay-composition.html#page-description", "fragment": "Functions \nFunctions \nCreates a new video overlay composition object to hold one or more overlay rectangles. \nAdds an overlay rectangle to an existing overlay composition object. This must be done right after creating the overlay composition. \nBlends the overlay rectangles in comp on top of the raw video data contained in video_buf. The data in video_buf must be writable and mapped appropriately. \nSince video_buf data is read and will be modified it ought be mapped with flag GST_MAP_READWRITE. \nMakes a copy of comp and all contained rectangles so that it is possible to modify the composition and contained rectangles e.g. add additional rectangles or change the render co ordinates or render dimension The actual overlay pixel data buffers contained in the rectangles are not copied. \nReturns the n th GstVideo.VideoOverlayRectangle contained in comp. \nReturns the sequence number of this composition. Sequence numbers are monotonically increasing and unique for overlay compositions and rectangles meaning there will never be a rectangle with the same sequence number as a composition \nTakes ownership of comp and returns a version of comp that is writable i.e. can be modified Will either return comp right away or create a new writable copy of comp and unref comp itself. All the contained rectangles will also be copied but the actual overlay pixel data buffers contained in the rectangles are not copied. \nReturns the number of GstVideo.VideoOverlayRectangles contained in comp. \nCreates a new video overlay rectangle with ARGB or AYUV pixel data. The layout in case of ARGB of the components in memory is B G R A on little endian platforms corresponding to GstVideo.VideoFormat.bgra and A R G B on big endian platforms corresponding to GstVideo.VideoFormat.argb In other words pixels are treated as bit words and the lowest bits then contain the blue component value and the highest bits contain the alpha component value. Unless specified in the flags the RGB values are non premultiplied. This is the format that is used by most hardware and also many rendering libraries such as Cairo for example. The pixel data buffer must have GstVideo.VideoMeta set. \nMakes a copy of rectangle so that it is possible to modify it e.g. to change the render co ordinates or render dimension The actual overlay pixel data buffers contained in the rectangle are not copied. \nRetrieves the flags associated with a GstVideo.VideoOverlayRectangle. This is useful if the caller can handle both premultiplied alpha and non premultiplied alpha for example. By knowing whether the rectangle uses premultiplied or not it can request the pixel data in the format it is stored in to avoid unnecessary conversion. \nRetrieves the global alpha value associated with a GstVideo.VideoOverlayRectangle. \nRetrieves the pixel data as it is. This is useful if the caller can do the scaling itself when handling the overlaying. The rectangle will need to be scaled to the render dimensions which can be retrieved using GstVideo.VideoOverlayRectangle.get_render_rectangle. \nRetrieves the pixel data as it is. This is useful if the caller can do the scaling itself when handling the overlaying. The rectangle will need to be scaled to the render dimensions which can be retrieved using GstVideo.VideoOverlayRectangle.get_render_rectangle. \nRetrieves the pixel data as it is. This is useful if the caller can do the scaling itself when handling the overlaying. The rectangle will need to be scaled to the render dimensions which can be retrieved using GstVideo.VideoOverlayRectangle.get_render_rectangle. \nRetrieves the render position and render dimension of the overlay rectangle on the video. \nReturns the sequence number of this rectangle. Sequence numbers are monotonically increasing and unique for overlay compositions and rectangles meaning there will never be a rectangle with the same sequence number as a composition \nUsing the sequence number of a rectangle as an indicator for changed pixel data of a rectangle is dangereous. Some API calls like e.g. GstVideo.VideoOverlayRectangle.set_global_alpha automatically update the per rectangle sequence number which is misleading for renderers consumers that handle global alpha themselves. For them the pixel data returned by gst_video_overlay_rectangle_get_pixels_ wont be different for different global alpha values. In this case a renderer could also use the GstBuffer pointers as a hint for changed pixel data. \nSets the global alpha value associated with a GstVideo.VideoOverlayRectangle. Per pixel alpha values are multiplied with this value. Valid values global_alpha to deactivate. \nrectangle must be writable meaning its refcount must be You can make the rectangles inside a GstVideo.VideoOverlayComposition writable using GstVideo.VideoOverlayComposition.make_writable or GstVideo.VideoOverlayComposition.copy. \nSets the render position and dimensions of the rectangle on the video. This function is mainly for elements that modify the size of the video in some way e.g. through scaling or cropping and need to adjust the details of any overlays to match the operation that changed the size. \nrectangle must be writable meaning its refcount must be You can make the rectangles inside a GstVideo.VideoOverlayComposition writable using GstVideo.VideoOverlayComposition.make_writable or GstVideo.VideoOverlayComposition.copy. \nSets an overlay composition on a buffer. The buffer will obtain its own reference to the composition meaning this function does not take ownership of comp. \nAn opaque video overlay composition object. A composition contains multiple overlay rectangles. \nExtra buffer metadata describing image overlay data. \nGstVideoOverlayComposition overlay \nthe attached GstVideoOverlayComposition \nOverlay format flags. \nno flags \nGstVideo.VideoOverlayFormatFlags.premultiplied_alpha \nRGB are premultiplied by A \nGstVideo.VideoOverlayFormatFlags.global_alpha \na global alpha value is set. \nVideo formats supported by GstVideo.VideoOverlayComposition.blend for use in overlay elements pad template caps. \n"});