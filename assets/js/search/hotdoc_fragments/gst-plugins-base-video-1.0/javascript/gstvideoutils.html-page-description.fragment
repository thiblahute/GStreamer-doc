fragment_downloaded_cb({"url": "gst-plugins-base-video-1.0/javascript/gstvideoutils.html#page-description", "fragment": "Gets private data set on the frame by the subclass via GstVideo.VideoCodecFrame.prototype.set_user_data previously. \nIncreases the refcount of the given frame by one. \nSets user_data on the frame and the GLib.DestroyNotify that will be called when the frame is freed. Allows to attach private data by the subclass to frames. \nIf a user_data was previously set then the previous set notify will be called before the user_data is replaced. \nDecreases the refcount of the frame. If the refcount reaches the frame will be freed. \nIncreases the refcount of the given state by one. \nDecreases the refcount of the state. If the refcount reaches the state will be freed. \nguint32 decode_frame_number \nguint32 presentation_frame_number \nGstClockTime dts \nDecoding timestamp \nGstBuffer input_buffer \nthe input GstBuffer that created this frame. The buffer is owned by the frame and references to the frame instead of the buffer should be kept. \nGstBuffer output_buffer \nthe output GstBuffer. Implementations should set this either directly or by using the gst_video_decoder_allocate_output_frame or gst_video_decoder_allocate_output_buffer methods. The buffer is owned by the frame and references to the frame instead of the buffer should be kept. \nGstClockTime deadline \nRunning time when the frame will be used. \nvoid padding \nFlags for GstVideo.VideoCodecFrame \nis the frame only meant to be decoded \nGstVideo.VideoCodecFrameFlags.prototype.sync_point \nis the frame a synchronization point keyframe \nGstVideo.VideoCodecFrameFlags.prototype.force_keyframe \nshould the output frame be made a keyframe \nGstVideo.VideoCodecFrameFlags.prototype.force_keyframe_headers \nshould the encoder output stream headers \n"});