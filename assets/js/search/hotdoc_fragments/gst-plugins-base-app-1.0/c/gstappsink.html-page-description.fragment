fragment_downloaded_cb({"url": "gst-plugins-base-app-1.0/c/gstappsink.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstappsink.h\">\n<h1 id=\"gstappsink\">GstAppSink</h1><p>Appsink is a sink plugin that supports many different methods for making\nthe application get a handle on the GStreamer data in a pipeline. Unlike\nmost GStreamer elements, Appsink provides external API functions.</p>\n<p>appsink can be used by linking to the gstappsink.h header file to access the\nmethods or by using the appsink action signals and properties.</p>\n<p>The normal way of retrieving samples from appsink is by using the\n<a href=\"gstappsink.html#gst_app_sink_pull_sample\">gst_app_sink_pull_sample</a> and <a href=\"gstappsink.html#gst_app_sink_pull_preroll\">gst_app_sink_pull_preroll</a> methods.\nThese methods block until a sample becomes available in the sink or when the\nsink is shut down or reaches EOS. There are also timed variants of these\nmethods, <a href=\"gstappsink.html#gst_app_sink_try_pull_sample\">gst_app_sink_try_pull_sample</a> and <a href=\"gstappsink.html#gst_app_sink_try_pull_preroll\">gst_app_sink_try_pull_preroll</a>,\nwhich accept a timeout parameter to limit the amount of time to wait.</p>\n<p>Appsink will internally use a queue to collect buffers from the streaming\nthread. If the application is not pulling samples fast enough, this queue\nwill consume a lot of memory over time. The \"max-buffers\" property can be\nused to limit the queue size. The \"drop\" property controls whether the\nstreaming thread blocks or if older buffers are dropped when the maximum\nqueue size is reached. Note that blocking the streaming thread can negatively\naffect real-time performance and should be avoided.</p>\n<p>If a blocking behaviour is not desirable, setting the \"emit-signals\" property\nto <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> will make appsink emit the \"new-sample\" and \"new-preroll\" signals\nwhen a sample can be pulled without blocking.</p>\n<p>The \"caps\" property on appsink can be used to control the formats that\nappsink can receive. This property can contain non-fixed caps, the format of\nthe pulled samples can be obtained by getting the sample caps.</p>\n<p>If one of the pull-preroll or pull-sample methods return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a>, the appsink\nis stopped or in the EOS state. You can check for the EOS state with the\n\"eos\" property or with the <a href=\"gstappsink.html#gst_app_sink_is_eos\">gst_app_sink_is_eos</a> method.</p>\n<p>The eos signal can also be used to be informed when the EOS state is reached\nto avoid polling.</p>\n\n</div>\n\n\n"});