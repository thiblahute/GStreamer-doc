fragment_downloaded_cb({"url": "gst-plugins-base-app-1.0/c/gstappsink.html#gst_app_sink_try_pull_preroll", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_app_sink_try_pull_preroll\">\n\t\t\n<h4 id=\"gst_app_sink_try_pull_preroll1\">\n\t<span><code>gst_app_sink_try_pull_preroll</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstSample\" href=\"../../libgstreamer-1.0/c/gstsample.html#GstSample\">GstSample</a> *\ngst_app_sink_try_pull_preroll (<a title=\"GstAppSink\" href=\"gstappsink.html#GstAppSink\">GstAppSink</a> * appsink,\n                               <a title=\"GstClockTime\" href=\"../../libgstreamer-1.0/c/gstclock.html#GstClockTime\">GstClockTime</a> timeout)</pre>\n\n<p>Get the last preroll sample in <em>appsink</em>. This was the sample that caused the\nappsink to preroll in the PAUSED state. This sample can be pulled many times\nand remains available to the application even after EOS.</p>\n<p>This function is typically used when dealing with a pipeline in the PAUSED\nstate. Calling this function after doing a seek will give the sample right\nafter the seek position.</p>\n<p>Note that the preroll sample will also be returned as the first sample\nwhen calling <a href=\"gstappsink.html#gst_app_sink_pull_sample\">gst_app_sink_pull_sample</a>.</p>\n<p>If an EOS event was received before any buffers or the timeout expires,\nthis function returns <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a>. Use gst_app_sink_is_eos () to check for the EOS\ncondition.</p>\n<p>This function blocks until a preroll sample or EOS is received, the appsink\nelement is set to the READY/NULL state, or the timeout expires.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters16\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>appsink:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstappsink.html#GstAppSink\">GstAppSink</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timeout:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the maximum amount of time to wait for the preroll sample</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h5 id=\"returns9\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"../../libgstreamer-1.0/c/gstsample.html#GstSample\">GstSample</a> or NULL when the appsink is stopped or EOS or the timeout expires.\nCall <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstSample.html#gst-sample-unref\">gst_sample_unref</a> after usage.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstSample\" href=\"../../libgstreamer-1.0/c/gstsample.html#GstSample\">GstSample</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n\n\n"});