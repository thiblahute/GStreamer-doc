fragment_downloaded_cb({"url": "plugin-development/advanced/negotiation.html#dynamic-negotiation", "fragment": "Dynamic negotiation \nA last negotiation method is the most complex and powerful dynamic negotiation. \nLike with the transform negotiation in Transform negotiation dynamic negotiation will perform a transformation on the downstream upstream caps. Unlike the transform negotiation this transform will convert fixed caps to unfixed caps. This means that the sink pad input caps can be converted into unfixed multiple formats. The source pad will have to choose a format from all the possibilities. It would usually like to choose a format that requires the least amount of effort to produce but it does not have to be. The selection of the format should also depend on the caps that can be accepted downstream see a QUERY_CAPS function in Implementing a CAPS query function \nA typical flow goes like this \nCaps are received on the sink pad of the element. \nIf the element prefers to operate in passthrough mode check if downstream accepts the caps with the ACCEPT_CAPS query. If it does we can complete negotiation and we can operate in passthrough mode. \nCalculate the possible caps for the source pad. \nQuery the downstream peer pad for the list of possible caps. \nSelect from the downstream list the first caps that you can transform to and set this as the output caps. You might have to fixate the caps to some reasonable defaults to construct fixed caps. \nExamples of this type of elements include \nConverter elements such as videoconvert audioconvert audioresample videoscale \nSource elements such as audiotestsrc videotestsrc v4l2src pulsesrc \nLet s look at the example of an element that can convert between samplerates so where input and output samplerate don t have to be the same \n"});