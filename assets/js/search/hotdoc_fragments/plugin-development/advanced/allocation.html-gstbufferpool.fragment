fragment_downloaded_cb({"url": "plugin-development/advanced/allocation.html#gstbufferpool", "fragment": "GstBufferPool \nThe GstBufferPool object provides a convenient base class for managing lists of reusable buffers. Essential for this object is that all the buffers have the same properties such as size padding metadata and alignment. \nA bufferpool object can be configured to manage a minimum and maximum amount of buffers of a specific size. A bufferpool can also be configured to use a specific GstAllocator for the memory of the buffers. There is support in the bufferpool to enable bufferpool specific options such as adding GstMeta to the buffers in the pool or such as enabling specific padding on the memory in the buffers. \nA Bufferpool can be inactivate and active. In the inactive state you can configure the pool. In the active state you can t change the configuration anymore but you can acquire and release buffers from to the pool. \nIn the following sections we take a look at how you can use a bufferpool. \n"});