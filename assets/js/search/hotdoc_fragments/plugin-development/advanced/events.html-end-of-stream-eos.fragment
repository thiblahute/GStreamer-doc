fragment_downloaded_cb({"url": "plugin-development/advanced/events.html#end-of-stream-eos", "fragment": "End of Stream EOS \nEnd of stream events are sent if the stream that an element sends out is finished. An element receiving this event from upstream so it receives it on its sinkpad will generally just process any buffered data if there is any and then forward the event further downstream. The gst_pad_event_default takes care of all this so most elements do not need to support this event. Exceptions are elements that explicitly need to close a resource down on EOS and N to elements. Note that the stream itself is not a resource that should be closed down on EOS Applications might seek back to a point before EOS and continue playing again. \nThe EOS event has no properties which makes it one of the simplest events in GStreamer. It is created using the gst_event_new_eos function. \nIt is important to note that only elements driving the pipeline should ever send an EOS event. If your element is chain based it is not driving the pipeline. Chain based elements should just return GST_FLOW_EOS from their chain function at the end of the stream or the configured segment the upstream element that is driving the pipeline will then take care of sending the EOS event or alternatively post a SEGMENT_DONE message on the bus depending on the mode of operation If you are implementing your own source element you also do not need to ever manually send an EOS event you should also just return GST_FLOW_EOS in your create or fill function assuming your element derives from GstBaseSrc or GstPushSrc \n"});