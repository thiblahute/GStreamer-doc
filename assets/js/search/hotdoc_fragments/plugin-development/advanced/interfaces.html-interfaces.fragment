fragment_downloaded_cb({"url": "plugin-development/advanced/interfaces.html#interfaces", "fragment": "Interfaces \nPreviously in the chapter Adding Properties we have introduced the concept of GObject properties of controlling an element s behaviour. This is very powerful but it has two big disadvantages first of all it is too generic and second it isn t dynamic. \nThe first disadvantage is related to the customizability of the end user interface that will be built to control the element. Some properties are more important than others. Some integer properties are better shown in a spin button widget whereas others would be better represented by a slider widget. Such things are not possible because the UI has no actual meaning in the application. A UI widget that represents a bitrate property is the same as a UI widget that represents the size of a video as long as both are of the same GParamSpec type. Another problem is that things like parameter grouping function grouping or parameter coupling are not really possible. \nThe second problem with parameters are that they are not dynamic. In many cases the allowed values for a property are not fixed but depend on things that can only be detected at runtime. The names of inputs for a TV card in a video4linux source element for example can only be retrieved from the kernel driver when we ve opened the device this only happens when the element goes into the READY state. This means that we cannot create an enum property type to show this to the user. \nThe solution to those problems is to create very specialized types of controls for certain often used controls. We use the concept of interfaces to achieve this. The basis of this all is the glib GTypeInterface type. For each case where we think it s useful we ve created interfaces which can be implemented by elements at their own will. \nOne important note interfaces do not replace properties. Rather interfaces should be built next to properties. There are two important reasons for this. First of all properties can be more easily introspected. Second properties can be specified on the commandline gst launch \n"});