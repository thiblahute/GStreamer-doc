fragment_downloaded_cb({"url": "plugin-development/element-types/base-classes.html#writing-an-audio-sink", "fragment": "Writing an audio sink \nEssentially audio sink implementations are just a special case of a general sink. An audio sink has the added complexity that it needs to schedule playback of samples. It must match the clock selected in the pipeline against the clock of the audio device and calculate and compensate for drift and jitter. \nThere are two audio base classes that you can choose to derive from depending on your needs GstAudioBasesink and GstAudioSink. The audiobasesink provides full control over how synchronization and scheduling is handled by using a ringbuffer that the derived class controls and provides. The audiosink base class is a derived class of the audiobasesink implementing a standard ringbuffer implementing default synchronization and providing a standard audio sample clock. Derived classes of this base class merely need to provide a _open _close and a _write function implementation and some optional functions. This should suffice for many sound server output elements and even most interfaces. More demanding audio systems such as Jack would want to implement the GstAudioBaseSink base class. \nThe GstAudioBaseSink has little to no limitations and should fit virtually every implementation but is hard to implement. The GstAudioSink on the other hand only fits those systems with a simple open close write API which practically means pretty much all of them but has the advantage that it is a lot easier to implement. The benefits of this second base class are large \nAutomatic synchronization without any code in the derived class. \nAlso automatically provides a clock so that other sinks e.g. in case of audio video playback are synchronized. \nFeatures can be added to all audiosinks by making a change in the base class which makes maintenance easy. \nDerived classes require only three small functions plus some GObject boilerplate code. \nIn addition to implementing the audio base class virtual functions derived classes can should also implement the GstBaseSink set_caps and get_caps virtual functions for negotiation. \n"});