fragment_downloaded_cb({"url": "plugin-development/basics/args.html#page-description", "fragment": "The primary and most important way of controlling how an element behaves is through GObject properties. GObject properties are defined in the _class_init function. The element optionally implements a _get_property and a _set_property function. These functions will be notified if an application changes or requests the value of a property and can then fill in the value or take action required for that property to change value internally. \nYou probably also want to keep an instance variable around with the currently configured value of the property that you use in the get and set functions. Note that GObject will not automatically set your instance variable to the default value you will have to do that in the _init function of your element. \nThe above is a very simple example of how properties are used. Graphical applications will use these properties and will display a user controllable widget with which these properties can be changed. This means that for the property to be as user friendly as possible you should be as exact as possible in the definition of the property. Not only in defining ranges in between which valid properties can be located for integers floats etc. but also in using very descriptive better yet internationalized strings in the definition of the property and if possible using enums and flags instead of integers. The GObject documentation describes these in a very complete way but below we ll give a short example of where this is useful. Note that using integers here would probably completely confuse the user because they make no sense in this context. The example is stolen from videotestsrc. \n"});