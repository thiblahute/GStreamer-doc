fragment_downloaded_cb({"url": "gst-devtools-doc-1.0/c/gst-validate-reporter.html#gst_validate_reporter_set_handle_g_logs", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_validate_reporter_set_handle_g_logs\">\n\t\t<h3 id=\"gst_validate_reporter_set_handle_g_logs1\">\n\t<span><code>gst_validate_reporter_set_handle_g_logs</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_validate_reporter_set_handle_g_logs (GstValidateReporter* reporter)</pre>\n\n<p>Set <em>reporter</em> has the 'source' of any g_log happening during the\nexecution. Usually the monitor of the first <a href=\"../../libgstreamer-doc-1.0/c/gstpipeline.html#GstPipeline\">GstPipeline</a> is used\nto handle g_logs.</p>\n<p>Basically this function is used in order to start tracking any\nissue reported with g_log in the process into GstValidate report\nin the GstValidate reporting system.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters5\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>reporter:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The GstValidateReporter to set has the handler for g_log</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});