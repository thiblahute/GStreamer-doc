fragment_downloaded_cb({"url": "tutorials/basic/playback-speed.html#walkthrough", "fragment": "Walkthrough \nThere is nothing new in the initialization code in the main function a playbin pipeline is instantiated an I O watch is installed to track keystrokes and a GLib main loop is executed. \nThen in the keyboard handler function \nPause Playing toggle is handled with gst_element_set_state as in previous tutorials. \nUse S and s to double or halve the current playback rate and d to reverse the current playback direction. In both cases the rate variable is updated and send_seek_event is called. Let s review this function. \nThis function creates a new Seek Event and sends it to the pipeline to update the rate. First the current position is recovered with gst_element_query_position This is needed because the Seek Event jumps to another position in the stream and since we do not actually want to move we jump to the current position. Using a Step Event would be simpler but this event is not currently fully functional as explained in the Introduction. \nThe Seek Event is created with gst_event_new_seek Its parameters are basically the new rate the new start position and the new stop position. Regardless of the playback direction the start position must be smaller than the stop position so the two playback directions are treated differently. \nAs explained in the Introduction to avoid performing multiple Seeks the Event is sent to only one sink in this case the video sink. It is obtained from playbin through the video sink property. It is read at this time instead at initialization time because the actual sink may change depending on the media contents and this won t be known until the pipeline is PLAYING and some media has been read. \nThe new Event is finally sent to the selected sink with gst_element_send_event \nBack to the keyboard handler we still miss the frame stepping code which is really simple \nA new Step Event is created with gst_event_new_step whose parameters basically specify the amount to skip frame in the example and the new rate which we do not change \nThe video sink is grabbed from playbin in case we didn t have it yet just like before. \nAnd with this we are done. When testing this tutorial keep in mind that backward playback is not optimal in many elements. \n\n"});