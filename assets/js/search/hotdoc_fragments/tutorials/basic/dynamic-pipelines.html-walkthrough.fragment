fragment_downloaded_cb({"url": "tutorials/basic/dynamic-pipelines.html#walkthrough", "fragment": "Walkthrough \nSo far we have kept all the information we needed pointers to GstElements basically as local variables. Since this tutorial and most real applications involves callbacks we will group all our data in a structure for easier handling. \nThis is a forward reference to be used later. \nWe create the elements as usual. uridecodebin will internally instantiate all the necessary elements sources demuxers and decoders to turn a URI into raw audio and or video streams. It does half the work that playbin does. Since it contains demuxers its source pads are not initially available and we will need to link to them on the fly. \naudioconvert is useful for converting between different audio formats making sure that this example will work on any platform since the format produced by the audio decoder might not be the same that the audio sink expects. \nThe autoaudiosink is the equivalent of autovideosink seen in the previous tutorial for audio. It will render the audio stream to the audio card. \nHere we link the converter element to the sink but we DO NOT link them with the source since at this point it contains no source pads. We just leave this branch converter sink unlinked until later on. \nWe set the URI of the file to play via a property just like we did in the previous tutorial. \n"});