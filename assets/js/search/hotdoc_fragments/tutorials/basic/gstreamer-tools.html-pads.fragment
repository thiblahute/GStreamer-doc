fragment_downloaded_cb({"url": "tutorials/basic/gstreamer-tools.html#pads", "fragment": "Pads \nInstead of letting GStreamer choose which Pad to use when linking two elements you may want to specify the Pads directly. You can do this by adding a dot plus the Pad name after the name of the element it must be a named element Learn the names of the Pads of an element by using the gst inspect tool. \nThis is useful for example when you want to retrieve one particular stream out of a demuxer \nThis fetches a media file from the internet using souphttpsrc which is in webm format a special kind of Matroska container see Basic tutorial GStreamer concepts We then open the container using matroskademux. This media contains both audio and video so matroskademux will create two output Pads named video_00 and audio_00. We link video_00 to a matroskamux element to re pack the video stream into a new container and finally link it to a filesink which will write the stream into a file named sintel_video.mkv the location property specifies the name of the file \nAll in all we took a webm file stripped it of audio and generated a new matroska file with the video. If we wanted to keep only the audio \nThe vorbisparse element is required to extract some information from the stream and put it in the Pad Caps so the next element matroskamux knows how to deal with the stream. In the case of video this was not necessary because matroskademux already extracted this information and added it to the Caps. \nNote that in the above two examples no media has been decoded or played. We have just moved from one container to another demultiplexing and re multiplexing again \n"});