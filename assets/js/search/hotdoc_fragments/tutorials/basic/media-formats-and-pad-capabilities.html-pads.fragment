fragment_downloaded_cb({"url": "tutorials/basic/media-formats-and-pad-capabilities.html#pads", "fragment": "Pads \nAs it has already been shown Pads allow information to enter and leave an element. The Capabilities or Caps for short of a Pad then specify what kind of information can travel through the Pad. For example RGB video with a resolution of x200 pixels and frames per second or bits per sample audio channels at samples per second or even compressed formats like mp3 or h264. \nPads can support multiple Capabilities for example a video sink can support video in different types of RGB or YUV formats and Capabilities can be specified as ranges for example an audio sink can support samples rates from to samples per second However the actual information traveling from Pad to Pad must have only one well specified type. Through a process known as negotiation two linked Pads agree on a common type and thus the Capabilities of the Pads become fixed they only have one type and do not contain ranges The walkthrough of the sample code below should make all this clear. \nIn order for two elements to be linked together they must share a common subset of Capabilities Otherwise they could not possibly understand each other This is the main goal of Capabilities. \nAs an application developer you will usually build pipelines by linking elements together to a lesser extent if you use all in all elements like playbin In this case you need to know the Pad Caps as they are familiarly referred to of your elements or at least know what they are when GStreamer refuses to link two elements with a negotiation error. \n"});