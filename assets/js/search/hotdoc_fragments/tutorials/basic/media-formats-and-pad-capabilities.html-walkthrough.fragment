fragment_downloaded_cb({"url": "tutorials/basic/media-formats-and-pad-capabilities.html#walkthrough", "fragment": "Walkthrough \nThe print_field print_caps and print_pad_templates simply display in a human friendly format the capabilities structures. If you want to learn about the internal organization of the GstCaps structure read the GStreamer Documentation regarding Pad Caps. \ngst_element_get_static_pad retrieves the named Pad from the given element. This Pad is static because it is always present in the element. To know more about Pad availability read the GStreamer documentation about Pads. \nThen we call gst_pad_get_current_caps to retrieve the Pad s current Capabilities which can be fixed or not depending on the state of the negotiation process. They could even be non existent in which case we call gst_pad_query_caps to retrieve the currently acceptable Pad Capabilities. The currently acceptable Caps will be the Pad Template s Caps in the NULL state but might change in later states as the actual hardware Capabilities might be queried. \nWe then print these Capabilities. \nIn the previous tutorials we created the elements directly using gst_element_factory_make and skipped talking about factories but we will do now. A GstElementFactory is in charge of instantiating a particular type of element identified by its factory name. \nYou can use gst_element_factory_find to create a factory of type videotestsrc and then use it to instantiate multiple videotestsrc elements using gst_element_factory_create gst_element_factory_make is really a shortcut for gst_element_factory_find gst_element_factory_create \nThe Pad Templates can already be accessed through the factories so they are printed as soon as the factories are created. \nWe skip the pipeline creation and start and go to the State Changed message handling \nThis simply prints the current Pad Caps every time the state of the pipeline changes. You should see in the output how the initial caps the Pad Template s Caps are progressively refined until they are completely fixed they contain a single type with no ranges \n"});