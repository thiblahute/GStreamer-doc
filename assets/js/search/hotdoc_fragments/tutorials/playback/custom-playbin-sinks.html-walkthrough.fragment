fragment_downloaded_cb({"url": "tutorials/playback/custom-playbin-sinks.html#walkthrough", "fragment": "Walkthrough \nAll the Elements that compose our sink bin are instantiated. We use an equalizer bands and an autoaudiosink with an audioconvert in between because we are not sure of the capabilities of the audio sink since they are hardware dependant \nThis adds the new Elements to the Bin and links them just as we would do if this was a pipeline. \nNow we need to create a Ghost Pad so this partial pipeline inside the Bin can be connected to the outside. This Ghost Pad will be connected to a Pad in one of the internal Elements the sink pad of the equalizer so we retrieve this Pad with gst_element_get_static_pad Remember from Basic tutorial Multithreading and Pad Availability that if this was a Request Pad instead of an Always Pad we would need to use gst_element_request_pad \nThe Ghost Pad is created with gst_ghost_pad_new pointing to the inner Pad we just acquired and activated with gst_pad_set_active It is then added to the Bin with gst_element_add_pad transferring ownership of the Ghost Pad to the bin so we do not have to worry about releasing it. \nFinally the sink Pad we obtained from the equalizer needs to be release with gst_object_unref \nAt this point we have a functional sink bin which we can use as the audio sink in playbin. We just need to instruct playbin to use it \nIt is as simple as setting the audio sink property on playbin to the newly created sink. \nThe only bit remaining is to configure the equalizer. For this example the two higher frequency bands are set to the maximum attenuation so the bass is boosted. Play a bit with the values to feel the difference Look at the documentation for the equalizer bands element for the allowed range of values \n"});