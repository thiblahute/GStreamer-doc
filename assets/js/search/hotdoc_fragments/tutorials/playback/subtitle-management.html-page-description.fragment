fragment_downloaded_cb({"url": "tutorials/playback/subtitle-management.html#page-description", "fragment": "This tutorial is very similar to the previous one but instead of switching among different audio streams we will use subtitle streams. This will allow us to learn \nHow to choose the subtitle stream \nHow to add external subtitles \nHow to customize the font used for the subtitles \nWe already know from the previous tutorial that container files can hold multiple audio and video streams and that we can very easily choose among them by changing the current audio or current video playbin property. Switching subtitles is just as easy. \nIt is worth noting that just like it happens with audio and video playbin takes care of choosing the right decoder for the subtitles and that the plugin structure of GStreamer allows adding support for new formats as easily as copying a file. Everything is invisible to the application developer. \nBesides subtitles embedded in the container playbin offers the possibility to add an extra subtitle stream from an external URI. \nThis tutorial opens a file which already contains subtitle streams and adds another one from another file for the Greek language \nCopy this code into a text file named playback tutorial c or find it in the GStreamer installation \nplayback tutorial c \nNeed help \nIf you need help to compile this code refer to the Building the tutorials section for your platform Linux Mac OS X or Windows or use this specific command on Linux \ngcc playback tutorial c o playback tutorial pkg config cflags libs gstreamer \nIf you need help to run this code refer to the Running the tutorials section for your platform Linux Mac OS X or Windows \nThis tutorial opens a window and displays a movie with accompanying audio. The media is fetched from the Internet so the window might take a few seconds to appear depending on your connection speed. The number of subtitle streams is shown in the terminal and the user can switch from one to another by entering a number and pressing enter. A small delay is to be expected. Please read the note at the bottom of this page. Bear in mind that there is no latency management buffering so on slow connections the movie might stop after a few seconds. See how Basic tutorial Streaming solves this issue. \nRequired libraries gstreamer \nThis tutorial is copied from Playback tutorial Playbin usage with some changes so let s review only the changes. \nAfter setting the media URI we set the suburi property which points playbin to a file containing a subtitle stream. In this case the media file already contains multiple subtitle streams so the one provided in the suburi is added to the list and will be the currently selected one. \nNote that metadata concerning a subtitle stream like its language resides in the container file therefore subtitles not embedded in a container will not have metadata. When running this tutorial you will find that the first subtitle stream does not have a language tag. \nThe subtitle font desc property allows specifying the font to render the subtitles. Since Pango is the library used to render fonts you can check its documentation to see how this font should be specified in particular the pango font description from string function. \nIn a nutshell the format of the string representation is FAMILY LIST STYLE OPTIONS SIZE where FAMILY LIST is a comma separated list of families optionally terminated by a comma STYLE_OPTIONS is a whitespace separated list of words where each word describes one of style variant weight or stretch and SIZE is an decimal number size in points For example the following are all valid string representations \nThe commonly available font families are Normal Sans Serif and Monospace. \nThe available styles are Normal the font is upright Oblique the font is slanted but in a roman style Italic the font is slanted in an italic style \nThe available weights are Ultra Light Light Normal Bold Ultra Bold Heavy. \nThe available variants are Normal Small_Caps A font with the lower case characters replaced by smaller variants of the capital characters \nThe available stretch styles are Ultra Condensed Extra Condensed Condensed Semi Condensed Normal Semi Expanded Expanded Extra Expanded Ultra Expanded \nWe set the flags property to allow Audio Video and Text Subtitles \nThe rest of the tutorial is the same as Playback tutorial Playbin usage except that the keyboard input changes the current text property instead of the current audio. As before keep in mind that stream changes are not immediate since there is a lot of information flowing through the pipeline that needs to reach the end of it before the new stream shows up. \nThis tutorial showed how to handle subtitles from playbin whether they are embedded in the container or in a different file \nSubtitles are chosen using the current text and n text properties of playbin. \nExternal subtitle files can be selected using the suburi property. \nSubtitle appearance can be customized with the subtitle font desc property. \nThe next playback tutorial shows how to change the playback speed. \nRemember that attached to this page you should find the complete source code of the tutorial and any accessory files needed to build it. It has been a pleasure having you here and see you soon \n"});