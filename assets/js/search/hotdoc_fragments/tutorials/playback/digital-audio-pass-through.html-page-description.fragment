fragment_downloaded_cb({"url": "tutorials/playback/digital-audio-pass-through.html#page-description", "fragment": "Playback tutorial Digital audio pass through \nInner workings of GStreamer audio sinks \nPrecautions with digital formats \nFirst off digital audio output must be enabled at the system level. The method to achieve this depend on the operating system but it generally involves going to the audio control panel and activating a checkbox reading Digital Audio Output or similar. \nThe main GStreamer audio sinks for each platform Pulse Audio pulsesink for Linux osxaudiosink for OS X and Direct Sound directsoundsink for Windows detect when digital audio output is available and change their input caps accordingly to accept encoded data. For example these elements typically accept audio x raw data when digital audio output is enabled in the system they may also accept audio mpeg audio x ac3 audio x eac3 or audio x dts. \nThen when playbin builds the decoding pipeline it realizes that the audio sink can be directly connected to the encoded data typically coming out of a demuxer so there is no need for a decoder. This process is automatic and does not need any action from the application. \nOn Linux there exist other audio sinks like Alsa alsasink which work differently a digital device needs to be manually selected through the device property of the sink Pulse Audio though is the commonly preferred audio sink on Linux. \nWhen Digital Audio Output is enabled at the system level the GStreamer audio sinks automatically expose all possible digital audio caps regardless of whether the actual audio decoder at the end of the S PDIF cable is able to decode all those formats. This is so because there is no mechanism to query an external audio decoder which formats are supported and in fact the cable can even be disconnected during this process. \nFor example after enabling Digital Audio Output in the system s Control Panel directsoundsink will automatically expose audio x ac3 audio x eac3 and audio x dts caps in addition to audio x raw. However one particular external decoder might only understand raw integer streams and would try to play the compressed data as such a painful experience for your ears rest assured \nSolving this issue requires user intervention since only the user knows the formats supported by the external decoder. \nOn some systems the simplest solution is to inform the operating system of the formats that the external audio decoder can accept. In this way the GStreamer audio sinks will only offer these formats. The acceptable audio formats are commonly selected from the operating system s audio configuration panel from the same place where Digital Audio Output is enabled but unfortunately this option is not available in all audio drivers. \nAnother solution involves using a custom sinkbin see Playback tutorial Custom playbin sinks which includes a capsfilter element see Basic tutorial Handy elements and an audio sink. The caps that the external decoder supports are then set in the capsfiler so the wrong format is not output. This allows the application to enforce the appropriate format instead of relying on the user to have the system correctly configured. Still requires user intervention but can be used regardless of the options the audio driver offers. \nPlease do not use autoaudiosink as the audio sink as it currently only supports raw audio and will ignore any compressed format. \n"});