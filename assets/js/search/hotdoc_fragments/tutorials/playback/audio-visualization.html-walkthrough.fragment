fragment_downloaded_cb({"url": "tutorials/playback/audio-visualization.html#walkthrough", "fragment": "Walkthrough \nFirst off we indicate playbin that we want an audio visualization by setting the GST_PLAY_FLAG_VIS flag. If the media already contains video this flag has no effect. \nIf no visualization plugin is enforced by the user playbin will use goom audio visualization will be disabled if goom is not available The rest of the tutorial shows how to find out the available visualization elements and enforce one to playbin. \ngst_registry_feature_filter examines all elements currently in the GStreamer registry and selects those for which the filter_vis_features function returns TRUE. This function selects only the Visualization plugins \nA bit of theory regarding the organization of GStreamer elements is in place Each of the files that GStreamer loads at runtime is known as a Plugin GstPlugin A Plugin can contain many Features GstPluginFeature There are different kinds of Features among them the Element Factories GstElementFactory that we have been using to build Elements GstElement \nThis function simply disregards all Features which are not Factories and then all Factories whose class obtained with gst_element_factory_get_klass does not include Visualization As stated in the documentation for GstElementFactory a Factory s class is a string describing the type of element as an unordered list separated with slashes Examples of classes are Source Network Codec Decoder Video Codec Encoder Audio or Visualization \nOnce we have the list of Visualization plugins we print their names gst_element_factory_get_longname and choose one in this case GOOM \nThe selected factory is used to instantiate an actual GstElement which is then passed to playbin through the vis plugin property \nAnd we are done. \n"});