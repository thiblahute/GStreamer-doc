fragment_downloaded_cb({"url": "tutorials/ios/a-complete-media-player.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"a-complete-media-player.md\">\n<h1 id=\"ios-tutorial-5-a-complete-media-player\">iOS tutorial 5: A Complete media player</h1>\n<h2 id=\"goal\">Goal</h2>\n<p><img src=\"images/tutorials/ios-a-complete-media-player-screenshot-0.png\" alt=\"screenshot0\" id=\"screenshot0\">\n<img src=\"images/tutorials/ios-a-complete-media-player-screenshot-1.png\" alt=\"screenshot1\" id=\"screenshot1\"></p>\n<p>This tutorial wants to be the \u201cdemo application\u201d that showcases what can\nbe done with GStreamer on the iOS platform.</p>\n<p>It is intended to be built and run, rather than analyzed for its\npedagogical value, since it adds very little GStreamer knowledge over\nwhat has already been shown in <a href=\"a-basic-media-player.html\">iOS tutorial 4: A basic media player</a>.</p>\n<p>It demonstrates the main functionality that a conventional media player\nhas, but it is not a complete application yet, therefore it has not been\nuploaded to the AppStore.</p>\n<h2 id=\"introduction\">Introduction</h2>\n<p>The previous tutorial already implemented a basic media player. This one\nsimply adds a few finishing touches. In particular, it adds the\ncapability to choose the media to play, and disables the screensaver\nduring media playback.</p>\n<p>These are not features directly related to GStreamer, and are therefore\noutside the scope of these tutorials. Only a few implementation pointers\nare given here.</p>\n<h2 id=\"selecting-the-media-to-play\">Selecting the media to play</h2>\n<p>A new <code>UIView</code> has been added, derived from <code>UITableViewController</code>\nwhich shows a list of clips. When one is selected, the\n<code>VideoViewController</code> from <a href=\"a-basic-media-player.html\">iOS tutorial 4: A basic media player</a> appears\nand its URI property is set to the URI of the selected clip.</p>\n<p>The list of clips is populated from three sources: Media from the\ndevice\u2019s Photo library, Media from the application\u2019s Documents folder\n(accessible through iTunes file sharing) and a list of hardcoded\nInternet addresses, selected to showcase different container and codec\nformats, and a couple of bogus ones, to illustrate error reporting.</p>\n<h2 id=\"preventing-the-screen-from-turning-off\">Preventing the screen from turning off</h2>\n<p>While watching a movie, there is typically no user activity. After a\nshort period of such inactivity, iOS will dim the screen, and then turn\nit off completely. To prevent this, the <code>idleTimerDisabled</code> property of\nthe <code>UIApplication</code> class is used. The application sets it to YES\n(screen locking disabled) when the Play button is pressed, so the screen\nis never turned off, and sets it back to NO when the Pause button is\npressed.</p>\n<h2 id=\"conclusion\">Conclusion</h2>\n<p>This finishes the series of iOS tutorials. Each one of the preceding\ntutorials has evolved on top of the previous one, showing how to\nimplement a particular set of features, and concluding in this Tutorial</p>\n<ol start=\"5\">\n<li>The goal of Tutorial 5 is to build a complete media player which can\nalready be used to showcase the integration of GStreamer and iOS.</li>\n</ol>\n<p>It has been a pleasure having you here, and see you soon!</p>\n\n</div>\n\n\n\t"});