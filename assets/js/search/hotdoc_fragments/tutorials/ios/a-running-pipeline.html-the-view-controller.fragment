fragment_downloaded_cb({"url": "tutorials/ios/a-running-pipeline.html#the-view-controller", "fragment": "The View Controller \nThe ViewController class manages the UI instantiates the GStreamerBackend and also performs some UI related tasks on its behalf \nViewController.m \nAn instance of the GStreamerBackend in stored inside the class \nThis instance is created in the viewDidLoad function through a custom init method in the GStreamerBackend \nThis custom method is required to pass the object that has to be used as the UI delegate in this case ourselves the ViewController \nThe Play and Pause buttons are also disabled in the viewDidLoad function and they are not re enabled until the GStreamerBackend reports that it is initialized and ready. \nThese two methods are called when the user presses the Play or Pause buttons and simply forward the call to the appropriate method in the GStreamerBackend. \nThe gstreamerInitialized method is defined in the GStreamerBackendDelegate protocol and indicates that the backend is ready to accept commands. In this case the Play and Pause buttons are re enabled and the Label text is set to Ready This method is called from a Dispatch Queue other than the Main one therefore the need for the dispatch_async call wrapping all UI code. \nThe gstreamerSetUIMessage method also belongs to the GStreamerBackendDelegate protocol. It is called when the backend wants to report some message to the user. In this case the message is copied onto the Label in the UI again from within a dispatch_async call. \n"});