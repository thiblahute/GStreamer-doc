fragment_downloaded_cb({"url": "tutorials/ios/index.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"index.md\">\n        <h1 id=\"ios-tutorials\">iOS tutorials</h1>\n<h2 id=\"welcome-to-the-gstreamer-ios-tutorials\">Welcome to the GStreamer iOS tutorials</h2>\n<p>These tutorials describe iOS-specific topics. General GStreamer\nconcepts will not be explained in these tutorials, so the\n<a href=\"../basic/index.html\">Basic tutorials</a> should be reviewed first. The reader should\nalso be familiar with basic iOS programming techniques.</p>\n<p>The iOS tutorials have the same structure as the\n<a href=\"../android/index.html\">Android tutorials</a>: Each one builds on top of the previous\none and adds progressively more functionality, until a working media\nplayer application is obtained in\n<a href=\"a-complete-media-player.html\">iOS tutorial 5: A Complete media player</a>.</p>\n<p>Make sure to have read the instructions in\n<a href=\"../../installing/for-ios-development.html\">Installing for iOS development</a> before jumping into the iOS\ntutorials.</p>\n<p>All iOS tutorials are split into the following classes:</p>\n<ul>\n<li>The <code>GStreamerBackend</code> class performs all GStreamer-related tasks\nand offers a simplified interface to the application, which does not\nneed to deal with all the GStreamer details. When it needs to\nperform any UI action, it does so through a delegate, which is\nexpected to adhere to the <code>GStreamerBackendDelegate</code> protocol.</li>\n<li>The <code>ViewController</code> class manages the UI, instantiates the\n<code>GStreamerBackend</code> and also performs some UI-related tasks on its\nbehalf.</li>\n<li>The <code>GStreamerBackendDelegate</code> protocol defines which methods a\nclass can implement in order to serve as a UI delegate for the\n<code>GStreamerBackend</code>.</li>\n</ul>\n\n        \n\n    </div>\n\n\n        "});