fragment_downloaded_cb({"url": "tutorials/ios/link-against-gstreamer.html#page-description", "fragment": "\nThe first iOS tutorial is simple. The objective is to get the GStreamer version and display it on screen. It exemplifies how to link against the GStreamer library from Xcode using objective C. \nThe tutorials code are in the gst docs in the tutorials xcode iOS folder. \nIt was created using the GStreamer Single View Application template. The view contains only a UILabel that will be used to display the GStreamer s version to the user. \nThe UI uses storyboards and contains a single View with a centered UILabel. The ViewController for the View links its label variable to this UILabel as an IBOutlet. \nViewController.h \nAll GStreamer handling code is kept in a single Objective C class called GStreamerBackend. In successive tutorials it will get expanded but for now it only contains a method to retrieve the GStreamer version. \nThe GStreamerBackend is made in Objective C so it can take care of the few C to Objective C conversions that might be necessary like char to NSString for example This eases the usage of this class by the UI code which is typically made in pure Objective C. GStreamerBackend serves exactly the same purpose as the JNI code in the Android tutorials. \nGStreamerBackend.m \nThe getGStreamerVersion method simply calls gst_version_string to obtain a string describing this version of GStreamer. This Modified UTF8 string is then converted to a NSString by NSString stringWithUTF8Stringand returned. Objective C will take care of freeing the memory used by the new NSString but we need to free the char returned by gst_version_string \nThe view controller instantiates the GStremerBackend and asks it for the GStreamer version to display at the label. That s it \nViewController.m \nThis ends the first iOS tutorial. It has shown that due to the compatibility of C and Objective C adding GStreamer support to an iOS app is as easy as it is on a Desktop application. An extra Objective C wrapper has been added the GStreamerBackend class for clarity but calls to the GStreamer framework are valid from any part of the application code. \nThe following tutorials detail the few places in which care has to be taken when developing specifically for the iOS platform. \nIt has been a pleasure having you here and see you soon \n"});