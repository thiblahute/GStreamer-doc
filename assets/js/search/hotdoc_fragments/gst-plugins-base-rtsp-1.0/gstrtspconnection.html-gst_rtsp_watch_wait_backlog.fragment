fragment_downloaded_cb({"url": "gst-plugins-base-rtsp-1.0/gstrtspconnection.html#gst_rtsp_watch_wait_backlog", "fragment": "gst_rtsp_watch_wait_backlog \nGstRtsp.RTSPWatch.wait_backlog \nGstRtsp.RTSPWatch.prototype.wait_backlog \nWait until there is place in the backlog queue timeout is reached or watch is set to flushing. \nIf timeout is NULL this function can block forever. If timeout contains a valid timeout this function will return GST_RTSP_ETIMEOUT after the timeout expired. \nThe typically use of this function is when gst_rtsp_watch_write_data returns GST_RTSP_ENOMEM. The caller then calls this function to wait for free space in the backlog queue and try again. \nParameters \na GstRTSPWatch \na GTimeVal timeout \nGST_RTSP_OK when if there is room in queue. GST_RTSP_ETIMEOUT when timeout was reached. GST_RTSP_EINTR when watch is flushing GST_RTSP_EINVAL when called with invalid parameters. \nSince \nWait until there is place in the backlog queue timeout is reached or watch is set to flushing. \nIf timeout is None this function can block forever. If timeout contains a valid timeout this function will return GstRtsp.RTSPResult.ETIMEOUT after the timeout expired. \nThe typically use of this function is when gst_rtsp_watch_write_data returns GstRtsp.RTSPResult.ENOMEM. The caller then calls this function to wait for free space in the backlog queue and try again. \nParameters \na GstRtsp.RTSPWatch \na GLib.TimeVal timeout \nGstRtsp.RTSPResult.OK when if there is room in queue. GstRtsp.RTSPResult.ETIMEOUT when timeout was reached. GstRtsp.RTSPResult.EINTR when watch is flushing GstRtsp.RTSPResult.EINVAL when called with invalid parameters. \nSince \nWait until there is place in the backlog queue timeout is reached or watch is set to flushing. \nIf timeout is null this function can block forever. If timeout contains a valid timeout this function will return GstRtsp.RTSPResult.ETIMEOUT after the timeout expired. \nThe typically use of this function is when gst_rtsp_watch_write_data returns GstRtsp.RTSPResult.ENOMEM. The caller then calls this function to wait for free space in the backlog queue and try again. \nParameters \na GstRtsp.RTSPWatch \na GLib.TimeVal timeout \nGstRtsp.RTSPResult.OK when if there is room in queue. GstRtsp.RTSPResult.ETIMEOUT when timeout was reached. GstRtsp.RTSPResult.EINTR when watch is flushing GstRtsp.RTSPResult.EINVAL when called with invalid parameters. \nSince \n"});