fragment_downloaded_cb({"url": "gst-plugins-base-rtsp-1.0/gstrtspconnection.html#gst_rtsp_watch_set_send_backlog", "fragment": "gst_rtsp_watch_set_send_backlog \nGstRtsp.RTSPWatch.set_send_backlog \nGstRtsp.RTSPWatch.prototype.set_send_backlog \nSet the maximum amount of bytes and messages that will be queued in watch. When the maximum amounts are exceeded gst_rtsp_watch_write_data and gst_rtsp_watch_send_message will return GST_RTSP_ENOMEM. \nA value of for bytes or messages means no limits. \nParameters \na GstRTSPWatch \nmaximum bytes \nmaximum messages \nSince \nSet the maximum amount of bytes and messages that will be queued in watch. When the maximum amounts are exceeded GstRtsp.RTSPWatch.write_data and GstRtsp.RTSPWatch.send_message will return GstRtsp.RTSPResult.ENOMEM. \nA value of for bytes or messages means no limits. \nParameters \na GstRtsp.RTSPWatch \nmaximum bytes \nmaximum messages \nSince \nSet the maximum amount of bytes and messages that will be queued in watch. When the maximum amounts are exceeded GstRtsp.RTSPWatch.prototype.write_data and GstRtsp.RTSPWatch.prototype.send_message will return GstRtsp.RTSPResult.ENOMEM. \nA value of for bytes or messages means no limits. \nParameters \na GstRtsp.RTSPWatch \nmaximum bytes \nmaximum messages \nSince \n"});