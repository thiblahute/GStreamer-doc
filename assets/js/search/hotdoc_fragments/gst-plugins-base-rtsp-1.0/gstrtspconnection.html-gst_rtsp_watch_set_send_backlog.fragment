fragment_downloaded_cb({"url": "gst-plugins-base-rtsp-1.0/gstrtspconnection.html#gst_rtsp_watch_set_send_backlog", "fragment": "Gst.Rtsp.RTSPWatch.SetSendBacklog \nGst.Rtsp.RTSPWatch.SetSendBacklog \nGst.Rtsp.RTSPWatch.SetSendBacklog \nGst.Rtsp.RTSPWatch.SetSendBacklog \nSet the maximum amount of bytes and messages that will be queued in watch. When the maximum amounts are exceeded Gst.Rtsp.RTSPWatch.WriteData and Gst.Rtsp.RTSPWatch.SendMessage will return Gst.Rtsp.RTSPResult.Enomem. \nA value of for bytes or messages means no limits. \nParameters \na Gst.Rtsp.RTSPWatch \nmaximum bytes \nmaximum messages \nSince \nSet the maximum amount of bytes and messages that will be queued in watch. When the maximum amounts are exceeded Gst.Rtsp.RTSPWatch.WriteData and Gst.Rtsp.RTSPWatch.SendMessage will return Gst.Rtsp.RTSPResult.Enomem. \nA value of for bytes or messages means no limits. \nParameters \na Gst.Rtsp.RTSPWatch \nmaximum bytes \nmaximum messages \nSince \nSet the maximum amount of bytes and messages that will be queued in watch. When the maximum amounts are exceeded Gst.Rtsp.RTSPWatch.WriteData and Gst.Rtsp.RTSPWatch.SendMessage will return Gst.Rtsp.RTSPResult.Enomem. \nA value of for bytes or messages means no limits. \nParameters \nmaximum bytes \nmaximum messages \nSince \nSet the maximum amount of bytes and messages that will be queued in watch. When the maximum amounts are exceeded Gst.Rtsp.RTSPWatch.WriteData and Gst.Rtsp.RTSPWatch.SendMessage will return Gst.Rtsp.RTSPResult.Enomem. \nA value of for bytes or messages means no limits. \nParameters \na Gst.Rtsp.RTSPWatch \nmaximum bytes \nmaximum messages \nSince \n"});