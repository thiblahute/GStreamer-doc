fragment_downloaded_cb({"url": "gst-plugins-base-rtsp-1.0/javascript/gstrtspconnection.html#gstrtsprtspwatchwrite_data", "fragment": "GstRtsp.RTSPWatch.write_data \nWrite data using the connection of the watch. If it cannot be sent immediately it will be queued for transmission in watch. The contents of message will then be serialized and transmitted when the connection of the watch becomes writable. In case the message is queued the ID returned in id will be non zero and used as the ID argument in the message_sent callback. \nThis function will take ownership of data and GLib.free it after use. \nIf the amount of queued data exceeds the limits set with GstRtsp.RTSPWatch.set_send_backlog this function will return GstRtsp.RTSPResult.enomem. \nParameters \na GstRtsp.RTSPWatch \nthe data to queue \nthe size of data \nReturns a tuple made of \nGstRtsp.RTSPResult.ok on success. GstRtsp.RTSPResult.enomem when the backlog limits are reached. GstRtsp.RTSPResult.eintr when watch was flushing. \nGstRtsp.RTSPResult.ok on success. GstRtsp.RTSPResult.enomem when the backlog limits are reached. GstRtsp.RTSPResult.eintr when watch was flushing. \n"});