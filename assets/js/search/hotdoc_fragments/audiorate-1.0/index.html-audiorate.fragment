fragment_downloaded_cb({"url": "audiorate-1.0/index.html#audiorate", "fragment": "Example pipelines \nHierarchy \nFactory details \nThis element takes an incoming stream of timestamped raw audio frames and produces a perfect stream by inserting or dropping samples as needed. \nThis operation may be of use to link to elements that require or otherwise implicitly assume a perfect stream as they do not store timestamps but derive this by some means e.g. bitrate for some AVI cases \nThe properties in out add and drop can be read to obtain information about number of input samples output samples dropped samples i.e. the number of unused input samples and inserted samples i.e. the number of samples added to stream \nWhen the silent property is set to FALSE a GObject property notification will be emitted whenever one of the add or drop values changes. This can potentially cause performance degradation. Note that property notification will happen from the streaming thread so applications should be prepared for this. \nIf the tolerance property is non zero and an incoming buffer s timestamp deviates less than the property indicates from what would make a perfect time then no samples will be added or dropped. Note that the output is still guaranteed to be a perfect stream which means that the incoming data is then simply shifted by less than the indicated tolerance to a perfect time. \nCapture audio from the sound card and turn it into a perfect stream for saving in a raw audio file. \nDecodes an audio file and transforms it into a perfect stream for saving in a raw audio WAV file. Without the audio rate the timing might not be preserved correctly in the WAV file in case the decoded stream is jittery or there are samples missing. \n"});