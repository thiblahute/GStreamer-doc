fragment_downloaded_cb({"url": "design/orc-integration.html#advanced-usage", "fragment": "Advanced Usage \nThe Holy Grail of Orc usage is to programmatically generate Orc code at runtime have liborc compile it into binary code at runtime and then execute this code. Currently the best example of this is in Schroedinger. An example of how this would be used is audioconvert given an input format channel position manipulation dithering and quantizing configuration and output format a Orc code generator would create an OrcProgram add the appropriate instructions to do each step based on the configuration and then compile the program. Successfully compiling the program would return a function pointer that can be called to perform the operation. \nThis sort of advanced usage requires structural changes to current plugins e.g. audioconvert and will probably be developed incrementally. Moreover if such code is intended to be used without Orc as strict build runtime requirement two codepaths would need to be developed and tested. For this reason until GStreamer requires Orc I think it s a good idea to restrict such advanced usage to the cog plugin in bad which requires Orc. \n"});