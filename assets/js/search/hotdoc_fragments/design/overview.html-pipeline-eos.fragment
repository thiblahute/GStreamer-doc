fragment_downloaded_cb({"url": "design/overview.html#pipeline-eos", "fragment": "Pipeline EOS \nWhen the source filter encounters the end of the stream it sends an EOS event to the peer element. This event will then travel downstream to all of the connected elements to inform them of the EOS. The element is not supposed to accept any more data after receiving an EOS event on a sinkpad. \nThe element providing the streaming thread stops sending data after sending the EOS event. \nThe EOS event will eventually arrive in the sink element. The sink will then post an EOS message on the bus to inform the pipeline that a particular stream has finished. When all sinks have reported EOS the pipeline forwards the EOS message to the application. The EOS message is only forwarded to the application in the PLAYING state. \nWhen in EOS the pipeline remains in the PLAYING state it is the applications responsability to PAUSE or READY the pipeline. The application can also issue a seek for example. \n"});