fragment_downloaded_cb({"url": "design/MT-refcounting.html#atomic-operations", "fragment": "Atomic operations \nAtomic operations are operations that are performed as one consistent operation even when executed by multiple threads. They do however not use the conventional aproach of using mutexes to protect the critical section but rely on CPU features and instructions. \nThe advantages are mostly speed related since there are no heavyweight locks involved. Most of these instructions also do not cause a context switch in case of concurrent access but use a retry mechanism or spinlocking. \nDisadvantages are that each of these instructions usually cause a cache flush on multi CPU machines when two processors perform concurrent access. \nAtomic operations are generally used for refcounting and for the allocation of small fixed size objects in a memchunk. They can also be used to implement a lockfree list or stack. \n"});