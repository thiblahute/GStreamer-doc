fragment_downloaded_cb({"url": "design/latency.html#latency-compensation", "fragment": "Latency compensation \nLatency calculation and compensation is performed before the pipeline proceeds to the PLAYING state. \nWhen the pipeline collected all ASYNC_DONE messages it can calculate the global latency as follows \nThe sinks gather this information with a LATENCY query upstream. Intermediate elements pass the query upstream and add the amount of latency they add to the result. \nThe latency is set on the pipeline by sending a LATENCY event to the sinks in the pipeline. This event configures the total latency on the sinks. The sink forwards this LATENCY event upstream so that intermediate elements can configure themselves as well. \nAfter this step the pipeline continues setting the pending state on its elements. \nA sink adds the latency value received in the LATENCY event to the times used for synchronizing against the clock. This will effectively delay the rendering of the buffer with the required latency. Since this delay is the same for all sinks all sinks will render data relatively synchronised. \n"});