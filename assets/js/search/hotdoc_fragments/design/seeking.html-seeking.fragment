fragment_downloaded_cb({"url": "design/seeking.html#seeking", "fragment": "Seeking \nSeeking in GStreamer means configuring the pipeline for playback of the media between a certain start and stop time called the playback segment. By default a pipeline will play from position to the total duration of the media at a rate of \nA seek is performed by sending a SEEK event to the sink elements of a pipeline. Sending the SEEK event to a bin will by default forward the event to all sinks in the bin. \nWhen performing a seek the start and stop values of the segment can be specified as absolute positions or relative to the currently configured playback segment. Note that it is not possible to seek relative to the current playback position. To seek relative to the current playback position one must query the position first and then perform an absolute seek to the desired position. \nIf a seek operation is requested using the GST_SEEK_FLAG_FLUSH flag all pending data in the pipeline is discarded and playback starts from the new position immediately. If this flag is not set the seek is queued to be executed as soon as possible which might be after all queues are emptied. \nSeeking can be performed in different formats such as time frames or samples. \nThe seeking can be performed to a nearby key unit or to the exact estimated unit in the media GST_SEEK_FLAG_KEY_UNIT See below for more details on this. \nThe seeking can be performed by using an estimated target position or in an accurate way GST_SEEK_FLAG_ACCURATE For some formats this can result in having to scan the complete file in order to accurately find the target unit. See below for more details on this. \nNon segment seeking will make the pipeline emit EOS when the configured segment has been played. \nSegment seeking using the GST_SEEK_FLAG_SEGMENT will not emit an EOS at the end of the playback segment but will post a SEGMENT_DONE message on the bus. This message is posted by the element driving the playback in the pipeline typically a demuxer. After receiving the message the application can reconnect the pipeline or issue other seek events in the pipeline. Since the message is posted as early as possible in the pipeline the application has some time to issue a new seek to make the transition seamless. Typically the allowed delay is defined by the buffer sizes of the sinks as well as the size of any queues in the pipeline. \nThe seek can also change the playback speed of the configured segment. A speed of is normal speed is double speed. Negative values mean backward playback. \nWhen performing a seek with a playback rate different from the GST_SEEK_FLAG_SKIP flag can be used to instruct decoders and demuxers that they are allowed to skip decoding. This can be useful when resource consumption is more important than accurately producing all frames. \n"});