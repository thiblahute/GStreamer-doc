fragment_downloaded_cb({"url": "design/push-pull.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"push-pull.md\">\n<h1 id=\"pushpull\">push-pull</h1>\n<p>Normally a source element will push data to the downstream element using\nthe <code>gst_pad_push()</code> method. The downstream peer pad will receive the\nbuffer in the Chain function. In the push mode, the source element is\nthe driving force in the pipeline as it initiates data transport.</p>\n<p>It is also possible for an element to pull data from an upstream\nelement. The downstream element does this by calling\n<code>gst_pad_pull_range()</code> on one of its sinkpads. In this mode, the\ndownstream element is the driving force in the pipeline as it initiates\ndata transfer.</p>\n<p>It is important that the elements are in the correct state to handle a\n<code>push()</code> or a <code>pull_range()</code> from the peer element. For <code>push()</code> based\nelements this means that all downstream elements should be in the\ncorrect state and for <code>pull_range()</code> based elements this means the\nupstream elements should be in the correct state.</p>\n<p>Most sinkpads implement a chain function. This is the most common case.\nsinkpads implementing a loop function will be the exception. Likewise,\nsrcpads implementing a getrange function will be the exception.</p>\n<h2 id=\"state-changes\">State changes</h2>\n<p>The <code>GstBin</code> sets the state of all the sink elements. These are the\nelements without source pads.</p>\n<p>Setting the state on an element will first activate all the srcpads and\nthen the sinkpads. For each of the sinkpads,\n<code>gst_pad_check_pull_range()</code> is performed. If the sinkpad supports a\nloopfunction and the peer pad returns TRUE from the <code>GstPadCheckPullRange</code>\nfunction, then the peer pad is activated first as it must be in the\nright state to handle a <code>_pull_range()</code>. Note that the state change of\nthe element is not yet performed, just the activate function is called\non the source pad. This means that elements that implement a getrange\nfunction must be prepared to get their activate function called before\ntheir state change function.</p>\n<p>Elements that have multiple sinkpads that require all of them to operate\nin the same mode (push/pull) can use the <code>_check_pull_range()</code> on all\ntheir pads and can then remove the loop functions if one of the pads\ndoes not support pull based mode.</p>\n\n</div>\n\n\n        "});