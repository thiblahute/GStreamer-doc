fragment_downloaded_cb({"url": "design/synchronisation.html#timestamps", "fragment": "Timestamps \nThe GstBuffer timestamps and the preceding SEGMENT event See streams define a transformation of the buffer timestamps to running_time as follows \nThe following notation is used \nB GstBuffer B.timestamp buffer timestamp GST_BUFFER_PTS or GST_BUFFER_DTS \nS SEGMENT event preceding the buffers. S.start start field in the SEGMENT event. This is the lowest allowed timestamp. S.stop stop field in the SEGMENT event. This is the highers allowed timestamp. S.rate rate field of SEGMENT event. This is the playback rate. S.base a base time for the time. This is the total elapsed running_time of any previous segments. S.offset an offset to apply to S.start or S.stop. This is the amount that has already been elapsed in the segment. \nValid buffers for synchronisation are those with B.timestamp between S.start and S.stop after applying the S.offset All other buffers outside this range should be dropped or clipped to these boundaries see also segments \nThe following transformation to running_time exist \nWe write B.running_time as the running_time obtained from the SEGMENT event and the buffers of that segment. \nThe first displayable buffer will yield a value of since B.timestamp S.start and S.offset and S.base \nFor S.rate the timestamps will be scaled down to increase the playback rate. Likewise a rate between and will slow down playback. \nFor negative rates timestamps are received stop S.stop to S.start so that the first buffer received will be transformed into B.running_time of B.timestamp S.stop and S.base \nThis makes it so that B.running_time is always monotonically increasing starting from with both positive and negative rates. \n"});