fragment_downloaded_cb({"url": "design/tracing.html#tracer-event-classes", "fragment": "tracer event classes \nMost tracers will log some kind of events a data transfer an event a message a query or a measurement. Every tracer should describe the data format. This way tools that process tracer logs can show the data in a meaningful way without having to know about the tracer plugin. \nOne way would be to introspect the data from the plugin. This has the disadvantage that the postprocessing app needs to load the plugins or talk to the gstreamer registry. An alternative is to also log the format description into the log. Right now we re logging several nested GstStructure from the tracer_class_init function except in the log tracer \nA few ideas that are not yet in the above spec \nRight now we log the classes as structures this is important so that the log is self contained. It would be nice to add them to the registry so that gst inspect can show them. We could also consider to add each value as a READONLY gobject property. The property has name description. We could use qdata for scope and flags or have some new property flags We would also need a new notify signal so that value change notifications would include a time stamp. This way the tracers would not needs to be aware of the logging. The core tracer would register the notify handlers and emit the log. Or we just add a gst_tracer_class_install_event and that mimics the g_object_class_install_property \nFrontends can \n"});