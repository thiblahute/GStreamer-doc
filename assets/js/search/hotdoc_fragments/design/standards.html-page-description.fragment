fragment_downloaded_cb({"url": "design/standards.html#page-description", "fragment": "Any object oriented system or language that doesn t have automatic garbage collection has many potential pitfalls as far as pointers go. Therefore some standards must be adhered to as far as who owns what. \nArguments passed into a function are owned by the caller and the function will make a copy of the string for its own internal use. The string should be const gchar Strings returned from a function are always a copy of the original and should be freed after usage by the caller. \nex \nObjects passed into a function are owned by the caller any additional reference held to the object after leaving the function should increase its refcount. \nObjects returned from a function are owned by the caller. This means that the caller should _free or _unref the objects after usage. \nex \nWhen retrieving multiple objects from an object an iterator should be used. The iterator allows you to access the objects one after another while making sure that the retrieved set of objects remains consistent. \nEach object retrieved from an iterator has its refcount increased or is a copy of the original. In any case the object should be unreffed or freed after usage. \n"});