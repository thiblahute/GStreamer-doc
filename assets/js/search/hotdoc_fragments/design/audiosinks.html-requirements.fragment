fragment_downloaded_cb({"url": "design/audiosinks.html#requirements", "fragment": "Requirements \nmust operate chain based. Most simple playback pipelines will push audio from the decoders into the audio sink. \nmust operate getrange based Most professional audio applications will operate in a mode where the audio sink pulls samples from the pipeline. This is typically done in a callback from the audiosink requesting N samples. The callback is either scheduled from a thread or from an interrupt from the audio hardware device. \nExact sample accurate clocks. the audiosink must be able to provide a clock that is sample accurate even if samples are dropped or when discontinuities are found in the stream. \nExact timing of playback. The audiosink must be able to play samples at their exact times. \nuse DMA access when possible. When the hardware can do DMA we should use it. This should also work over bufferpools to avoid data copying to from kernel space. \n"});