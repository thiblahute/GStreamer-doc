fragment_downloaded_cb({"url": "design/progress.html#to-make-the-state-changes-nonblocking-and-cancellable", "fragment": "To make the state changes non blocking and cancellable. \nCurrently state changes such as going to the READY or PAUSED state often do blocking calls such as resolving DNS or connecting to a remote server. These operations often block the main thread and are often not cancellable causing application lockups. \nWe would like to make the state change function instead start a separate thread that performs the blocking operations in a cancellable way. When going back to the NULL state all pending operations would be canceled immediately. \nFor downward state changes we want to let the application implement its own timeout mechanism. For example when stopping an RTSP stream the clients needs to send a TEARDOWN request to the server. This can however take an unlimited amount of time in case of network problems. We want to give the application an opportunity to wait and timeout for the completion of the async operation before setting the element to the final NULL state. \nProgress updates are very similar to buffering messages in the same way that the application can decide to wait for the completion of the buffering process before performing the next state change. It might make sense to implement buffering with the progress messages in the future. \n"});