fragment_downloaded_cb({"url": "design/missing-plugins.html#format-of-the-utf8-string-id-passed-to-the-external-installer-system", "fragment": "Format of the UTF string ID passed to the external installer system \nThe string is made up of several fields separated by characters. The fields are \nplugin system identifier ie. gstreamer This identifier determines the format of the rest of the detail string. Automatic plugin installers should not process detail strings with unknown identifiers. This allows other plugin based libraries to use the same mechanism for their automatic plugin installation needs or for the format to be changed should it turn out to be insufficient. \nplugin system version e.g. This is required so that when there is a GStreamer or GStreamer at some point in future the different major versions can still co exist and use the same plugin install mechanism in the same way. \napplication identifier e.g. totem This may also be in the form of pid if the program name can t be obtained for some reason. \nhuman readable localised description of the required component e.g. Vorbis audio decoder \nidentifier string for the required component e.g. \nurisource PROTOCOL_REQUIRED e.g. urisource http or urisource mms \nelement ELEMENT_REQUIRED e.g. element videoconvert \ndecoder CAPS_REQUIRED e.g. decoder audio x vorbis or decoder application ogg or decoder audio mpeg mpegversion int or decoder video mpeg systemstream boolean true mpegversion int \nencoder CAPS_REQUIRED e.g. encoder audio x vorbis \noptional further fields not yet specified \nAn entire ID string might then look like this for example gstreamer totem Vorbis audio decoder decoder audio x vorbis \nPlugin installers parsing this ID string should expect further fields also separated by symbols and either ignore them warn the user or error out when encountering them. \nThe human readable description string is provided by the libgstbaseutils library that can be found in gst plugins base versions and can also be used by demuxers to find out the codec names for taglists from given caps in a unified and consistent way. \nApplications can create these detail strings using the function gst_missing_plugin_message_get_installer_detail on a given missing plugin message. \n"});