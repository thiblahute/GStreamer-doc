fragment_downloaded_cb({"url": "design/element-sink.html#page-description", "fragment": "Sink elements consume data and normally have no source pads. \nTypical sink elements include \naudio video renderers \nnetwork sinks \nfilesinks \nSinks are harder to construct than other element types as they are treated specially by the GStreamer core. \nA sink always returns ASYNC from the state change to PAUSED this includes a state change from READY PAUSED and PLAYING PAUSED. The reason for this is that this way we can detect when the first buffer or event arrives in the sink when the state change completes. \nA sink should block on the first EOS event or buffer received in the READY PAUSED state before commiting the state to PAUSED. \nFLUSHING events have to be handled out of sync with the buffer flow and take no part in the preroll procedure. \nEvents other than EOS do not complete the preroll stage. \n"});