fragment_downloaded_cb({"url": "design/miniobject.html#access-management", "fragment": "Access management \nGstMiniObject can be shared between multiple threads. It is important that when a thread writes to a GstMiniObject that the other threads don t not see the changes. \nTo avoid exposing changes from one thread to another thread the miniobjects are managed in a Copy On Write way. A copy is only made when it is known that the object is shared between multiple objects or threads. \nThere are methods implemented for controlling access to the miniobject. \nA first method relies on the refcount of the object to control writability. Objects using this method have the LOCKABLE flag unset. \nA second method relies on a separate counter for controlling the access to the object. Objects using this method have the LOCKABLE flag set. You can check if an object is writable with gst_mini_object_is_writable and you can make any miniobject writable with gst_mini_object_make_writable This will create a writable copy when the object was not writable. \n"});