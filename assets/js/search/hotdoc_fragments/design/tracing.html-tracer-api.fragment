fragment_downloaded_cb({"url": "design/tracing.html#tracer-api", "fragment": "Tracer api \nTracers are plugin features. They have a simple api \nclass init Here the tracers describe the data the will emit. \ninstance init Tracers attach handlers to one or more hooks using gst_tracing_register_hook In case the are configurable they can read the options from the params property. This is the extra detail from the environment var. \nhook functions Hooks marshal the parameters given to a trace hook into varargs and also add some extra into such as a timestamp. Hooks will be called from misc threads. The trace plugins should only consume read the provided data. Expensive computation should be avoided to not affect the execution too much. Most trace plugins will log data to a trace channel. \ninstance destruction Tracers can output results and release data. This would ideally be done at the end of the applications but gst_deinit is not mandatory. gst_tracelib was using a gcc_destructor. Ideally tracer modules log data as they have them and leave aggregation to a tool that processes the log. \n"});