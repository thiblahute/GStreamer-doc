fragment_downloaded_cb({"url": "design/stereo-multiview-video.html#representation-for-gstgl", "fragment": "Representation for GstGL \nWhen uploading raw video frames to GL textures the goal is to implement \nSplit packed frames into separate GL textures when uploading and attach multiple GstGLMemory to the GstBuffer. The multiview mode and multiview flags fields in the caps should change to reflect the conversion from one incoming GstMemory to multiple GstGLMemory and change the width height in the output info as needed. \nThis is currently targetted as render passes upload as normal to a single stereo packed RGBA texture and then unpack into smaller textures output with GST_VIDEO_MULTIVIEW_MODE_SEPARATED as GstGLMemory attached to one buffer. We can optimise the upload later to go directly to textures for common input formats. \nSeparat output textures have a few advantages \nFilter elements can more easily apply filters in several passes to each texture without fundamental changes to our filters to avoid mixing pixels from separate views. \nCentralises the sampling of input video frame packings in the upload code which makes adding new packings in the future easier. \nSampling multiple textures to generate various output frame packings for display is conceptually simpler than converting from any input packing to any output packing. \nIn implementations that support quad buffers having separate textures makes it trivial to do GL_LEFT GL_RIGHT output \nFor either option we ll need new glsink output API to pass more information to applications about multiple views for the draw signal callback. \nI don t know if it s desirable to support both methods of representing views. If so that should be signalled in the caps too. That could be a new multiview mode for passing views in separate GstMemory objects attached to a GstBuffer which would not be GL specific. \n"});