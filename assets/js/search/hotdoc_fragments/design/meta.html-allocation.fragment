fragment_downloaded_cb({"url": "design/meta.html#allocation", "fragment": "allocation \nWe initially allocate a reasonable sized GstBuffer structure say bytes \nSince the complete buffer structure including a large area for metadata is allocated in one go we can reduce the number of memory allocations while still providing dynamic metadata. \nWhen adding metadata we need to call the init function of the associated metadata info structure. Since adding the metadata requires the caller to pass a handle to the info this operation does not require table lookups. \nPer metadata memory initialisation is needed because not all metadata is initialized in the same way. We need to for example set the timestamps to NONE in the MetaTiming structures. \nThe init free functions can also be used to implement refcounting for a metadata structure. This can be useful when a structure is shared between buffers. \nWhen the free_size of the GstBuffer is exhausted we will allocate new memory for each newly added Meta and use the next pointers to point to this. It is expected that this does not occur often and we might be able to optimize this transparently in the future. \n"});