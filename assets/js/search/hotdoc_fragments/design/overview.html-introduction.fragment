fragment_downloaded_cb({"url": "design/overview.html#introduction", "fragment": "Introduction \nGStreamer is a set of libraries and plugins that can be used to implement various multimedia applications ranging from desktop players audio video recorders multimedia servers transcoders etc. \nApplications are built by constructing a pipeline composed of elements. An element is an object that performs some action on a multimedia stream such as \nElements have input and output pads called sink and source pads in GStreamer. An application links elements together on pads to construct a pipeline. Below is an example of an ogg vorbis playback pipeline. \nThe filesrc element reads data from a file on disk. The oggdemux element demultiplexes the data and sends a compressed audio stream to the vorbisdec element. The vorbisdec element decodes the compressed data and sends it to the alsasink element. The alsasink element sends the samples to the audio card for playback. \nDownstream and upstream are the terms used to describe the direction in the Pipeline. From source to sink is called downstream and upstream is from sink to source. Dataflow always happens downstream. \nThe task of the application is to construct a pipeline as above using existing elements. This is further explained in the pipeline building topic. \nThe application does not have to manage any of the complexities of the actual dataflow decoding conversions synchronisation etc. but only calls high level functions on the pipeline object such as PLAY PAUSE STOP. \nThe application also receives messages and notifications from the pipeline such as metadata warning error and EOS messages. \nIf the application needs more control over the graph it is possible to directly access the elements and pads in the pipeline. \n"});