fragment_downloaded_cb({"url": "design/rtp.html#basic-mechanism", "fragment": "Basic mechanism \nrtpbin knows for which session ids the given auxiliary element belong to. It s done through set aux send for rtpauxsend kind and through set aux receive for rtpauxreceive kind. You can call those signals as much as needed for each auxiliary element. So for aux elements that work in SSRC multiplexed mode this signal action is called only one time. \nThe user has to call those action signals before to request the differents rtpbin pads. rtpbin is in charge to link those auxiliary elements with the sessions and on receiver side rtpbin has also to handle the link with ssrcdemux. \nrtpbin never knows if the given rtpauxsend is actually a rtprtxsend element or another aux element. rtpbin never knows if the given rtpauxreceive is actually a rtprtxreceive element or another aux element. rtpbin has to be kept generic so that more aux elements can be added later without changing rtpbin. \nIt s currently not possible to use rtpbin with auxiliary stream from gst launch. We can discuss about having the ability for rtpbin to instanciate itself the special aux elements rtprtxsend and rtprtxreceive but they need to be configured payload type and payload types properties to make retransmission work. So having several rtprtxsend and rtprtxreceive in a rtpbin would require a lot of properties to manage them form rtpbin. And for each auxiliary elements. \nIf you want to use rtprtxreceive and rtprtpsend from gst launch you have to use rtpsession ssrcdemux and rtpjitterbuffer elements yourself. See gtk doc of rtprtxreceive for an example. \n"});