fragment_downloaded_cb({"url": "design/bufferpool.html#gstbufferpool", "fragment": "GstBufferPool \nThe bufferpool object manages a list of buffers with the same properties such as size padding and alignment. \nThe bufferpool has two states active and inactive. In the inactive state the bufferpool can be configured with the required allocation preferences. In the active state buffers can be retrieved from and returned to the pool. \nThe default implementation of the bufferpool is able to allocate buffers from any allocator with arbitrary alignment and padding prefix. \nCustom implementations of the bufferpool can override the allocation and free algorithms of the buffers from the pool. This should allow for different allocation strategies such as using shared memory or hardware mapped memory. \n"});