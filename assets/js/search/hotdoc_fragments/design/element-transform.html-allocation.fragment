fragment_downloaded_cb({"url": "design/element-transform.html#allocation", "fragment": "Allocation \nAfter the transform element is configured with caps a bufferpool needs to be negotiated to perform the allocation of buffers. We have cases \nThe element is operating in passthrough we don t need to allocate a buffer in the transform element. \nThe element is not operating in passthrough and needs to allocation an output buffer. \nIn case we don t query and configure a pool. We let upstream decide if it wants to use a bufferpool and then we will proxy the bufferpool from downstream to upstream. \nIn case we query and set a bufferpool on the srcpad that will be used for doing the allocations. \nIn order to perform allocation we need to be able to get the size of the output buffer after the transform. We need additional function to retrieve the size. There are two functions \ntransform_size Given a caps and a size on one pad and a caps on the other pad calculate the size of the other buffer. This function is able to perform all size transforms and is the preferred method of transforming a size. \nget_unit_size When the input size and output size are always a multiple of each other audio conversion we can define a more simple get_unit_size function. The transform will use this function to get the same amount of units in the source and destination buffers. For performance reasons the mapping between caps and size is kept in a cache. \n"});