fragment_downloaded_cb({"url": "design/events.html#segment", "fragment": "SEGMENT \nA segment event is sent downstream by an element to indicate that the following group of buffers start and end at the specified positions. The newsegment event also contains the playback speed and the applied rate of the stream. \nSince the stream time is always set to at start and after a seek a point for all next buffer s timestamps has to be propagated through the pipeline using the SEGMENT event. \nBefore sending buffers an element must send a SEGMENT event. An element is free to refuse buffers if they were not preceded by a SEGMENT event. \nElements that sync to the clock should store the SEGMENT start and end values and subtract the start value from the buffer timestamp before comparing it against the stream time see clocks \nAn element is allowed to send out buffers with the SEGMENT start time already subtracted from the timestamp. If it does so it needs to send a corrected SEGMENT downstream ie one with start time \nA SEGMENT event should be generated as soon as possible in the pipeline and is usually generated by a demuxer or source. The event is generated before pushing the first buffer and after a seek right before pushing the new buffer. \nThe SEGMENT event should be sent from the streaming thread and should be serialized with the buffers. \nBuffers should be clipped within the range indicated by the newsegment event start and stop values. Sinks must drop buffers with timestamps out of the indicated segment range. \n"});