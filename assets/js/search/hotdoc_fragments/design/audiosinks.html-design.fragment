fragment_downloaded_cb({"url": "design/audiosinks.html#design", "fragment": "Design \nThe design is based on a set of base classes and the concept of a ringbuffer of samples. \nThe ringbuffer is a contiguous piece of memory divided into segtotal pieces of segments. Each segment has segsize bytes. \nThe ringbuffer has a play position which is expressed in segments. The play position is where the device is currently reading samples from the buffer. \nThe ringbuffer can be put to the PLAYING or STOPPED state. \nIn the STOPPED state no samples are played to the device and the play pointer does not advance. \nIn the PLAYING state samples are written to the device and the ringbuffer should call a configurable callback after each segment is written to the device. In this state the play pointer is advanced after each segment is written. \nA write operation to the ringbuffer will put new samples in the ringbuffer. If there is not enough space in the ringbuffer the write operation will block. The playback of the buffer never stops even if the buffer is empty. When the buffer is empty silence is played by the device. \nThe ringbuffer is implemented with lockfree atomic operations especially on the reading side so that low latency operations are possible. \nWhenever new samples are to be put into the ringbuffer the position of the read pointer is taken. The required write position is taken and the diff is made between the required and actual position. If the difference is the sample is too late. If the difference is bigger than segtotal the writing part has to wait for the play pointer to advance. \n"});