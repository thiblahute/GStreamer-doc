fragment_downloaded_cb({"url": "gst-editing-services-1.0/c/ges.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"ges.h\">\n        <h1 id=\"initialization\">Initialization</h1><p>GES needs to be initialized after GStreamer itself. This section\ncontains the various functions to do so.</p>\n\n        \n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ges_deinit\">\n\t\t\n<h4 id=\"ges_deinit1\">\n\t<span><code>ges_deinit</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\nges_deinit ()</pre>\n\n<p>Clean up any resources created by GES in <a href=\"ges.html#ges_init\">ges_init</a>.</p>\n<p>It is normally not needed to call this function in a normal application as the\nresources will automatically be freed when the program terminates.\nThis function is therefore mostly used by testsuites and other memory profiling tools.</p>\n<p>After this call GES (including this method) should not be used anymore.</p>\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ges_init\">\n\t\t\n<h4 id=\"ges_init1\">\n\t<span><code>ges_init</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\nges_init ()</pre>\n\n<p>Initialize the GStreamer Editing Service. Call this before any usage of\nGES. You should take care of initilizing GStreamer before calling this\nfunction.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ges_init_check\">\n\t\t\n<h4 id=\"ges_init_check1\">\n\t<span><code>ges_init_check</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\nges_init_check (int* argc,\n                char* argv)</pre>\n\n<p>Initializes the GStreamer Editing Services library, setting up internal path lists,\nand loading evrything needed.</p>\n<p>This function will return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> if GES could not be initialized\nfor some reason.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>argc:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to application's argc</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for input and for returning results\"><span class=\"acronym\">inout</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>argv:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to application's argv</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for input and for returning results\"><span class=\"acronym\">inout</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"Parameter points to an array of items\"><span class=\"acronym\">array</span></abbr> length=argc]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns1\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if GES could be initialized.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ges_init_get_option_group\">\n\t\t\n<h4 id=\"ges_init_get_option_group1\">\n\t<span><code>ges_init_get_option_group</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GOptionGroup\" href=\"https://developer.gnome.org/glib/unstable/glib-Commandline-option-parser.html#GOptionGroup\">GOptionGroup</a> *\nges_init_get_option_group ()</pre>\n\n<p>Returns a <a href=\"https://developer.gnome.org/glib/unstable/glib-Commandline-option-parser.html#GOptionGroup\">GOptionGroup</a> with GES's argument specifications. The\ngroup is set up to use standard GOption callbacks, so when using this\ngroup in combination with GOption parsing methods, all argument parsing\nand initialization is automated.</p>\n<p>This function is useful if you want to integrate GES with other\nlibraries that use GOption (see <a href=\"https://developer.gnome.org/glib/unstable/glib-Commandline-option-parser.html#g-option-context-add-group\">g_option_context_add_group</a> ).</p>\n<p>If you use this function, you should make sure you initialise the GStreamer\nas one of the very first things in your program. That means you need to\nuse <a href=\"../../libgstreamer-1.0/c/gst.html#gst_init_get_option_group\">gst_init_get_option_group</a> and add it to the option context before\nusing the <a href=\"ges.html#ges_init_get_option_group\">ges_init_get_option_group</a> result.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns2\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a pointer to GES's option group.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GOptionGroup\" href=\"https://developer.gnome.org/glib/unstable/glib-Commandline-option-parser.html#GOptionGroup\">GOptionGroup</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ges_version\">\n\t\t\n<h4 id=\"ges_version1\">\n\t<span><code>ges_version</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\nges_version (<a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> * major,\n             <a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> * minor,\n             <a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> * micro,\n             <a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> * nano)</pre>\n\n<p>Gets the version number of the GStreamer Editing Services library.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>major:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a guint to store the major version number</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>minor:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a guint to store the minor version number</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>micro:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a guint to store the micro version number</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>nano:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a guint to store the nano version number</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n    </div>\n\n\n        "});