fragment_downloaded_cb({"url": "gst-editing-services-1.0/c/ges-track-element.html#page-description", "fragment": "Virtual Methods \nThe GESTrackElement base class. \nLooks for the properties defines with the various parametters and add them to the hashtable of children properties. \nTo be used by subclasses only \nGets properties of a child of object. \nIn general a copy is made of the property contents and the caller is responsible for freeing the memory by calling g_value_unset. \nGets a property of a GstElement contained in object. \nNote that ges_track_element_get_child_property is really intended for language bindings ges_track_element_get_child_properties is much more convenient for C programming. \nGets a property of a child of object. \nGets a property of a child of object. If there are various child elements that have the same property name you can distinguish them using the following syntax ClasseName property_name as property name. If you don t the corresponding property of the first element found will be set. \nLooks up the various controlled properties for that GESTrackElement and returns the GstControlBinding which controls property_name. \nGet the GstElement this track element is controlling within GNonLin. \nGet the NleObject object this object is controlling. \nGet the GNonLin object this object is controlling. \nGets an array of GParamSpec for all configurable properties of the children of object. \nLooks up which element and pspec would be effected by the given name. If various contained elements have this property name you will get the first one unless you specify the class name in name. \nRemoves a GstControlBinding from object. \nSets a property of a child of object. If there are various child elements that have the same property name you can distinguish them using the following syntax ClasseName property_name as property name. If you don t the corresponding property of the first element found will be set. \nSets a property of a GstElement contained in object. \nNote that ges_track_element_set_child_property is really intended for language bindings ges_track_element_set_child_properties is much more convenient for C programming. \nSets a property of a child of object. \nSets a property of a child of object. If there are various child elements that have the same property name you can distinguish them using the following syntax ClasseName property_name as property name. If you don t the corresponding property of the first element found will be set. \nCreates a GstControlBinding and adds it to the GstElement concerned by the property. Use the same syntax as ges_track_element_lookup_child for the property name. \nThe control binding added signal is emitted each time a control binding is added for a child property of track_element \nThe control binding removed signal is emitted each time a control binding is removed for a child property of track_element \nconst gchar nleobject_factorytype \nname of the GNonLin GStElementFactory type to use. \ngpointer _ges_reserved \n"});