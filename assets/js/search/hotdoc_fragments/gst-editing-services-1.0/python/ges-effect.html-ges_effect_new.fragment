fragment_downloaded_cb({"url": "gst-editing-services-1.0/python/ges-effect.html#ges_effect_new", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ges_effect_new\">\n\t\t<h3 id=\"geseffectnew\">\n\t<span><code>GES.Effect.new</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef GES.Effect.new (bin_description):\n    #python wrapper for 'ges_effect_new'</pre>\n\n<p>Creates a new <a href=\"ges-effect.html#GESEffect\">GES.Effect</a> from the description of the bin. It should be\npossible to determine the type of the effect through the element\n'klass' metadata of the GstElements that will be created.\nIn that corner case, you should use:\n<a href=\"ges-asset.html#ges_asset_request\">GES.Asset.request</a> (GES_TYPE_EFFECT, \"audio your ! bin ! description\", NULL);\nand extract that asset to be in full control.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin_description:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The gst-launch like bin description of the effect</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a newly created <a href=\"ges-effect.html#GESEffect\">GES.Effect</a>, or <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> if something went\nwrong.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GES.Effect\" href=\"ges-effect.html#GESEffect\">GES.Effect</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n"});