fragment_downloaded_cb({"url": "gst-editing-services-1.0/javascript/ges-project.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"ges-project.h\">\n<h1 id=\"gesproject\">GESProject</h1><p>The <a href=\"ges-project.html#GESProject\">GES.Project</a> is used to control a set of <a href=\"ges-asset.html#GESAsset\">GES.Asset</a> and is a\n<a href=\"ges-asset.html#GESAsset\">GES.Asset</a> with GES_TYPE_TIMELINE as <em>extractable_type</em> itself. That\nmeans that you can extract <a href=\"ges-timeline.html#GESTimeline\">GES.Timeline</a> from a project as followed:</p>\n<pre><code class=\"language-[\">  GESProject *project;\n  GESTimeline *timeline;\n\n  project = ges_project_new (\"file:///path/to/a/valid/project/uri\");\n\n  // Here you can connect to the various signal to get more infos about\n  // what is happening and recover from errors if possible\n  ...\n\n  timeline = ges_asset_extract (GES_ASSET (project));\n</code></pre>\n<p>The <a href=\"ges-project.html#GESProject\">GES.Project</a> class offers a higher level API to handle <a href=\"ges-asset.html#GESAsset\">GES.Asset</a>-s.\nIt lets you request new asset, and it informs you about new assets through\na set of signals. Also it handles problem such as missing files/missing\n<a href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">Gst.Element</a> and lets you try to recover from those.</p>\n\n</div>\n\n\n"});