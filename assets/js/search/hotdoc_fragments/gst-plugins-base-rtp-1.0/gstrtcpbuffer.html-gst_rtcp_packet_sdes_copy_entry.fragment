fragment_downloaded_cb({"url": "gst-plugins-base-rtp-1.0/gstrtcpbuffer.html#gst_rtcp_packet_sdes_copy_entry", "fragment": "GstRtp.RTCPPacket.SdesCopyEntry \nGstRtp.RTCPPacket.SdesCopyEntry \nGstRtp.RTCPPacket.SdesCopyEntry \nGstRtp.RTCPPacket.SdesCopyEntry \nThis function is like GstRtp.RTCPPacket.SdesGetEntry but it returns a null terminated copy of the data instead. use GLib.Global.Free after usage. \nParameters \na valid SDES Gst.Rtp.RTCPPacket \nresult of the entry type \nReturns a tuple made of \ntrue if there was valid data. \ntrue if there was valid data. \ntrue if there was valid data. \nThis function is like GstRtp.RTCPPacket.SdesGetEntry but it returns a null terminated copy of the data instead. use GLib.Global.Free after usage. \nParameters \na valid SDES Gst.Rtp.RTCPPacket \nresult of the entry type \nresult length of the entry data \nresult entry data \ntrue if there was valid data. \nThis function is like GstRtp.RTCPPacket.SdesGetEntry but it returns a null terminated copy of the data instead. use GLib.Global.Free after usage. \nParameters \nresult of the entry type \nresult length of the entry data \nresult entry data \ntrue if there was valid data. \nThis function is like GstRtp.RTCPPacket.SdesGetEntry but it returns a null terminated copy of the data instead. use GLib.Global.Free after usage. \nParameters \na valid SDES Gst.Rtp.RTCPPacket \nresult of the entry type \nReturns a tuple made of \ntrue if there was valid data. \ntrue if there was valid data. \ntrue if there was valid data. \n"});