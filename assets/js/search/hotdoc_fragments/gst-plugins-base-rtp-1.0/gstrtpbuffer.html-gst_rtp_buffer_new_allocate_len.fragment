fragment_downloaded_cb({"url": "gst-plugins-base-rtp-1.0/gstrtpbuffer.html#gst_rtp_buffer_new_allocate_len", "fragment": "Gst.Rtp.Global.RtpBufferNewAllocateLen \nGst.Rtp.Global.RtpBufferNewAllocateLen \nGst.Rtp.Global.RtpBufferNewAllocateLen \nGst.Rtp.Global.RtpBufferNewAllocateLen \nCreate a new Gst.Buffer that can hold an RTP packet that is exactly packet_len long. The length of the payload depends on pad_len and csrc_count and can be calculated with Gst.Rtp.Global.RtpBufferCalcPayloadLen. All RTP header fields will be set to FALSE. \nParameters \nthe total length of the packet \nthe amount of padding \nthe number of CSRC entries \nA newly allocated buffer that can hold an RTP packet of packet_len. \nCreate a new Gst.Buffer that can hold an RTP packet that is exactly packet_len long. The length of the payload depends on pad_len and csrc_count and can be calculated with Gst.Rtp.Global.RtpBufferCalcPayloadLen. All RTP header fields will be set to FALSE. \nParameters \nthe total length of the packet \nthe amount of padding \nthe number of CSRC entries \nA newly allocated buffer that can hold an RTP packet of packet_len. \nCreate a new Gst.Buffer that can hold an RTP packet that is exactly packet_len long. The length of the payload depends on pad_len and csrc_count and can be calculated with Gst.Rtp.Global.RtpBufferCalcPayloadLen. All RTP header fields will be set to FALSE. \nParameters \nthe total length of the packet \nthe amount of padding \nthe number of CSRC entries \nA newly allocated buffer that can hold an RTP packet of packet_len. \nCreate a new Gst.Buffer that can hold an RTP packet that is exactly packet_len long. The length of the payload depends on pad_len and csrc_count and can be calculated with Gst.Rtp.Global.RtpBufferCalcPayloadLen. All RTP header fields will be set to FALSE. \nParameters \nthe total length of the packet \nthe amount of padding \nthe number of CSRC entries \nA newly allocated buffer that can hold an RTP packet of packet_len. \n"});