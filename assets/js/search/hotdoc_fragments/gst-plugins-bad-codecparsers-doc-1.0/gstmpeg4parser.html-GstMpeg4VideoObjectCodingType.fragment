fragment_downloaded_cb({"url": "gst-plugins-bad-codecparsers-doc-1.0/gstmpeg4parser.html#GstMpeg4VideoObjectCodingType", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstMpeg4VideoObjectCodingType\">\n\t\t<h3 id=\"gstmpeg4videoobjectcodingtype\">\n\t\tGstMpeg4VideoObjectCodingType\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\ntypedef enum {\n  GST_MPEG4_I_VOP = 0x0,\n  GST_MPEG4_P_VOP = 0x1,\n  GST_MPEG4_B_VOP = 0x2,\n  GST_MPEG4_S_VOP = 0x3\n} GstMpeg4VideoObjectCodingType;\n</pre>\n\n<p>The vop coding types as defined in:\nTable 6-20 -- Meaning of vop_coding_type</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members7\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_MPEG4_I_VOP\"></a>\n\t\tGST_MPEG4_I_VOP\n\t\t</p>\n\t</td>\n\t<td><p>intra-coded (I)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_MPEG4_P_VOP\"></a>\n\t\tGST_MPEG4_P_VOP\n\t\t</p>\n\t</td>\n\t<td><p>predictive-coded (P)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_MPEG4_B_VOP\"></a>\n\t\tGST_MPEG4_B_VOP\n\t\t</p>\n\t</td>\n\t<td><p>bidirectionally-predictive-coded (B)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_MPEG4_S_VOP\"></a>\n\t\tGST_MPEG4_S_VOP\n\t\t</p>\n\t</td>\n\t<td><p>sprite (S)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 3</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n"});