fragment_downloaded_cb({"url": "gst-plugins-bad-codecparsers-doc-1.0/gsth265parser.html#gst_h265_parser_identify_nalu_unchecked", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_h265_parser_identify_nalu_unchecked\">\n\t\t<h3 id=\"gst_h265_parser_identify_nalu_unchecked1\">\n\t<span><code>gst_h265_parser_identify_nalu_unchecked</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstH265ParserResult\" href=\"gsth265parser.html#GstH265ParserResult\">GstH265ParserResult</a>\ngst_h265_parser_identify_nalu_unchecked (<a title=\"GstH265Parser\" href=\"gsth265parser.html#GstH265Parser\">GstH265Parser</a> * parser,\n                                         const guint8* data,\n                                         guint offset,\n                                         gsize size,\n                                         <a title=\"GstH265NalUnit\" href=\"gsth265parser.html#GstH265NalUnit\">GstH265NalUnit</a> * nalu)</pre>\n\n<p>Parses <em>data</em> and fills <em>nalu</em> from the next nalu data from <em>data</em>.</p>\n<p>This differs from <em>gst_h265_parser_identify_nalu</em> in that it doesn't\ncheck whether the packet is complete or not.</p>\n<p>Note: Only use this function if you already know the provided <em>data</em>\nis a complete NALU, else use <em>gst_h265_parser_identify_nalu</em>.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters1\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>parser:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gsth265parser.html#GstH265Parser\">GstH265Parser</a></p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The data to parse</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>offset:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the offset from which to parse <em>data</em></p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>size:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the size of <em>data</em></p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>nalu:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"gsth265parser.html#GstH265NalUnit\">GstH265NalUnit</a> where to store parsed nal headers</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns2\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"gsth265parser.html#GstH265ParserResult\">GstH265ParserResult</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstH265ParserResult\" href=\"gsth265parser.html#GstH265ParserResult\">GstH265ParserResult</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});