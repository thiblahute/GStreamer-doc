fragment_downloaded_cb({"url": "playback-1.0/playbin3.html#advanced-usage-specifying-the-audio-and-video-sink", "fragment": "Advanced Usage specifying the audio and video sink \nBy default if no audio sink or video sink has been specified via the audio sink or video sink property playbin3 will use the autoaudiosink and autovideosink elements to find the first best available output method. This should work in most cases but is not always desirable. Often either the user or application might want to specify more explicitly what to use for audio and video output. \nIf the application wants more control over how audio or video should be output it may create the audio video sink elements itself for example using gst_element_factory_make and provide them to playbin3 using the audio sink or video sink property. \nGNOME based applications for example will usually want to create gconfaudiosink and gconfvideosink elements and make playbin3 use those so that output happens to whatever the user has configured in the GNOME Multimedia System Selector configuration dialog. \nThe sink elements do not necessarily need to be ready made sinks. It is possible to create container elements that look like a sink to playbin3 but in reality contain a number of custom elements linked together. This can be achieved by creating a GstBin and putting elements in there and linking them and then creating a sink GstGhostPad for the bin and pointing it to the sink pad of the first element within the bin. This can be used for a number of purposes for example to force output to a particular format or to modify or observe the data before it is output. \nIt is also possible to suppress audio and or video output by using fakesink elements or capture it from there using the fakesink element s handoff signal which nota bene is fired from the streaming thread \n"});