fragment_downloaded_cb({"url": "frequently-asked-questions/developing.html#how-do-i-develop-against-an-uninstalled-gstreamer-copy", "fragment": "How do I develop against an uninstalled GStreamer copy \nIt is possible to develop and compile against an uninstalled copy of gstreamer and gst plugins for example against git checkouts This allows you to develop against and test the latest GStreamer version without having to install it and without interfering with your system wide GStreamer setup. \nThere are two ways to achieve such a setup \ngst build is our new meta build module based on the Meson build system. This is the shiny new thing. It s fast and simple to get started with but you will need a recent version of Meson installed. Just check out the git repository and run the setup.py script. Once the initial meson configure stage has passed you can enter an uninstalled environment by running ninja uninstalled in the build directory. This will make sure tools and plugin from the uninstalled build tree will be used. Any problems let us know. \ngst uninstalled is our traditional autotools and libtool based build setup. The easiest way too create such a setup is using the latest version of the create uninstalled setup.sh script. This setup makes use of the latest version of the gst uninstalled script. Running this script you ll be in an environment where the uninstalled tools and plugins will be used by default. Also pkg config will detect the uninstalled copies before and prefer them to any installed copies. \nMultiple uninstalled setups can be used in parallel e.g. one for the latest stable branch and one for git master. Have a look at the gst uninstalled script to see how it determines which environment is used. \n"});