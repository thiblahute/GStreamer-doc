fragment_downloaded_cb({"url": "frequently-asked-questions/troubleshooting.html#what-can-i-do-if-i-get-a-segmentation-fault", "fragment": "What can I do if I get a segmentation fault \nThe GStreamer application I used stops with a segmentation fault. What can I do \nThe first point of contact for any problems with a GStreamer application should be the developers of that application. They will be able to investigate whether the problem lies with the application or with GStreamer and will pass on any issues to GStreamer developers if needed. \nThere are two things you can do. If you compiled GStreamer with specific optimization compilation flags you should try recompiling GStreamer the application and the plug ins without any optimization flags. This allows you to verify if the problem is due to optimization or due to bad code. Second it will also allow you to provide a reasonable backtrace in case the segmentation fault still occurs. \nThe second thing you can do is look at the backtrace to get an idea of where things are going wrong or give us an idea of what is going wrong. To provide a backtrace you should \nIf the application is in a source tree instead of installed on the system you might want to put libtool before gdb \nat the gdb prompt \nType run at the gdb prompt and wait for the application to segfault. The application will run a lot slower however. \nAfter the segfault type bt to get a backtrace. This is a stack of function calls detailing the path from main to where the code is currently at. \nIf the application you re trying to debug contains threads it is also useful to do \nand get backtraces of all of the threads involved by switching to a different thread using thread number and then again requesting a backtrace using bt \n"});