fragment_downloaded_cb({"url": "frequently-asked-questions/developing.html#what-kind-of-versioning-scheme-does-gstreamer-use", "fragment": "What kind of versioning scheme does GStreamer use \nFor public releases GStreamer uses a standard MAJOR.MINOR.MICRO version scheme. If the release consists of mostly bug fixes or incremental changes the MICRO version is incremented. If the release contains big changes the MINOR version is incremented. A change in the MAJOR version indicates incompatible API or ABI changes which happens very rarely the last one dates back to This is also known as semantic versioning. \nEven MINOR numbers indicate stable releases x x x x x and x are our stable release series. Odd MINOR numbers are used for unstable development releases and prereleases which should only be used temporarily for testing your help in testing these tarballs and packages is very much appreciated \nDuring the development cycle GStreamer also uses a fourth or NANO number. If this number is then it s a git development version. Any tarball or package that has a nano number of is made from git and thus not supported. Additionally if you didn t get this package or tarball from the GStreamer team don t have high hopes on it doing whatever you want it to do. \n"});