fragment_downloaded_cb({"url": "frequently-asked-questions/developing.html#what-is-the-coding-style-for-gstreamer-code", "fragment": "What is the coding style for GStreamer code \nThe core and almost all plugin modules are basically coded in K R with space indenting. Just follow what s already there and you ll be fine. \nIndividual plugins in gst plugins or plugins that you want considered for addition to one of the gst plugins modules should be coded in the same style. It s easier if everything is consistent. Consistency is of course the goal. \nSimply run your code only the c files not the header files through \nbefore submitting a patch. This is using GNU indent. There is also a gst indent script in the GStreamer core source tree in the tools directory which wraps this and contains the latest option. The easiest way to get the indenting right is probably to develop against a git checkout. The local git commit hook will ensure correct indentation. We only require code files to be indented header files may be indented manually for better readability however please use spaces for indenting not tabs even in header files \nComments should be in ANSI C comment style and code should generally be compatible with ANSI C89 so please declare all variables at the beginning of the block etc. \nPatches should ideally be made against git master or a recent release and should be created using git format patch format. They should then be attached individually to a bug report or feature request in bugzilla. Please don t send patches to the mailing list they will likely get lost there. \nSee How to submit patches for more details. \n"});