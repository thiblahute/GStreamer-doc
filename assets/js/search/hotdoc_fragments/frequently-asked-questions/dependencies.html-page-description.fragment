fragment_downloaded_cb({"url": "frequently-asked-questions/dependencies.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"dependencies.md\">\n        <h1 id=\"dependencies\">Dependencies</h1>\n<h2 id=\"why-are-there-so-many-dependencies-\">Why are there so many dependencies ?</h2>\n<p>Making a full-featured media framework is a huge undertaking in\nitself. By using the work done by others, we both reduce the amount of\nredundant work being done and leave ourselves free to work on the\narchitecture itself instead of working on the low-level stuff. We would\nbe stupid not to reuse the code others have written.</p>\n<p>However, do realize that in no way you are forced to have all\ndependencies installed. None of the core developers has all of them\ninstalled. GStreamer has only a few obligate dependencies : GLib 2.0,\nliborc, and very common stuff like glibc, a C compiler, and so on. All\nof the other dependencies are optional.</p>\n<p>So, in closing, let's rephrase the question to \u201cWhy are you giving me so\nmany choices and such a rich environment ?\u201d</p>\n<h2 id=\"is-gstreamer-x11-independent-can-it-be-used-headless\">Is GStreamer X11 independent? Can it be used headless?</h2>\n<p>Yes, we have no hard dependency on X11 or any other windowing system in\nany of our modules. There are many GStreamer applications that run fine\nwithout any need for display servers or windowing systems,\nfor example streaming servers, transcoding applications, or audio\napplications that don't output any video. Other applications output\nvideo to a framebuffer, custom-made hardware sinks, or via wayland.</p>\n<h2 id=\"what-is-gstreamers-position-on-efforts-such-as-ladspa-or-lv2\">What is GStreamer's position on efforts such as LADSPA or LV2?</h2>\n<p>GStreamer actively supports such efforts, and in the case of <a href=\"https://en.wikipedia.org/wiki/LADSPA\">LADSPA</a>\nor <a href=\"http://lv2plug.in/\">LV2</a> we already have wrapper plugins. These wrapper plug-ins detect\nthe LADSPA/LV2 plugins present on your system at run time and make them\navailable as GStreamer elements.</p>\n<h2 id=\"does-gstreamer-support-midi-\">Does GStreamer support MIDI ?</h2>\n<p>There is some rudimentary MIDI support in GStreamer, but it's not complete yet.</p>\n<p>The GStreamer architecture should be able to support the needs of MIDI\napplications very well, a full implementation is still missing, however.\nIf you are a developer interested in adding MIDI support to GStreamer please\nget in touch, we would definitely be interested in that.</p>\n<p>As for what exists today: the <a href=\"https://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-plugins/html/gst-plugins-base-plugins-alsamidisrc.html\"><code>alsamidisrc</code></a> element can be used\nto fetch ALSA MIDI sequencer events and makes them available to elements that\nunderstand the <code>audio/x-midi-events</code> format.</p>\n<p>MIDI playback is provided by plugins such as <code>midiparse</code>, <code>fluiddec</code>,\n<code>wildmidi</code> and <code>timidity</code>.</p>\n<h2 id=\"does-gstreamer-depend-on-gnome-or-gtk-\">Does GStreamer depend on GNOME or GTK+ ?</h2>\n<p>No, it's just that many of the applications developed for GStreamer happen to\nbe GNOME or GTK+ applications, including some of our sample applications. There\nare just as many applications that use the Qt toolkit or that are written for\nMac OS/X, Windows, Android or iOS. We aim to provide an API that is toolkit\nagnostic, so that GStreamer can be used from any toolkit, desktop environment\nor operating system.</p>\n\n        \n\n    </div>\n\n\n        "});