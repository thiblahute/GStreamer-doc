fragment_downloaded_cb({"url": "gst-plugins-base-allocators-1.0/gstfdmemory.html#gst_fd_allocator_alloc", "fragment": "gst_fd_allocator_alloc \nGstAllocators.FdAllocator.alloc \nGstAllocators.prototype.alloc \nReturn a GstMemory that wraps a generic file descriptor. \nParameters \nallocator to be used for this memory \nfile descriptor \nmemory size \nextra GstFdMemoryFlags \na GstMemory based on allocator. When the buffer will be released the allocator will close the fd unless the GST_FD_MEMORY_FLAG_DONT_CLOSE flag is specified. The memory is only mmapped on gst_buffer_mmap request. \nSince \nReturn a Gst.Memory that wraps a generic file descriptor. \nParameters \nallocator to be used for this memory \nfile descriptor \nmemory size \nextra GstAllocators.FdMemoryFlags \na GstMemory based on allocator. When the buffer will be released the allocator will close the fd unless the GstAllocators.FdMemoryFlags.DONT_CLOSE flag is specified. The memory is only mmapped on gst_buffer_mmap request. \nSince \nReturn a Gst.Memory that wraps a generic file descriptor. \nParameters \nallocator to be used for this memory \nfile descriptor \nmemory size \nextra GstAllocators.FdMemoryFlags \na GstMemory based on allocator. When the buffer will be released the allocator will close the fd unless the GstAllocators.FdMemoryFlags.DONT_CLOSE flag is specified. The memory is only mmapped on gst_buffer_mmap request. \nSince \n"});