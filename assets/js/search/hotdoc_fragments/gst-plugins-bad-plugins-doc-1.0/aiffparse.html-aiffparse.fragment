fragment_downloaded_cb({"url": "gst-plugins-bad-plugins-doc-1.0/aiffparse.html#aiffparse", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"aiffparse\">\n\t\t<h3 id=\"aiffparse2\">\n\taiffparse\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span>aiffparse\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>Parse a .aiff file into raw or compressed audio.</p>\n<p>The aiffparse element supports both push and pull mode operations, making it\npossible to stream from a network source.</p>\n<h2 id=\"example-launch-line1\">Example launch line</h2>\n<pre><code>gst-launch-1.0 filesrc location=sine.aiff ! aiffparse ! audioconvert ! alsasink\n</code></pre>\n<p>Read a aiff file and output to the soundcard using the ALSA element. The\naiff file is assumed to contain raw uncompressed samples.</p>\n<pre><code>gst-launch-1.0 souphttpsrc location=http://www.example.org/sine.aiff ! queue ! aiffparse ! audioconvert ! alsasink\n</code></pre>\n<p>Stream data from a network url.</p>\n\n</div>\n\n</div>\n\n\n"});