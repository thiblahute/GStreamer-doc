fragment_downloaded_cb({"url": "gst-plugins-bad-plugins-doc-1.0/compositor.html#compositor", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"compositor\">\n\t\t<h3 id=\"compositor2\">\n\tcompositor\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstAggregator\" href=\"../gst-plugins-bad-base-doc-1.0/c/gstaggregator.html#GstAggregator\">GstAggregator</a>\n                    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstVideoAggregator\" href=\"../gst-plugins-bad-video-doc-1.0/c/gstvideoaggregator.html#GstVideoAggregator\">GstVideoAggregator</a>\n                        <span class=\"lineart\">\u2570\u2500\u2500</span>compositor\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>Compositor can accept AYUV, ARGB and BGRA video streams. For each of the requested\nsink pads it will compare the incoming geometry and framerate to define the\noutput parameters. Indeed output video frames will have the geometry of the\nbiggest incoming video stream and the framerate of the fastest incoming one.</p>\n<p>Compositor will do colorspace conversion.</p>\n<p>Individual parameters for each input stream can be configured on the\nGstCompositorPad:</p>\n<ul>\n<li>\"xpos\": The x-coordinate position of the top-left corner of the picture (#gint)</li>\n<li>\"ypos\": The y-coordinate position of the top-left corner of the picture (#gint)</li>\n<li>\"width\": The width of the picture; the input will be scaled if necessary (#gint)</li>\n<li>\"height\": The height of the picture; the input will be scaled if necessary (#gint)</li>\n<li>\"alpha\": The transparency of the picture; between 0.0 and 1.0. The blending\nis a simple copy when fully-transparent (0.0) and fully-opaque (1.0). (#gdouble)</li>\n<li>\"zorder\": The z-order position of the picture in the composition (#guint)</li>\n</ul>\n<h2 id=\"sample-pipelines1\">Sample pipelines</h2>\n<pre><code>gst-launch-1.0 \\\n  videotestsrc pattern=1 ! \\\n  video/x-raw,format=AYUV,framerate=\\(fraction\\)10/1,width=100,height=100 ! \\\n  videobox border-alpha=0 top=-70 bottom=-70 right=-220 ! \\\n  compositor name=comp sink_0::alpha=0.7 sink_1::alpha=0.5 ! \\\n  videoconvert ! xvimagesink \\\n  videotestsrc ! \\\n  video/x-raw,format=AYUV,framerate=\\(fraction\\)5/1,width=320,height=240 ! comp.\n</code></pre>\n<p>A pipeline to demonstrate compositor used together with videobox.\nThis should show a 320x240 pixels video test source with some transparency\nshowing the background checker pattern. Another video test source with just\nthe snow pattern of 100x100 pixels is overlaid on top of the first one on\nthe left vertically centered with a small transparency showing the first\nvideo test source behind and the checker pattern under it. Note that the\nframerate of the output video is 10 frames per second.</p>\n<pre><code>gst-launch-1.0 videotestsrc pattern=1 ! \\\n  video/x-raw, framerate=\\(fraction\\)10/1, width=100, height=100 ! \\\n  compositor name=comp ! videoconvert ! ximagesink \\\n  videotestsrc !  \\\n  video/x-raw, framerate=\\(fraction\\)5/1, width=320, height=240 ! comp.\n</code></pre>\n<p>A pipeline to demostrate bgra comping. (This does not demonstrate alpha blending).</p>\n<pre><code>gst-launch-1.0 videotestsrc pattern=1 ! \\\n  video/x-raw,format =I420, framerate=\\(fraction\\)10/1, width=100, height=100 ! \\\n  compositor name=comp ! videoconvert ! ximagesink \\\n  videotestsrc ! \\\n  video/x-raw,format=I420, framerate=\\(fraction\\)5/1, width=320, height=240 ! comp.\n</code></pre>\n<p>A pipeline to test I420</p>\n<pre><code>gst-launch-1.0 compositor name=comp sink_1::alpha=0.5 sink_1::xpos=50 sink_1::ypos=50 ! \\\n  videoconvert ! ximagesink \\\n  videotestsrc pattern=snow timestamp-offset=3000000000 ! \\\n  \"video/x-raw,format=AYUV,width=640,height=480,framerate=(fraction)30/1\" ! \\\n  timeoverlay ! queue2 ! comp. \\\n  videotestsrc pattern=smpte ! \\\n  \"video/x-raw,format=AYUV,width=800,height=600,framerate=(fraction)10/1\" ! \\\n  timeoverlay ! queue2 ! comp.\n</code></pre>\n<p>A pipeline to demonstrate synchronized compositing (the second stream starts after 3 seconds)</p>\n\n</div>\n\n</div>\n\n\n"});