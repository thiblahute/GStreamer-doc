fragment_downloaded_cb({"url": "gst-plugins-bad-plugins-doc-1.0/glstereomix.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"glstereomix\">\n<h1 id=\"glstereomix1\">glstereomix</h1><p>Combine 2 input streams to produce a stereoscopic output\nstream. Input views are taken from the left pad and right pad\nrespectively, and mixed according to their timelines.</p>\n<p>If either input stream is stereoscopic, the approproriate view\n(left or right) is taken from each stream and placed into the output.</p>\n<p>The multiview representation on the output is chosen according to\nthe downstream caps.</p>\n<h2 id=\"examples\">Examples</h2>\n<pre><code>gst-launch-1.0 -v videotestsrc pattern=ball name=left \\\n    videotestsrc name=right glstereomix name=mix \\\n    left. ! vid/x-raw,width=640,height=480! glupload ! mix.  \\\n    right. ! video/x-raw,width=640,height=480! glupload ! mix.  \\\n    mix. ! video/x-raw'(memory:GLMemory)',multiview-mode=side-by-side ! \\\n    queue ! glimagesink output-multiview-mode=side-by-side\n</code></pre>\n<p>Mix 2 different videotestsrc patterns into a side-by-side stereo image and display it.</p>\n<pre><code>gst-launch-1.0 -ev v4l2src name=left \\\n    videotestsrc name=right \\\n    glstereomix name=mix \\\n    left. ! video/x-raw,width=640,height=480 ! glupload ! glcolorconvert ! mix.  \\\n    right. ! video/x-raw,width=640,height=480 ! glupload ! mix.  \\\n    mix. ! video/x-raw'(memory:GLMemory)',multiview-mode=top-bottom ! \\\n    glcolorconvert ! gldownload ! queue ! x264enc ! h264parse ! \\\n    mp4mux ! progressreport ! filesink location=output.mp4\n</code></pre>\n<p>Mix the input from a camera to the left view, and videotestsrc to the right view,\nand encode as a top-bottom frame packed H.264 video.</p>\n\n</div>\n\n\n"});