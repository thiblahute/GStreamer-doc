fragment_downloaded_cb({"url": "gst-plugins-bad-plugins-doc-1.0/ttmlrender.html#ttmlrender", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ttmlrender\">\n\t\t<h3 id=\"ttmlrender2\">\n\tttmlrender\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span>ttmlrender\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>Renders timed text on top of a video stream. It receives text in buffers\nfrom a ttmlparse element; each text string is in its own <a href=\"../libgstreamer-doc-1.0/c/gstmemory.html#GstMemory\">GstMemory</a> within\nthe GstBuffer, and the styling and layout associated with each text string\nis in metadata attached to the <a href=\"../libgstreamer-doc-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a>.</p>\n<h2 id=\"example-launch-lines1\">Example launch lines</h2>\n<pre><code>gst-launch-1.0 filesrc location=&lt;media file location&gt; ! video/quicktime ! qtdemux name=q ttmlrender name=r q. ! queue ! h264parse ! avdec_h264 ! autovideoconvert ! r.video_sink filesrc location=&lt;subtitle file location&gt; blocksize=16777216 ! queue ! ttmlparse ! r.text_sink r. ! ximagesink q. ! queue ! aacparse ! avdec_aac ! audioconvert ! alsasink\n</code></pre>\n<p>Parse and render TTML subtitles contained in a single XML file over an\nMP4 stream containing H.264 video and AAC audio:</p>\n\n</div>\n\n</div>\n\n\n"});