fragment_downloaded_cb({"url": "gst-plugins-bad-plugins-doc-1.0/element-camerabin.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-camerabin\">\n<h1 id=\"camerabin\">camerabin</h1><p>CameraBin is a high-level camera object that encapsulates gstreamer\nelements, providing an API for controlling a digital camera.</p>\n<blockquote>\n<p>Note that camerabin is still UNSTABLE and under development.</p>\n</blockquote>\n<p>CameraBin has the following main features:</p>\n<ul>\n<li>Record videos</li>\n<li>Capture pictures</li>\n<li>Display a viewfinder</li>\n<li>Post preview images for each capture (video and image)</li>\n</ul>\n<h2 id=\"usage\">Usage</h2>\n<p>Camerabin can be created using <a href=\"../libgstreamer-doc-1.0/c/gstelementfactory.html#gst_element_factory_make\">gst_element_factory_make</a> just like\nany other element. Video or image capture mode can be selected using\nthe <a href=\"element-camerabin.html#GstCameraBin:mode\">mode</a> property and the file to save the capture is\nselected using <a href=\"element-camerabin.html#GstCameraBin:location\">location</a> property.</p>\n<p>After creating camerabin, applications might want to do some\ncustomization (there's a section about this below), then select\nthe desired mode and start capturing.</p>\n<p>In image capture mode, just send a GstCameraBin:start-capture and a\npicture will be captured. When the picture is stored on the selected\nlocation, a <a href=\"../libgstreamer-doc-1.0/c/gstmessage.html#GST_MESSAGE_ELEMENT\">GST_MESSAGE_ELEMENT</a> named 'image-done' will be posted on\nthe <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstBus.html#GstBus-struct\">GstBus</a>.</p>\n<p>In video capture mode, send a GstCameraBin:start-capture to start\nrecording, then send a GstCameraBin:stop-capture to stop recording.\nNote that both signals are asynchronous, so, calling\nGstCameraBin:stop-capture doesn't guarantee that the video has been\nproperly finished yet. Applications should wait for the 'video-done'\nmessage to be posted on the bus.</p>\n<p>In both modes, if <a href=\"element-camerabin.html#GstCameraBin:post-previews\">post-previews</a> is <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>, a <a href=\"../libgstreamer-doc-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a>\nwill be post to the <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstBus.html#GstBus-struct\">GstBus</a> in a field named 'buffer', in a\n'preview-image' message of type <a href=\"../libgstreamer-doc-1.0/c/gstmessage.html#GST_MESSAGE_ELEMENT\">GST_MESSAGE_ELEMENT</a>.</p>\n<h2 id=\"customization\">Customization</h2>\n<p>Camerabin provides various customization properties, allowing the user\nto set custom filters, selecting the viewfinder sink and formats to\nuse to encode the captured images/videos.</p>\n<p><a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-encoding-profile.html#GstEncodingProfile-struct\">GstEncodingProfile</a><!-- -->s are used to tell camerabin which formats it\nshould encode the captures to, those should be set to\n<a href=\"element-camerabin.html#GstCameraBin:image-profile\">image-profile</a> and <a href=\"element-camerabin.html#GstCameraBin:video-profile\">video-profile</a>. Default is\njpeg for images, and ogg (theora and vorbis) for video. If a profile without\nan audio stream is set for video, audio will be disabled on recordings.</p>\n<p><a href=\"element-camerabin.html#GstCameraBin:preview-caps\">preview-caps</a> can be used to select which format preview\nimages should be posted on the <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstBus.html#GstBus-struct\">GstBus</a>. It has to be a raw video format.</p>\n<p>Camerabin has a <a href=\"element-camerabin.html#GstCameraBin:camera-source\">camera-source</a> property so applications can\nset their source that will provide buffers for the viewfinder and for\ncaptures. This camera source is a special type of source that has 3 pads.\nTo use a 'regular' source with a single pad you should use\nGstWrapperCameraBinSource, it will adapt your source and provide 3 pads.</p>\n<p>Applications can also select the desired viewfinder sink using\n<a href=\"element-camerabin.html#GstCameraBin:viewfinder-sink\">viewfinder-sink</a>, it is also possible to select the audio\nsource using <a href=\"element-camerabin.html#GstCameraBin:audio-source\">audio-source</a>.</p>\n<p>The viewfinder resolution can be configured using\n<a href=\"element-camerabin.html#GstCameraBin:viewfinder-caps\">viewfinder-caps</a>, these <a href=\"../libgstreamer-doc-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> should be a subset of\n<a href=\"element-camerabin.html#GstCameraBin:viewfinder-supported-caps\">viewfinder-supported-caps</a>.</p>\n<p>To select the desired resolution for captures, camerabin provides\n<a href=\"element-camerabin.html#GstCameraBin:image-capture-caps\">image-capture-caps</a> and <a href=\"element-camerabin.html#GstCameraBin:video-capture-caps\">video-capture-caps</a>,\nthese caps must be a subset of what the source can produce. The allowed\ncaps can be probed using <a href=\"element-camerabin.html#GstCameraBin:image-capture-supported-caps\">image-capture-supported-caps</a> and\n<a href=\"element-camerabin.html#GstCameraBin:video-capture-supported-caps\">video-capture-supported-caps</a>. In an analogous way, there\nare <a href=\"element-camerabin.html#GstCameraBin:audio-capture-caps\">audio-capture-caps</a> and\n<a href=\"element-camerabin.html#GstCameraBin:audio-capture-supported-caps\">audio-capture-supported-caps</a>.</p>\n<p>Camerabin also allows applications to insert custom <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstElement.html#GstElement-struct\">GstElement</a> on any\nof its branches: video capture, image capture, viewfinder and preview.\nCheck <a href=\"element-camerabin.html#GstCameraBin:video-filter\">video-filter</a>, <a href=\"element-camerabin.html#GstCameraBin:image-filter\">image-filter</a>,\n<a href=\"element-camerabin.html#GstCameraBin:viewfinder-filter\">viewfinder-filter</a> and <a href=\"element-camerabin.html#GstCameraBin:preview-filter\">preview-filter</a>.</p>\n<h2 id=\"example-launch-line\">Example launch line</h2>\n<p>Unfortunately, camerabin can't be really used from gst-launch-1.0, as you\nneed to send signals to control it. The following pipeline might be able\nto show the viewfinder using all the default elements.</p>\n<pre><code class=\"language-[\"> gst-launch-1.0 -v -m camerabin\n</code></pre>\n\n</div>\n\n\n"});