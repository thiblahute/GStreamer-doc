fragment_downloaded_cb({"url": "libgstcheck-1.0/gstharness.html#gst_harness_add_src_parse", "fragment": "GstCheck.prototype.add_src_parse \nGstCheck.Harness.add_src_parse \ngst_harness_add_src_parse \nSimilar to gst_harness_add_src this allows you to specify a launch line which can be useful for both having more then one Gst.Element acting as your src Like a src producing raw buffers and then an encoder providing encoded data but also by allowing you to set properties like is live directly on the elements. \nMT safe. \nParameters \na GstCheck.Harness \na String describing a gst launch type line \na Number specifying if the Gst.Element uses gst_clock_wait_id internally. \nSince \nSimilar to gst_harness_add_src this allows you to specify a launch line which can be useful for both having more then one Gst.Element acting as your src Like a src producing raw buffers and then an encoder providing encoded data but also by allowing you to set properties like is live directly on the elements. \nMT safe. \nParameters \na GstCheck.Harness \na int describing a gst launch type line \na bool specifying if the Gst.Element uses gst_clock_wait_id internally. \nSince \nSimilar to gst_harness_add_src this allows you to specify a launch line which can be useful for both having more then one GstElement acting as your src Like a src producing raw buffers and then an encoder providing encoded data but also by allowing you to set properties like is live directly on the elements. \nMT safe. \nParameters \na GstHarness \na gchar describing a gst launch type line \na gboolean specifying if the GstElement uses gst_clock_wait_id internally. \nSince \n"});