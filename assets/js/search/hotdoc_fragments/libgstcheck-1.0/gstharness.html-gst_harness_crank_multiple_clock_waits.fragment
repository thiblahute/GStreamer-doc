fragment_downloaded_cb({"url": "libgstcheck-1.0/gstharness.html#gst_harness_crank_multiple_clock_waits", "fragment": "GstCheck.prototype.crank_multiple_clock_waits \ngst_harness_crank_multiple_clock_waits \ngst_harness_crank_multiple_clock_waits \nSimilar to GstCheck.prototype.crank_single_clock_wait this is the function to use if your harnessed element s are using more then one gst_clock_id_wait. Failing to do so can and will make it racy which Object you actually are releasing where as this function will process all the waits at the same time ensuring that one thread can t register another wait before both are released. \nMT safe. \nParameters \na GstCheck.Harness \na Number describing the number of Object to crank \na gboolean true if the crank was successful false if not. \nSince \nSimilar to gst_harness_crank_single_clock_wait this is the function to use if your harnessed element s are using more then one gst_clock_id_wait. Failing to do so can and will make it racy which GstClockID you actually are releasing where as this function will process all the waits at the same time ensuring that one thread can t register another wait before both are released. \nMT safe. \nParameters \na GstHarness \na guint describing the number of GstClockID to crank \na gboolean TRUE if the crank was successful FALSE if not. \nSince \nSimilar to gst_harness_crank_single_clock_wait this is the function to use if your harnessed element s are using more then one gst_clock_id_wait. Failing to do so can and will make it racy which GstClockID you actually are releasing where as this function will process all the waits at the same time ensuring that one thread can t register another wait before both are released. \nMT safe. \nParameters \na GstHarness \na guint describing the number of GstClockID to crank \na gboolean TRUE if the crank was successful FALSE if not. \nSince \n"});