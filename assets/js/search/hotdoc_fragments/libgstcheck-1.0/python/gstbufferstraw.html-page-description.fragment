fragment_downloaded_cb({"url": "libgstcheck-1.0/python/gstbufferstraw.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstbufferstraw.h\">\n        <h1 id=\"gstbufferstraw\">GstBufferStraw</h1><p>These macros and functions are for internal use of the unit tests found\ninside the 'check' directories of various GStreamer packages.</p>\n\n        \n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_buffer_straw_get_buffer\">\n\t\t\n<h4 id=\"gstcheckbuffer_straw_get_buffer\">\n\t<span><code>GstCheck.buffer_straw_get_buffer</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstCheck.buffer_straw_get_buffer (bin, pad):\n    #python wrapper for 'gst_buffer_straw_get_buffer'</pre>\n\n<p>Get one buffer from <em>pad</em>. Implemented via buffer probes. This function will\nblock until the pipeline passes a buffer over <em>pad</em>, so for robust behavior\nin unit tests, you need to use check's timeout to fail out in the case that a\nbuffer never arrives.</p>\n<p>You must have previously called <a href=\"gstbufferstraw.html#gst_buffer_straw_start_pipeline\">GstCheck.buffer_straw_start_pipeline</a> on\n<em>pipeline</em> and <em>pad</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the pipeline previously started via <a href=\"gstbufferstraw.html#gst_buffer_straw_start_pipeline\">GstCheck.buffer_straw_start_pipeline</a></p>\n</td>\n<td>\n<a title=\"Gst.Element\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">Gst.Element</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pad:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the pad previously passed to <a href=\"gstbufferstraw.html#gst_buffer_straw_start_pipeline\">GstCheck.buffer_straw_start_pipeline</a></p>\n</td>\n<td>\n<a title=\"Gst.Pad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">Gst.Pad</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the captured <a href=\"../../libgstreamer-1.0/c/gstbuffer.html#GstBuffer\">Gst.Buffer</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Buffer\" href=\"../../libgstreamer-1.0/c/gstbuffer.html#GstBuffer\">Gst.Buffer</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_buffer_straw_start_pipeline\">\n\t\t\n<h4 id=\"gstcheckbuffer_straw_start_pipeline\">\n\t<span><code>GstCheck.buffer_straw_start_pipeline</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstCheck.buffer_straw_start_pipeline (bin, pad):\n    #python wrapper for 'gst_buffer_straw_start_pipeline'</pre>\n\n<p>Sets up a pipeline for buffer sucking. This will allow you to call\n<a href=\"gstbufferstraw.html#gst_buffer_straw_get_buffer\">GstCheck.buffer_straw_get_buffer</a> to access buffers as they pass over <em>pad</em>.</p>\n<p>This function is normally used in unit tests that want to verify that a\nparticular element is outputting correct buffers. For example, you would make\na pipeline via <a href=\"../../libgstreamer-1.0/c/gstparse.html#gst_parse_launch\">Gst.parse_launch</a>, pull out the pad you want to monitor, then\ncall <a href=\"gstbufferstraw.html#gst_buffer_straw_get_buffer\">GstCheck.buffer_straw_get_buffer</a> to get the buffers that pass through <em>pad</em>.\nThe pipeline will block until you have sucked off the buffers.</p>\n<p>This function will set the state of <em>bin</em> to PLAYING; to clean up, be sure to\ncall <a href=\"gstbufferstraw.html#gst_buffer_straw_stop_pipeline\">GstCheck.buffer_straw_stop_pipeline</a>.</p>\n<p>Note that you may not start two buffer straws at the same time. This function\nis intended for unit tests, not general API use. In fact it calls fail_if\nfrom libcheck, so you cannot use it outside unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the pipeline to run</p>\n</td>\n<td>\n<a title=\"Gst.Element\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">Gst.Element</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pad:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pad on an element in <em>bin</em></p>\n</td>\n<td>\n<a title=\"Gst.Pad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">Gst.Pad</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_buffer_straw_stop_pipeline\">\n\t\t\n<h4 id=\"gstcheckbuffer_straw_stop_pipeline\">\n\t<span><code>GstCheck.buffer_straw_stop_pipeline</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstCheck.buffer_straw_stop_pipeline (bin, pad):\n    #python wrapper for 'gst_buffer_straw_stop_pipeline'</pre>\n\n<p>Set <em>bin</em> to <a href=\"../../libgstreamer-1.0/c/gstelement.html#GST_STATE_NULL\">Gst.State.null</a> and release resource allocated in\n<a href=\"gstbufferstraw.html#gst_buffer_straw_start_pipeline\">GstCheck.buffer_straw_start_pipeline</a>.</p>\n<p>You must have previously called <a href=\"gstbufferstraw.html#gst_buffer_straw_start_pipeline\">GstCheck.buffer_straw_start_pipeline</a> on\n<em>pipeline</em> and <em>pad</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters2\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the pipeline previously started via <a href=\"gstbufferstraw.html#gst_buffer_straw_start_pipeline\">GstCheck.buffer_straw_start_pipeline</a></p>\n</td>\n<td>\n<a title=\"Gst.Element\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">Gst.Element</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pad:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the pad previously passed to <a href=\"gstbufferstraw.html#gst_buffer_straw_start_pipeline\">GstCheck.buffer_straw_start_pipeline</a></p>\n</td>\n<td>\n<a title=\"Gst.Pad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">Gst.Pad</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n    </div>\n\n\n        "});