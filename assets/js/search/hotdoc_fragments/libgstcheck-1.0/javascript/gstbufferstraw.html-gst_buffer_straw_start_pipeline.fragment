fragment_downloaded_cb({"url": "libgstcheck-1.0/javascript/gstbufferstraw.html#gst_buffer_straw_start_pipeline", "fragment": "GstCheck.prototype.buffer_straw_start_pipeline \nSets up a pipeline for buffer sucking. This will allow you to call GstCheck.prototype.buffer_straw_get_buffer to access buffers as they pass over pad. \nThis function is normally used in unit tests that want to verify that a particular element is outputting correct buffers. For example you would make a pipeline via Gst.prototype.parse_launch pull out the pad you want to monitor then call GstCheck.prototype.buffer_straw_get_buffer to get the buffers that pass through pad. The pipeline will block until you have sucked off the buffers. \nThis function will set the state of bin to PLAYING to clean up be sure to call GstCheck.prototype.buffer_straw_stop_pipeline. \nNote that you may not start two buffer straws at the same time. This function is intended for unit tests not general API use. In fact it calls fail_if from libcheck so you cannot use it outside unit tests. \nbin \nthe pipeline to run \npad \na pad on an element in bin \n"});