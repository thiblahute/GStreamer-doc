fragment_downloaded_cb({"url": "libgstcheck-1.0/gstharness.html#gst_harness_set_blocking_push_mode", "fragment": "gst_harness_set_blocking_push_mode \nGstCheck.Harness.set_blocking_push_mode \nGstCheck.prototype.set_blocking_push_mode \nSetting this will make the harness block in the chain function and then release when gst_harness_pull or gst_harness_try_pull is called. Can be useful when wanting to control a src element that is not implementing gst_clock_id_wait so it can t be controlled by the GstTestClock since it otherwise would produce buffers as fast as possible. \nMT safe. \nParameters \na GstHarness \nSince \nSetting this will make the harness block in the chain function and then release when GstCheck.Harness.pull or GstCheck.Harness.try_pull is called. Can be useful when wanting to control a src element that is not implementing Gst.Clock.id_wait so it can t be controlled by the GstCheck.TestClock since it otherwise would produce buffers as fast as possible. \nMT safe. \nParameters \na GstCheck.Harness \nSince \nSetting this will make the harness block in the chain function and then release when GstCheck.prototype.pull or GstCheck.prototype.try_pull is called. Can be useful when wanting to control a src element that is not implementing Gst.prototype.id_wait so it can t be controlled by the GstCheck.TestClock since it otherwise would produce buffers as fast as possible. \nMT safe. \nParameters \na GstCheck.Harness \nSince \n"});