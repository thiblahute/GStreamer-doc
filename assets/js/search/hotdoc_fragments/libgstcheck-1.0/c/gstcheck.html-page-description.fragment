fragment_downloaded_cb({"url": "libgstcheck-1.0/c/gstcheck.html#page-description", "fragment": "Create an element using the factory providing the element_name and push the buffer_in to this element. The element should create one buffer and this will be compared with buffer_out. We only check the caps and the data of the buffers. This function unrefs the buffers. \nCreate an element using the factory providing the element_name and push the buffers in buffer_in to this element. The element should create the buffers equal to the buffers in buffer_out. We only check the size and the data of the buffers. This function unrefs the buffers in the two lists. The last_flow_return parameter indicates the expected flow return value from pushing the final buffer in the list. This can be used to set up a test which pushes some buffers and then an invalid buffer when the final buffer is expected to fail for example. \nUnrefs object_to_unref and checks that is has properly been destroyed. \nUnrefs object_to_unref and checks that is has properly been destroyed also checks that the other objects passed in parametter have been destroyed as a concequence of unrefing object_to_unref. Last variable argument should be NULL. \nPush stream start caps and segment event which consist of the minimum required events to allow streaming. Caps is optional to allow raw src testing. \nCreates a new sink pad based on the given tmpl and links it to the given element src pad the pad that matches the given name You can set event chain query functions on this pad to check the output of the element. \nCreates a new src pad based on the given tmpl and links it to the given element sink pad the pad that matches the given name Before using the src pad to push data on element you need to call gst_check_setup_events on the created src pad. \nExample of how to push a buffer on element \nFor very simple input output test scenarios checkout gst_check_element_push_buffer_list and gst_check_element_push_buffer. \nThis macro checks that a and b are equal and aborts if this is not the case printing both expressions and the values they evaluated to in hexadecimal format. This macro is for use in unit tests. \n"});