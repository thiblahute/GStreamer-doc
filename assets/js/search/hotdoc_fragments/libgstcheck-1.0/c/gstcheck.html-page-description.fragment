fragment_downloaded_cb({"url": "libgstcheck-1.0/c/gstcheck.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstcheck.h\">\n        <h1 id=\"gstcheck\">GstCheck</h1><p>These macros and functions are for internal use of the unit tests found\ninside the 'check' directories of various GStreamer packages.</p>\n<p>One notable feature is that one can use the environment variables GST_CHECKS\nand GST_CHECKS_IGNORE to select which tests to run or skip. Both variables\ncan contain a comma separated list of test name globs (e.g. test_*).</p>\n\n        \n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.12;\" id=\"gst_check_add_log_filter\">\n\t\t\n<h4 id=\"gst_check_add_log_filter1\">\n\t<span><code>gst_check_add_log_filter</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nGstCheckLogFilter*\ngst_check_add_log_filter (const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * log,\n                          <a title=\"GLogLevelFlags\" href=\"https://developer.gnome.org/glib/unstable/glib-Message-Logging.html#GLogLevelFlags\">GLogLevelFlags</a> log_level,\n                          <a title=\"GRegex\" href=\"https://developer.gnome.org/glib/unstable/glib-Perl-compatible-regular-expressions.html#GRegex\">GRegex</a> * regex,\n                          <a title=\"GstCheckLogFilterFunc\" href=\"gstcheck.html#GstCheckLogFilterFunc\">GstCheckLogFilterFunc</a> func,\n                          <a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> user_data,\n                          <a title=\"GDestroyNotify\" href=\"https://developer.gnome.org/glib/unstable/glib-Datasets.html#GDestroyNotify\">GDestroyNotify</a> destroy_data)</pre>\n\n<p>Add a callback <em>func</em> to be called for all log messages that matches\n<em>log_domain</em>, <em>log_level</em> and <em>regex</em>. If <em>func</em> is NULL the\nmatching logs will be silently discarded by GstCheck.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>log:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>log_level:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the log level of the message</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>regex:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Perl-compatible-regular-expressions.html#GRegex\">GRegex</a> to match the message</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>func:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the function to call for matching messages</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the user data to pass to <em>func</em></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>destroy_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p><a href=\"https://developer.gnome.org/glib/unstable/glib-Datasets.html#GDestroyNotify\">GDestroyNotify</a> for <em>user_data</em></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>A filter that can be passed to <em>gst_check_remove_log_filter</em>.</p>\n\n\t</td>\n\t<td>\n\t\tGstCheckLogFilter*\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.12\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_buffer_data\">\n\t\t\n<h4 id=\"gst_check_buffer_data1\">\n\t<span><code>gst_check_buffer_data</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_buffer_data (<a title=\"GstBuffer\" href=\"../../libgstreamer-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a> * buffer,\n                       <a title=\"gconstpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gconstpointer\">gconstpointer</a> data,\n                       <a title=\"gsize\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gsize\">gsize</a> size)</pre>\n\n<p>Compare the buffer contents with <em>data</em> and <em>size</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>buffer:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>buffer to compare</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>data to compare to</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>size:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>size of data to compare</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_caps_equal\">\n\t\t\n<h4 id=\"gst_check_caps_equal1\">\n\t<span><code>gst_check_caps_equal</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_caps_equal (<a title=\"GstCaps\" href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> * caps1,\n                      <a title=\"GstCaps\" href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> * caps2)</pre>\n\n<p>Compare two caps with gst_caps_is_equal and fail unless they are\nequal.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters2\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps1:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>first caps to compare</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps2:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>second caps to compare</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.12;\" id=\"gst_check_clear_log_filter\">\n\t\t\n<h4 id=\"gst_check_clear_log_filter1\">\n\t<span><code>gst_check_clear_log_filter</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_clear_log_filter ()</pre>\n\n<p>Clear all filters added by <em>gst_check_add_log_filter</em>.</p>\n<p>MT safe.</p>\n\n\n\n\n\t<p>\n\tSince\t\t\t: 1.12\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_drop_buffers\">\n\t\t\n<h4 id=\"gst_check_drop_buffers1\">\n\t<span><code>gst_check_drop_buffers</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_drop_buffers ()</pre>\n\n<p>Unref and remove all buffers that are in the global <em>buffers</em> GList,\nemptying the list.</p>\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_element_push_buffer\">\n\t\t\n<h4 id=\"gst_check_element_push_buffer1\">\n\t<span><code>gst_check_element_push_buffer</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_element_push_buffer (const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * element_name,\n                               <a title=\"GstBuffer\" href=\"../../libgstreamer-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a> * buffer_in,\n                               <a title=\"GstCaps\" href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> * caps_in,\n                               <a title=\"GstBuffer\" href=\"../../libgstreamer-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a> * buffer_out,\n                               <a title=\"GstCaps\" href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> * caps_out)</pre>\n\n<p>Create an element using the factory providing the <em>element_name</em> and\npush the <em>buffer_in</em> to this element. The element should create one buffer\nand this will be compared with <em>buffer_out</em>. We only check the caps\nand the data of the buffers. This function unrefs the buffers.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters3\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>name of the element that needs to be created</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>buffer_in:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>push this buffer to the element</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps_in:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> expected of the sinkpad of the element</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>buffer_out:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>compare the result with this buffer</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps_out:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> expected of the srcpad of the element</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_element_push_buffer_list\">\n\t\t\n<h4 id=\"gst_check_element_push_buffer_list1\">\n\t<span><code>gst_check_element_push_buffer_list</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_element_push_buffer_list (const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * element_name,\n                                    <a title=\"GList\" href=\"https://developer.gnome.org/glib/unstable/glib-Doubly-Linked-Lists.html#GList\">GList</a> * buffer_in,\n                                    <a title=\"GstCaps\" href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> * caps_in,\n                                    <a title=\"GList\" href=\"https://developer.gnome.org/glib/unstable/glib-Doubly-Linked-Lists.html#GList\">GList</a> * buffer_out,\n                                    <a title=\"GstCaps\" href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> * caps_out,\n                                    <a title=\"GstFlowReturn\" href=\"../../c/gst-plugins-bad-plugins-1.0/element-errorignore.html#GstFlowReturn\">GstFlowReturn</a> last_flow_return)</pre>\n\n<p>Create an element using the factory providing the <em>element_name</em> and push the\nbuffers in <em>buffer_in</em> to this element. The element should create the buffers\nequal to the buffers in <em>buffer_out</em>. We only check the size and the data of\nthe buffers. This function unrefs the buffers in the two lists.\nThe last_flow_return parameter indicates the expected flow return value from\npushing the final buffer in the list.\nThis can be used to set up a test which pushes some buffers and then an\ninvalid buffer, when the final buffer is expected to fail, for example.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters4\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>name of the element that needs to be created</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>buffer_in:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a list of buffers that needs to be\npushed to the element</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Generic and defining element of containers and arrays\"><span class=\"acronym\">element-type</span></abbr> GstBuffer]</span>\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps_in:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> expected of the sinkpad of the element</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>buffer_out:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a list of buffers that we expect from\nthe element</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Generic and defining element of containers and arrays\"><span class=\"acronym\">element-type</span></abbr> GstBuffer]</span>\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps_out:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> expected of the srcpad of the element</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>last_flow_return:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the last buffer push needs to give this GstFlowReturn</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_check_object_destroyed_on_unref\">\n\t\t\n<h4 id=\"gst_check_object_destroyed_on_unref1\">\n\t<span><code>gst_check_object_destroyed_on_unref</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_object_destroyed_on_unref (<a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> object_to_unref)</pre>\n\n<p>Unrefs <em>object_to_unref</em> and checks that is has properly been\ndestroyed.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters5\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>object_to_unref:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a> to unref</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_check_objects_destroyed_on_unref\">\n\t\t\n<h4 id=\"gst_check_objects_destroyed_on_unref1\">\n\t<span><code>gst_check_objects_destroyed_on_unref</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_objects_destroyed_on_unref (<a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> object_to_unref,\n                                      <a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> first_object,\n                                      ... ...)</pre>\n\n<p>Unrefs <em>object_to_unref</em> and checks that is has properly been\ndestroyed, also checks that the other objects passed in\nparametter have been destroyed as a concequence of\nunrefing <em>object_to_unref</em>. Last variable argument should be NULL.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters6\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>object_to_unref:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a> to unref</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>first_object:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The first object that should be destroyed as a\nconcequence of unrefing <em>object_to_unref</em>.</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>...:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Additional object that should have been destroyed.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.12;\" id=\"gst_check_remove_log_filter\">\n\t\t\n<h4 id=\"gst_check_remove_log_filter1\">\n\t<span><code>gst_check_remove_log_filter</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_remove_log_filter (GstCheckLogFilter* filter)</pre>\n\n<p>Remove a filter that has been added by <em>gst_check_add_log_filter</em>.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters7\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>filter:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Filter returned by <em>gst_check_add_log_filter</em></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.12\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_setup_element\">\n\t\t\n<h4 id=\"gst_check_setup_element1\">\n\t<span><code>gst_check_setup_element</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> *\ngst_check_setup_element (const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * factory)</pre>\n\n<p>setup an element for a filter test with mysrcpad and mysinkpad</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters8\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>factory:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>factory</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns1\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new element</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_setup_events\">\n\t\t\n<h4 id=\"gst_check_setup_events1\">\n\t<span><code>gst_check_setup_events</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_setup_events (<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> * srcpad,\n                        <a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                        <a title=\"GstCaps\" href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> * caps,\n                        <a title=\"GstFormat\" href=\"../../c/GstFormat\">GstFormat</a> format)</pre>\n\n<p>Push stream-start, caps and segment event, which consist of the minimum\nrequired events to allow streaming. Caps is optional to allow raw src\ntesting. If <em>element</em> has more than one src or sink pad, use\n<a href=\"gstcheck.html#gst_check_setup_events_with_stream_id\">gst_check_setup_events_with_stream_id</a> instead.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters9\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>srcpad:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The src <a href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> to push on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> use to create the stream id</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p><a href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> in case caps event must be sent</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>format:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"../../c/GstFormat\">GstFormat</a> of the default segment to send</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_setup_events_with_stream_id\">\n\t\t\n<h4 id=\"gst_check_setup_events_with_stream_id1\">\n\t<span><code>gst_check_setup_events_with_stream_id</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_check_setup_events_with_stream_id (<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> * srcpad,\n                                       <a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                                       <a title=\"GstCaps\" href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> * caps,\n                                       <a title=\"GstFormat\" href=\"../../c/GstFormat\">GstFormat</a> format,\n                                       const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * stream_id)</pre>\n\n<p>Push stream-start, caps and segment event, which consist of the minimum\nrequired events to allow streaming. Caps is optional to allow raw src\ntesting.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters10\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>srcpad:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The src <a href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> to push on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> use to create the stream id</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p><a href=\"../../libgstreamer-1.0/c/gstcaps.html#GstCaps\">GstCaps</a> in case caps event must be sent</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>format:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"../../c/GstFormat\">GstFormat</a> of the default segment to send</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>stream_id:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A unique identifier for the stream</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_setup_sink_pad\">\n\t\t\n<h4 id=\"gst_check_setup_sink_pad1\">\n\t<span><code>gst_check_setup_sink_pad</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\ngst_check_setup_sink_pad (<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                          <a title=\"GstStaticPadTemplate\" href=\"../../libgstreamer-1.0/c/gstpadtemplate.html#GstStaticPadTemplate\">GstStaticPadTemplate</a> * tmpl)</pre>\n\n<p>Does the same as <a href=\"gstcheck.html#gst_check_setup_sink_pad_by_name\">gst_check_setup_sink_pad_by_name</a> with the <emphasis> name </emphasis> parameter equal to \"src\".</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters11\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element to setup pad on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>tmpl:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pad template</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns2\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new pad that can be used to check the output of <em>element</em></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_setup_sink_pad_by_name\">\n\t\t\n<h4 id=\"gst_check_setup_sink_pad_by_name1\">\n\t<span><code>gst_check_setup_sink_pad_by_name</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\ngst_check_setup_sink_pad_by_name (<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                                  <a title=\"GstStaticPadTemplate\" href=\"../../libgstreamer-1.0/c/gstpadtemplate.html#GstStaticPadTemplate\">GstStaticPadTemplate</a> * tmpl,\n                                  const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * name)</pre>\n\n<p>Creates a new sink pad (based on the given <em>tmpl</em>) and links it to the given <em>element</em> src pad\n(the pad that matches the given <em>name</em>).\nYou can set event/chain/query functions on this pad to check the output of the <em>element</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters12\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element to setup pad on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>tmpl:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pad template</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Name of the <em>element</em> src pad that will be linked to the sink pad that will be setup</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns3\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new pad that can be used to check the output of <em>element</em></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"gst_check_setup_sink_pad_by_name_from_template\">\n\t\t\n<h4 id=\"gst_check_setup_sink_pad_by_name_from_template1\">\n\t<span><code>gst_check_setup_sink_pad_by_name_from_template</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\ngst_check_setup_sink_pad_by_name_from_template (<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                                                <a title=\"GstPadTemplate\" href=\"../../libgstreamer-1.0/c/gstpadtemplate.html#GstPadTemplate\">GstPadTemplate</a> * tmpl,\n                                                const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * name)</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters13\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element to setup pad on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>tmpl:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pad template</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>name</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns4\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new pad</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.4\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"gst_check_setup_sink_pad_from_template\">\n\t\t\n<h4 id=\"gst_check_setup_sink_pad_from_template1\">\n\t<span><code>gst_check_setup_sink_pad_from_template</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\ngst_check_setup_sink_pad_from_template (<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                                        <a title=\"GstPadTemplate\" href=\"../../libgstreamer-1.0/c/gstpadtemplate.html#GstPadTemplate\">GstPadTemplate</a> * tmpl)</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters14\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element to setup pad on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>tmpl:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pad template</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns5\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new pad</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.4\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_setup_src_pad\">\n\t\t\n<h4 id=\"gst_check_setup_src_pad1\">\n\t<span><code>gst_check_setup_src_pad</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\ngst_check_setup_src_pad (<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                         <a title=\"GstStaticPadTemplate\" href=\"../../libgstreamer-1.0/c/gstpadtemplate.html#GstStaticPadTemplate\">GstStaticPadTemplate</a> * tmpl)</pre>\n\n<p>Does the same as <a href=\"gstcheck.html#gst_check_setup_src_pad_by_name\">gst_check_setup_src_pad_by_name</a> with the <emphasis> name </emphasis> parameter equal to \"sink\".</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters15\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element to setup pad on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>tmpl:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pad template</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns6\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>A new pad that can be used to inject data on <em>element</em></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_check_setup_src_pad_by_name\">\n\t\t\n<h4 id=\"gst_check_setup_src_pad_by_name1\">\n\t<span><code>gst_check_setup_src_pad_by_name</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\ngst_check_setup_src_pad_by_name (<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                                 <a title=\"GstStaticPadTemplate\" href=\"../../libgstreamer-1.0/c/gstpadtemplate.html#GstStaticPadTemplate\">GstStaticPadTemplate</a> * tmpl,\n                                 const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * name)</pre>\n\n<p>Creates a new src pad (based on the given <em>tmpl</em>) and links it to the given <em>element</em> sink pad (the pad that matches the given <em>name</em>).\nBefore using the src pad to push data on <em>element</em> you need to call <a href=\"gstcheck.html#gst_check_setup_events\">gst_check_setup_events</a> on the created src pad.</p>\n<p>Example of how to push a buffer on <em>element</em>:</p>\n<pre><code class=\"language-[&lt;!--\"> static GstStaticPadTemplate sinktemplate = GST_STATIC_PAD_TEMPLATE (\"sink\",\n GST_PAD_SINK,\n GST_PAD_ALWAYS,\n GST_STATIC_CAPS (YOUR_CAPS_TEMPLATE_STRING)\n );\n static GstStaticPadTemplate srctemplate = GST_STATIC_PAD_TEMPLATE (\"src\",\n GST_PAD_SRC,\n GST_PAD_ALWAYS,\n GST_STATIC_CAPS (YOUR_CAPS_TEMPLATE_STRING)\n );\n\n GstElement * element = gst_check_setup_element (\"element\");\n GstPad * mysrcpad = gst_check_setup_src_pad (element, &amp;srctemplate);\n GstPad * mysinkpad = gst_check_setup_sink_pad (element, &amp;sinktemplate);\n\n gst_pad_set_active (mysrcpad, TRUE);\n gst_pad_set_active (mysinkpad, TRUE);\n fail_unless (gst_element_set_state (element, GST_STATE_PLAYING) == GST_STATE_CHANGE_SUCCESS, \"could not set to playing\");\n\n GstCaps * caps = gst_caps_from_string (YOUR_DESIRED_SINK_CAPS);\n gst_check_setup_events (mysrcpad, element, caps, GST_FORMAT_TIME);\n gst_caps_unref (caps);\n\n fail_unless (gst_pad_push (mysrcpad, gst_buffer_new_and_alloc(2)) == GST_FLOW_OK);\n</code></pre>\n<p>For very simple input/output test scenarios checkout <a href=\"gstcheck.html#gst_check_element_push_buffer_list\">gst_check_element_push_buffer_list</a> and <a href=\"gstcheck.html#gst_check_element_push_buffer\">gst_check_element_push_buffer</a>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters16\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element to setup src pad on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>tmpl:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pad template</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Name of the <em>element</em> sink pad that will be linked to the src pad that will be setup</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns7\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>A new pad that can be used to inject data on <em>element</em></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"gst_check_setup_src_pad_by_name_from_template\">\n\t\t\n<h4 id=\"gst_check_setup_src_pad_by_name_from_template1\">\n\t<span><code>gst_check_setup_src_pad_by_name_from_template</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\ngst_check_setup_src_pad_by_name_from_template (<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                                               <a title=\"GstPadTemplate\" href=\"../../libgstreamer-1.0/c/gstpadtemplate.html#GstPadTemplate\">GstPadTemplate</a> * tmpl,\n                                               const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * name)</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters17\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element to setup pad on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>tmpl:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pad template</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>name</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns8\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new pad</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.4\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"gst_check_setup_src_pad_from_template\">\n\t\t\n<h4 id=\"gst_check_setup_src_pad_from_template1\">\n\t<span><code>gst_check_setup_src_pad_from_template</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\ngst_check_setup_src_pad_from_template (<a title=\"GstElement\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElement\">GstElement</a> * element,\n                                       <a title=\"GstPadTemplate\" href=\"../../libgstreamer-1.0/c/gstpadtemplate.html#GstPadTemplate\">GstPadTemplate</a> * tmpl)</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters18\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element to setup pad on</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>tmpl:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pad template</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns9\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new pad</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstPad\" href=\"../../libgstreamer-1.0/c/gstpad.html#GstPad\">GstPad</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.4\n\t\t</p>\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Function_Macros\">Function Macros</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"fail_unless_message_error\">\n\t\t\n<h4 id=\"fail_unless_message_error1\">\n\t<span><code>fail_unless_message_error</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_message_error(msg, domain, code)            \\\ngst_check_message_error (msg, GST_MESSAGE_ERROR,                \\\n  GST_ ## domain ## _ERROR, GST_ ## domain ## _ERROR_ ## code)\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"assert_message_error\">\n\t\t\n<h4 id=\"assert_message_error1\">\n\t<span><code>assert_message_error</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_message_error(m, d, c) fail_unless_message_error(m, d, c)\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_START_TEST\">\n\t\t\n<h4 id=\"gst_start_test\">\n\t<span><code>GST_START_TEST</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_START_TEST(__testname) \\\nstatic void __testname (int G_GNUC_UNUSED __i__) \\\n{\\\n  GST_DEBUG (\"test start\"); \\\n  GST_DO_CHECK_TEST_ENVIRONMENT; \\\n  tcase_fn_start (\"\"# __testname, __FILE__, __LINE__);\n</pre>\n\n<p>wrapper for checks START_TEST</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters19\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>__testname:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>test function name</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"fail_unless_equals_int\">\n\t\t\n<h4 id=\"fail_unless_equals_int1\">\n\t<span><code>fail_unless_equals_int</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_equals_int(a, b)                                    \\\nG_STMT_START {                                                          \\\n  int first = a;                                                        \\\n  int second = b;                                                       \\\n  fail_unless(first == second,                                          \\\n    \"'\" #a \"' (%d) is not equal to '\" #b\"' (%d)\", first, second);       \\\n} G_STMT_END;\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to. This\nmacro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters20\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"assert_equals_int\">\n\t\t\n<h4 id=\"assert_equals_int1\">\n\t<span><code>assert_equals_int</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_equals_int(a, b) fail_unless_equals_int(a, b)\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to. This\nmacro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters21\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"fail_unless_equals_int_hex\">\n\t\t\n<h4 id=\"fail_unless_equals_int_hex1\">\n\t<span><code>fail_unless_equals_int_hex</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_equals_int_hex(a, b)                                \\\nG_STMT_START {\t\t\t\t\t\t\t\t\\\n  int first = a;\t\t\t\t\t\t\t\\\n  int second = b;\t\t\t\t\t\t\t\\\n  fail_unless(first == second,\t\t\t\t\t\t\\\n    \"'\" #a \"' (0x%08x) is not equal to '\" #b\"' (0x%08x)\", first, second);\\\n} G_STMT_END;\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to in\nhexadecimal format. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters22\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"assert_equals_int_hex\">\n\t\t\n<h4 id=\"assert_equals_int_hex1\">\n\t<span><code>assert_equals_int_hex</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_equals_int_hex(a, b) fail_unless_equals_int_hex(a, b)\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to in\nhexadecimal format. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters23\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"fail_unless_equals_int64\">\n\t\t\n<h4 id=\"fail_unless_equals_int641\">\n\t<span><code>fail_unless_equals_int64</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_equals_int64(a, b)                                  \\\nG_STMT_START {                                                          \\\n  gint64 first = a;                                                     \\\n  gint64 second = b;                                                    \\\n  fail_unless(first == second,                                          \\\n    \"'\" #a \"' (%\" G_GINT64_FORMAT\") is not equal to '\" #b\"' (%\"         \\\n    G_GINT64_FORMAT\")\", first, second);                                 \\\n} G_STMT_END;\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to. This\nmacro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters24\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"assert_equals_int64\">\n\t\t\n<h4 id=\"assert_equals_int641\">\n\t<span><code>assert_equals_int64</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_equals_int64(a, b) fail_unless_equals_int64(a, b)\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to. This\nmacro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters25\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"fail_unless_equals_int64_hex\">\n\t\t\n<h4 id=\"fail_unless_equals_int64_hex1\">\n\t<span><code>fail_unless_equals_int64_hex</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_equals_int64_hex(a, b)                              \\\nG_STMT_START {\t\t\t\t\t\t\t\t\\\n  gint64 first = a;\t\t\t\t\t\t\t\\\n  gint64 second = b;\t\t\t\t\t\t\t\\\n  fail_unless(first == second,\t\t\t\t\t\t\\\n    \"'\" #a \"' (0x%016x) is not equal to '\" #b\"' (0x%016x)\", first, second);\\\n} G_STMT_END;\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to in\nhexadecimal format. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters26\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"assert_equals_int64_hex\">\n\t\t\n<h4 id=\"assert_equals_int64_hex1\">\n\t<span><code>assert_equals_int64_hex</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_equals_int64_hex(a,b) fail_unless_equals_int64_hex(a,b)\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to in\nhexadecimal format. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters27\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"fail_unless_equals_uint64\">\n\t\t\n<h4 id=\"fail_unless_equals_uint641\">\n\t<span><code>fail_unless_equals_uint64</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_equals_uint64(a, b)                                 \\\nG_STMT_START {                                                          \\\n  guint64 first = a;                                                    \\\n  guint64 second = b;                                                   \\\n  fail_unless(first == second,                                          \\\n    \"'\" #a \"' (%\" G_GUINT64_FORMAT \") is not equal to '\" #b\"' (%\"       \\\n    G_GUINT64_FORMAT \")\", first, second);                               \\\n} G_STMT_END;\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to. This\nmacro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters28\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"assert_equals_uint64\">\n\t\t\n<h4 id=\"assert_equals_uint641\">\n\t<span><code>assert_equals_uint64</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_equals_uint64(a, b) fail_unless_equals_uint64(a, b)\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to. This\nmacro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters29\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"fail_unless_equals_uint64_hex\">\n\t\t\n<h4 id=\"fail_unless_equals_uint64_hex1\">\n\t<span><code>fail_unless_equals_uint64_hex</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_equals_uint64_hex(a, b)                             \\\nG_STMT_START {\t\t\t\t\t\t\t\t\\\n  guint64 first = a;\t\t\t\t\t\t\t\\\n  guint64 second = b;\t\t\t\t\t\t\t\\\n  fail_unless(first == second,\t\t\t\t\t\t\\\n    \"'\" #a \"' (0x%016x) is not equal to '\" #b\"' (0x%016x)\", first, second);\\\n} G_STMT_END;\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to in\nhexadecimal format. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters30\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"assert_equals_uint64_hex\">\n\t\t\n<h4 id=\"assert_equals_uint64_hex1\">\n\t<span><code>assert_equals_uint64_hex</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_equals_uint64_hex(a,b) fail_unless_equals_uint64_hex(a,b)\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this is not the\ncase, printing both expressions and the values they evaluated to in\nhexadecimal format. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters31\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"fail_unless_equals_string\">\n\t\t\n<h4 id=\"fail_unless_equals_string1\">\n\t<span><code>fail_unless_equals_string</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_equals_string(a, b)                             \\\nG_STMT_START {                                                      \\\n  const gchar * first = a;                                          \\\n  const gchar * second = b;                                         \\\n  fail_unless(g_strcmp0 (first, second) == 0,                          \\\n    \"'\" #a \"' (%s) is not equal to '\" #b\"' (%s)\", first, second);   \\\n} G_STMT_END;\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal (as per strcmp) and aborts if\nthis is not the case, printing both expressions and the values they\nevaluated to. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters32\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a string literal or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a string literal or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"assert_equals_string\">\n\t\t\n<h4 id=\"assert_equals_string1\">\n\t<span><code>assert_equals_string</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_equals_string(a, b) fail_unless_equals_string(a, b)\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal (as per strcmp) and aborts if\nthis is not the case, printing both expressions and the values they\nevaluated to. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters33\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a string literal or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a string literal or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"fail_unless_equals_float\">\n\t\t\n<h4 id=\"fail_unless_equals_float1\">\n\t<span><code>fail_unless_equals_float</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_equals_float(a, b)                            \\\nG_STMT_START {                                                    \\\n  double first = a;                                               \\\n  double second = b;                                              \\\n  /* This will only work for 'normal' values and values around 0, \\\n   * which should be good enough for our purposes here */         \\\n  fail_unless(fabs (first - second) &lt; 0.0000001,                  \\\n    \"'\" #a \"' (%g) is not equal to '\" #b \"' (%g)\", first, second);\\\n} G_STMT_END;\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are (almost) equal and aborts if this\nis not the case, printing both expressions and the values they evaluated\nto. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters34\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> or <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gfloat\">gfloat</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> or <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gfloat\">gfloat</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"assert_equals_float\">\n\t\t\n<h4 id=\"assert_equals_float1\">\n\t<span><code>assert_equals_float</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_equals_float(a, b) fail_unless_equals_float(a, b)\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are (almost) equal and aborts if this\nis not the case, printing both expressions and the values they evaluated\nto. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters35\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> or <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gfloat\">gfloat</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> or <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gfloat\">gfloat</a> value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"fail_unless_equals_pointer\">\n\t\t\n<h4 id=\"fail_unless_equals_pointer1\">\n\t<span><code>fail_unless_equals_pointer</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define fail_unless_equals_pointer(a, b)                          \\\nG_STMT_START {                                                    \\\n  gpointer first = a;                                             \\\n  gpointer second = b;                                            \\\n  fail_unless(first == second,                                    \\\n    \"'\" #a \"' (%p) is not equal to '\" #b \"' (%p)\", first, second);\\\n} G_STMT_END;\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this\nis not the case, printing both expressions and the values they\nevaluated to. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters36\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"assert_equals_pointer\">\n\t\t\n<h4 id=\"assert_equals_pointer1\">\n\t<span><code>assert_equals_pointer</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define assert_equals_pointer(a, b) fail_unless_equals_pointer(a, b)\n</pre>\n\n<p>This macro checks that <em>a</em> and <em>b</em> are equal and aborts if this\nis not the case, printing both expressions and the values they\nevaluated to. This macro is for use in unit tests.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters37\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer value or expression</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"MAIN_START_THREADS\">\n\t\t\n<h4 id=\"main_start_threads\">\n\t<span><code>MAIN_START_THREADS</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define MAIN_START_THREADS(count, function, data)               \\\nMAIN_INIT();                                                    \\\nMAIN_START_THREAD_FUNCTIONS(count, function, data);             \\\nMAIN_SYNCHRONIZE();\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"MAIN_INIT\">\n\t\t\n<h4 id=\"main_init\">\n\t<span><code>MAIN_INIT</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define MAIN_INIT()                     \\\nG_STMT_START {                          \\\n  g_mutex_init (&amp;mutex);                \\\n  g_cond_init (&amp;start_cond);            \\\n  g_cond_init (&amp;sync_cond);             \\\n  _gst_check_threads_running = TRUE;    \\\n} G_STMT_END;\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"MAIN_START_THREAD_FUNCTIONS\">\n\t\t\n<h4 id=\"main_start_thread_functions\">\n\t<span><code>MAIN_START_THREAD_FUNCTIONS</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define MAIN_START_THREAD_FUNCTIONS(count, function, data)      \\\nG_STMT_START {                                                  \\\n  int i;                                                        \\\n  for (i = 0; i &lt; count; ++i) {                                 \\\n    MAIN_START_THREAD_FUNCTION (i, function, data);             \\\n  }                                                             \\\n} G_STMT_END;\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"MAIN_START_THREAD_FUNCTION\">\n\t\t\n<h4 id=\"main_start_thread_function\">\n\t<span><code>MAIN_START_THREAD_FUNCTION</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define MAIN_START_THREAD_FUNCTION(i, function, data)           \\\nG_STMT_START {                                                  \\\n    GThread *thread = NULL;                                     \\\n    GST_DEBUG (\"MAIN: creating thread %d\", i);                  \\\n    g_mutex_lock (&amp;mutex);                                      \\\n    thread = g_thread_try_new (\"gst-check\",                     \\\n        (GThreadFunc) function, data, NULL);                    \\\n    /* wait for thread to signal us that it's ready */          \\\n    GST_DEBUG (\"MAIN: waiting for thread %d\", i);               \\\n    g_cond_wait (&amp;start_cond, &amp;mutex);                          \\\n    g_mutex_unlock (&amp;mutex);                                    \\\n                                                                \\\n    thread_list = g_list_append (thread_list, thread);          \\\n} G_STMT_END;\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"MAIN_SYNCHRONIZE\">\n\t\t\n<h4 id=\"main_synchronize\">\n\t<span><code>MAIN_SYNCHRONIZE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define MAIN_SYNCHRONIZE()              \\\nG_STMT_START {                          \\\n  GST_DEBUG (\"MAIN: synchronizing\");    \\\n  g_cond_broadcast (&amp;sync_cond);        \\\n  GST_DEBUG (\"MAIN: synchronized\");     \\\n} G_STMT_END;\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"MAIN_STOP_THREADS\">\n\t\t\n<h4 id=\"main_stop_threads\">\n\t<span><code>MAIN_STOP_THREADS</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define MAIN_STOP_THREADS()                                     \\\nG_STMT_START {                                                  \\\n  _gst_check_threads_running = FALSE;                           \\\n                                                                \\\n  /* join all threads */                                        \\\n  GST_DEBUG (\"MAIN: joining\");                                  \\\n  g_list_foreach (thread_list, (GFunc) g_thread_join, NULL);    \\\n  g_list_free (thread_list);                                    \\\n  thread_list = NULL;                                           \\\n  g_mutex_clear (&amp;mutex);                                       \\\n  g_cond_clear (&amp;start_cond);                                   \\\n  g_cond_clear (&amp;sync_cond);                                    \\\n  GST_DEBUG (\"MAIN: joined\");                                   \\\n} G_STMT_END;\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"THREAD_START\">\n\t\t\n<h4 id=\"thread_start\">\n\t<span><code>THREAD_START</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define THREAD_START()                                          \\\nTHREAD_STARTED();                                               \\\nTHREAD_SYNCHRONIZE();\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"THREAD_STARTED\">\n\t\t\n<h4 id=\"thread_started\">\n\t<span><code>THREAD_STARTED</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define THREAD_STARTED()                                        \\\nG_STMT_START {                                                  \\\n  /* signal main thread that we started */                      \\\n  GST_DEBUG (\"THREAD %p: started\", g_thread_self ());           \\\n  g_mutex_lock (&amp;mutex);                                        \\\n  g_cond_signal (&amp;start_cond);                                  \\\n} G_STMT_END;\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"THREAD_SYNCHRONIZE\">\n\t\t\n<h4 id=\"thread_synchronize\">\n\t<span><code>THREAD_SYNCHRONIZE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define THREAD_SYNCHRONIZE()                                    \\\nG_STMT_START {                                                  \\\n  /* synchronize everyone */                                    \\\n  GST_DEBUG (\"THREAD %p: syncing\", g_thread_self ());           \\\n  fail_if (g_mutex_trylock (&amp;mutex),                            \\\n      \"bug in unit test, mutex should be locked at this point\");\\\n  g_cond_wait (&amp;sync_cond, &amp;mutex);                             \\\n  GST_DEBUG (\"THREAD %p: synced\", g_thread_self ());            \\\n  g_mutex_unlock (&amp;mutex);                                      \\\n} G_STMT_END;\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"THREAD_SWITCH\">\n\t\t\n<h4 id=\"thread_switch\">\n\t<span><code>THREAD_SWITCH</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define THREAD_SWITCH()                                         \\\nG_STMT_START {                                                  \\\n  /* a minimal sleep is a context switch */                     \\\n  g_usleep (1);                                                 \\\n} G_STMT_END;\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"THREAD_TEST_RUNNING\">\n\t\t\n<h4 id=\"thread_test_running\">\n\t<span><code>THREAD_TEST_RUNNING</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define THREAD_TEST_RUNNING()   (!!_gst_check_threads_running)\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ASSERT_CRITICAL\">\n\t\t\n<h4 id=\"assert_critical\">\n\t<span><code>ASSERT_CRITICAL</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define ASSERT_CRITICAL(code)                                   \\\nG_STMT_START {                                                  \\\n  _gst_check_expecting_log = TRUE;                              \\\n  _gst_check_raised_critical = FALSE;                           \\\n  code;                                                         \\\n  if (!_gst_check_raised_critical)                              \\\n    _ck_assert_failed (__FILE__, __LINE__,                      \\\n        \"Expected g_critical, got nothing\", NULL);              \\\n  _gst_check_expecting_log = FALSE;                             \\\n} G_STMT_END\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ASSERT_WARNING\">\n\t\t\n<h4 id=\"assert_warning\">\n\t<span><code>ASSERT_WARNING</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define ASSERT_WARNING(code)                                    \\\nG_STMT_START {                                                  \\\n  _gst_check_expecting_log = TRUE;                              \\\n  _gst_check_raised_warning = FALSE;                            \\\n  code;                                                         \\\n  if (!_gst_check_raised_warning)                               \\\n    _ck_assert_failed (__FILE__, __LINE__,                      \\\n        \"Expected g_warning, got nothing\", NULL);               \\\n  _gst_check_expecting_log = FALSE;                             \\\n} G_STMT_END\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ASSERT_OBJECT_REFCOUNT\">\n\t\t\n<h4 id=\"assert_object_refcount\">\n\t<span><code>ASSERT_OBJECT_REFCOUNT</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define ASSERT_OBJECT_REFCOUNT(object, name, value)             \\\nG_STMT_START {                                                  \\\n  int rc;                                                       \\\n  rc = GST_OBJECT_REFCOUNT_VALUE (object);                      \\\n  fail_unless (rc == value,                                     \\\n      \"%s (%p) refcount is %d instead of %d\",                   \\\n      name, object, rc, value);                                 \\\n} G_STMT_END\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ASSERT_OBJECT_REFCOUNT_BETWEEN\">\n\t\t\n<h4 id=\"assert_object_refcount_between\">\n\t<span><code>ASSERT_OBJECT_REFCOUNT_BETWEEN</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define ASSERT_OBJECT_REFCOUNT_BETWEEN(object, name, lower, upper)      \\\nG_STMT_START {                                                          \\\n  int rc = GST_OBJECT_REFCOUNT_VALUE (object);                          \\\n  int lo = lower;                                                       \\\n  int hi = upper;                                                       \\\n                                                                        \\\n  fail_unless (rc &gt;= lo,                                                \\\n      \"%s (%p) refcount %d is smaller than %d\",                         \\\n      name, object, rc, lo);                                            \\\n  fail_unless (rc &lt;= hi,                                                \\\n      \"%s (%p) refcount %d is bigger than %d\",                          \\\n      name, object, rc, hi);                                            \\\n} G_STMT_END\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ASSERT_CAPS_REFCOUNT\">\n\t\t\n<h4 id=\"assert_caps_refcount\">\n\t<span><code>ASSERT_CAPS_REFCOUNT</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define ASSERT_CAPS_REFCOUNT(caps, name, value)                 \\\n        ASSERT_MINI_OBJECT_REFCOUNT(caps, name, value)\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ASSERT_BUFFER_REFCOUNT\">\n\t\t\n<h4 id=\"assert_buffer_refcount\">\n\t<span><code>ASSERT_BUFFER_REFCOUNT</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define ASSERT_BUFFER_REFCOUNT(buffer, name, value)             \\\n        ASSERT_MINI_OBJECT_REFCOUNT(buffer, name, value)\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ASSERT_MINI_OBJECT_REFCOUNT\">\n\t\t\n<h4 id=\"assert_mini_object_refcount\">\n\t<span><code>ASSERT_MINI_OBJECT_REFCOUNT</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define ASSERT_MINI_OBJECT_REFCOUNT(miniobj, name, value)       \\\nG_STMT_START {                                                  \\\n  int rc;                                                       \\\n  rc = GST_MINI_OBJECT_REFCOUNT_VALUE (miniobj);                \\\n  fail_unless (rc == value,                                     \\\n               name \" (%p) refcount is %d instead of %d\", miniobj, rc, value); \\\n} G_STMT_END\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"ASSERT_SET_STATE\">\n\t\t\n<h4 id=\"assert_set_state\">\n\t<span><code>ASSERT_SET_STATE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define ASSERT_SET_STATE(element, state, ret)                   \\\nfail_unless (gst_element_set_state (GST_ELEMENT(element),       \\\n  state) == ret,                                                \\\n  \"could not change state to \" #state);\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_CHECK_MAIN\">\n\t\t\n<h4 id=\"gst_check_main\">\n\t<span><code>GST_CHECK_MAIN</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_CHECK_MAIN(name)                                    \\\nint main (int argc, char **argv)                                \\\n{                                                               \\\n  Suite *s;                                                     \\\n  gst_check_init (&amp;argc, &amp;argv);                                \\\n  s = name ## _suite ();                                        \\\n  return gst_check_run_suite (s, # name, __FILE__);             \\\n}\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"tcase_skip_broken_test\">\n\t\t\n<h4 id=\"tcase_skip_broken_test1\">\n\t<span><code>tcase_skip_broken_test</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define tcase_skip_broken_test(chain,test_func) \\\nG_STMT_START {                                                  \\\n  const char *env = g_getenv (\"GST_CHECKS\");                    \\\n                                                                \\\n  if (env != NULL &amp;&amp; g_pattern_match_simple (env, G_STRINGIFY (test_func))) {   \\\n    tcase_add_test(chain,test_func);                            \\\n  } else {                                                      \\\n    g_printerr (\"FIXME: skipping test %s because it's broken\\n\", G_STRINGIFY (test_func)); \\\n  } \\\n} G_STMT_END\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"tcase_skip_broken_loop_test\">\n\t\t\n<h4 id=\"tcase_skip_broken_loop_test1\">\n\t<span><code>tcase_skip_broken_loop_test</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define tcase_skip_broken_loop_test(chain,test_func,a,b)        \\\n  tcase_skip_broken_test (chain, test_func)\n</pre>\n\n\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Constants\">Constants</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_CAT_DEFAULT\">\n\t\t\n<h4 class=\"constant\" id=\"gst_cat_default\">\n\tGST_CAT_DEFAULT\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_CAT_DEFAULT check_debug\n</pre>\n\n<p>Default gstreamer core debug log category. Please define your own.</p>\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_DO_CHECK_TEST_ENVIRONMENT\">\n\t\t\n<h4 class=\"constant\" id=\"gst_do_check_test_environment\">\n\tGST_DO_CHECK_TEST_ENVIRONMENT\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_DO_CHECK_TEST_ENVIRONMENT /* nothing to check */\n</pre>\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_END_TEST\">\n\t\t\n<h4 class=\"constant\" id=\"gst_end_test\">\n\tGST_END_TEST\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_END_TEST GST_LOG (\"cleaning up tasks\"); \\\n                     gst_task_cleanup_all (); \\\n                     END_TEST\n</pre>\n\n<p>wrapper for checks END_TEST</p>\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_tcase_add_test\">\n\t\t\n<h4 class=\"constant\" id=\"_tcase_add_test1\">\n\t_tcase_add_test\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _tcase_add_test __gst_tcase_add_test\n</pre>\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Callbacks\">Callbacks</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.12;\" id=\"GstCheckLogFilterFunc\">\n\t\t\n<h4 id=\"gstchecklogfilterfunc\">\n\t<span><code>GstCheckLogFilterFunc</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n(*GstCheckLogFilterFunc) (const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * log_domain,\n                          <a title=\"GLogLevelFlags\" href=\"https://developer.gnome.org/glib/unstable/glib-Message-Logging.html#GLogLevelFlags\">GLogLevelFlags</a> log_level,\n                          const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * message,\n                          <a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> user_data)</pre>\n\n<p>A function that is called for messages matching the filter added by\n<em>gst_check_add_log_filter</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters38\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>log_domain:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the log domain of the message</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>log_level:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the log level of the message</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the message that has occured</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>user data</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns10\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if message should be discarded by GstCheck.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.12\n\t\t</p>\n\n</div>\n\n\n\n    </div>\n\n\n        "});