fragment_downloaded_cb({"url": "libgstcheck-1.0/c/gstharness.html#page-description", "fragment": "A simple buffer in buffer out example \n\nAnother main feature of the GstHarness is its integration with the GstTestClock. Operating the GstTestClock can be very challenging but GstHarness simplifies some of the most desired actions a lot like wanting to manually advance the clock while at the same time releasing a GstClockID that is waiting with functions like gst_harness_crank_single_clock_wait. \nGstHarness also supports sub harnesses as a way of generating and validating data. A sub harness is another GstHarness that is managed by the parent harness and can either be created by using the standard gst_harness_new type functions directly on the GstHarness src_harness or using the much more convenient gst_harness_add_src or gst_harness_add_sink_parse. If you have a decoder element you want to test like vp8dec it can be very useful to add a src harness with both a src element videotestsrc and an encoder vp8enc to feed the decoder data with different configurations by simply doing \n\nand then feeding it data with \n\n"});