fragment_downloaded_cb({"url": "libgstcheck-1.0/gstbufferstraw.html#gst_buffer_straw_get_buffer", "fragment": "prototype.buffer_straw_get_buffer \ngst_buffer_straw_get_buffer \ngst_buffer_straw_get_buffer \nGet one buffer from pad. Implemented via buffer probes. This function will block until the pipeline passes a buffer over pad so for robust behavior in unit tests you need to use check s timeout to fail out in the case that a buffer never arrives. \nYou must have previously called prototype.buffer_straw_start_pipeline on pipeline and pad. \nParameters \nthe pipeline previously started via prototype.buffer_straw_start_pipeline \nthe pad previously passed to prototype.buffer_straw_start_pipeline \nthe captured Gst.Buffer. \nGet one buffer from pad. Implemented via buffer probes. This function will block until the pipeline passes a buffer over pad so for robust behavior in unit tests you need to use check s timeout to fail out in the case that a buffer never arrives. \nYou must have previously called gst_buffer_straw_start_pipeline on pipeline and pad. \nParameters \nthe pipeline previously started via gst_buffer_straw_start_pipeline \nthe pad previously passed to gst_buffer_straw_start_pipeline \nthe captured GstBuffer. \nGet one buffer from pad. Implemented via buffer probes. This function will block until the pipeline passes a buffer over pad so for robust behavior in unit tests you need to use check s timeout to fail out in the case that a buffer never arrives. \nYou must have previously called gst_buffer_straw_start_pipeline on pipeline and pad. \nParameters \nthe pipeline previously started via gst_buffer_straw_start_pipeline \nthe pad previously passed to gst_buffer_straw_start_pipeline \nthe captured GstBuffer. \n"});