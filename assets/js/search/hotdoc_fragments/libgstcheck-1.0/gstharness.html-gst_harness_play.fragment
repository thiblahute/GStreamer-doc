fragment_downloaded_cb({"url": "libgstcheck-1.0/gstharness.html#gst_harness_play", "fragment": "GstCheck.prototype.play \nGstCheck.Harness.play \ngst_harness_play \nThis will set the harnessed Gst.Element to Gst.State.PLAYING. Gst.Element without a sink GstPad and with the Gst.ElementFlags.SOURCE flag set is concidered a src Gst.Element Non src Gst.Element like sinks and filters are automatically set to playing by the GstCheck.Harness but src Gst.Element are not to avoid them starting to produce buffers. Hence for src Gst.Element you must call GstCheck.prototype.play explicitly. \nMT safe. \nParameters \na GstCheck.Harness \nSince \nThis will set the harnessed Gst.Element to Gst.State.PLAYING. Gst.Element without a sink GstPad and with the Gst.ElementFlags.SOURCE flag set is concidered a src Gst.Element Non src Gst.Element like sinks and filters are automatically set to playing by the GstCheck.Harness but src Gst.Element are not to avoid them starting to produce buffers. Hence for src Gst.Element you must call GstCheck.Harness.play explicitly. \nMT safe. \nParameters \na GstCheck.Harness \nSince \nThis will set the harnessed GstElement to GST_STATE_PLAYING. GstElement without a sink GstPad and with the GST_ELEMENT_FLAG_SOURCE flag set is concidered a src GstElement Non src GstElement like sinks and filters are automatically set to playing by the GstHarness but src GstElement are not to avoid them starting to produce buffers. Hence for src GstElement you must call gst_harness_play explicitly. \nMT safe. \nParameters \na GstHarness \nSince \n"});