fragment_downloaded_cb({"url": "tools/gst-launch.html#environment-variables", "fragment": "Environment Variables \nGST _DEBUG Comma separated list of debug categories and levels e.g. GST_DEBUG totem typefind \nGST _DEBUG _NO _COLOR When this environment variable is set coloured debug output is disabled. \nGST _DEBUG _DUMP _DOT _DIR When set to a filesystem path store dot files of pipeline graphs there. \nGST _REGISTRY Path of the plugin registry file. Default is gstreamer registry CPU.xml where CPU is the machine cpu type GStreamer was compiled for e.g. i486 i686 x86 ppc etc. check the output of uname i and uname m for details \nGST _REGISTRY _UPDATE Set to no to force GStreamer to assume that no plugins have changed been added or been removed. This will make GStreamer skip the initial check whether a rebuild of the registry cache is required or not. This may be useful in embedded environments where the installed plugins never change. Do not use this option in any other setup. \nGST _PLUGIN _PATH Specifies a list of directories to scan for additional plugins. These take precedence over the system plugins. \nGST _PLUGIN _SYSTEM _PATH Specifies a list of plugins that are always loaded by default. If not set this defaults to the system installed path and the plugins installed in the user s home directory \nOIL _CPU _FLAGS Useful liboil environment variable. Set OIL_CPU_FLAGS when valgrind or other debugging tools trip over liboil s CPU detection quite a few important GStreamer plugins like videotestsrc audioconvert or audioresample use liboil \nG _DEBUG Useful GLib environment variable. Set G_DEBUG fatal_warnings to make GStreamer programs abort when a critical warning such as an assertion failure occurs. This is useful if you want to find out which part of the code caused that warning to be triggered and under what circumstances. Simply set G_DEBUG as mentioned above and run the program in gdb or let it core dump Then get a stack trace in the usual way \n"});