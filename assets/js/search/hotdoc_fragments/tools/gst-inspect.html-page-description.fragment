fragment_downloaded_cb({"url": "tools/gst-inspect.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gst-inspect.md\">\n<h1 id=\"gstinspect10\">gst-inspect-1.0</h1>\n<blockquote>\n<p><img src=\"images/icons/emoticons/information.png\" alt=\"information\" id=\"information\"> This is the Linux man page for\nthe\u00a0<code>gst-inspect-1.0</code>\u00a0tool. As such, it is very Linux-centric\nregarding path specification and plugin names. Please be patient while\nit is rewritten to be more generic.</p>\n</blockquote>\n<h2 id=\"name\">Name</h2>\n<p>gst-inspect-1.0 - print info about a GStreamer plugin or element</p>\n<h2 id=\"synopsis\">Synopsis</h2>\n<p><strong>gst-inspect-1.0 [OPTION...] [PLUGIN|ELEMENT]</strong></p>\n<h2 id=\"description\">Description</h2>\n<p><em>gst-inspect-1.0</em>\u00a0is a tool that prints out information on\navailable\u00a0<em>GStreamer</em>\u00a0plugins, information about a particular plugin, or\ninformation about a particular element. When executed with no PLUGIN or\nELEMENT argument,\u00a0<em>gst-inspect-1.0</em>\u00a0will print a list of all plugins and\nelements together with a sumary. When executed with a PLUGIN or ELEMENT\nargument,\u00a0<em>gst-inspect-1.0</em>\u00a0will print information about that plug-in or\nelement.</p>\n<h2 id=\"options\">Options</h2>\n<p><em>gst-inspect-1.0</em>\u00a0accepts the following arguments and options:</p>\n<p><strong>PLUGIN</strong></p>\n<p>Name of a plugin. This is a file name\nlike\u00a0<code>%GSTREAMER_ROOT_X86%\\lib\\gstreamer-1.0\\libgstaudiotestsrc.dll</code>\nfor example.</p>\n<p><strong>ELEMENT</strong></p>\n<p>Name of an element. This is the name of an element, like\n<code>audiotestsrc</code>\u00a0for example</p>\n<p><strong>--help</strong></p>\n<p>Print help synopsis and available FLAGS</p>\n<p><strong>--gst-info-mask=FLAGS</strong></p>\n<p><em>GStreamer</em>\u00a0info flags to set (list with --help)</p>\n<p>\u00a0<strong>-a, --print-all</strong></p>\n<p>Print all plugins and elements</p>\n<p>\u00a0<strong>--print-plugin-auto-install-info</strong></p>\n<p>Print a machine-parsable list of features the specified plugin provides.\nUseful in connection with external automatic plugin installation\nmechanisms.</p>\n<p>\u00a0<strong>--gst-debug-mask=FLAGS</strong></p>\n<p><em>GStreamer</em>\u00a0debugging flags to set (list with --help)</p>\n<p>\u00a0<strong>--gst-mask=FLAGS</strong></p>\n<p><em>GStreamer</em>\u00a0info and debugging flags to set (list with --help)</p>\n<p>\u00a0<strong>--gst-plugin-spew</strong></p>\n<p><em>GStreamer</em>\u00a0info flags to set Enable printout of errors while\nloading\u00a0<em>GStreamer</em>\u00a0plugins</p>\n<p>\u00a0<strong>--gst-plugin-path=PATH</strong></p>\n<p>Add directories separated with ':' to the plugin search path</p>\n<h2 id=\"example\">Example</h2>\n<pre><code>gst-inspect-1.0 audiotestsrc\n</code></pre>\n<p>should produce:</p>\n<pre><code>Factory Details:\n  Rank                     none (0)\n  Long-name                Audio test source\n  Klass                    Source/Audio\n  Description              Creates audio test signals of given frequency and volume\n  Author                   Stefan Kost &lt;ensonic@users.sf.net&gt;\n\nPlugin Details:\n  Name                     audiotestsrc\n  Description              Creates audio test signals of given frequency and volume\n  Filename                 /usr/lib/gstreamer-1.0/libgstaudiotestsrc.so\n  Version                  1.8.1\n  License                  LGPL\n  Source module            gst-plugins-base\n  Source release date      2016-04-20\n  Binary package           GStreamer Base Plugins (Arch Linux)\n  Origin URL               http://www.archlinux.org/\n\nGObject\n +----GInitiallyUnowned\n       +----GstObject\n             +----GstElement\n                   +----GstBaseSrc\n                         +----GstAudioTestSrc\n\nPad Templates:\n  SRC template: 'src'\n    Availability: Always\n    Capabilities:\n      audio/x-raw\n                 format: { S16LE, S16BE, U16LE, U16BE, S24_32LE, S24_32BE, U24_32LE, U24_32BE, S32LE, S32BE, U32LE, U32BE, S24LE, S24BE, U24LE, U24BE, S20LE, S20BE, U20LE, U20BE, S18LE, S18BE, U18LE, U18BE, F32LE, F32BE, F64LE, F64BE, S8, U8 }\n                 layout: interleaved\n                   rate: [ 1, 2147483647 ]\n               channels: [ 1, 2147483647 ]\n\nElement Flags:\n  no flags set\n\nElement Implementation:\n  Has change_state() function: gst_base_src_change_state\n\nElement has no clocking capabilities.\nElement has no URI handling capabilities.\n\nPads:\n  SRC: 'src'\n    Pad Template: 'src'\n\nElement Properties:\n  name                : The name of the object\n                        flags: readable, writable\n                        String. Default: \"audiotestsrc0\"\n  parent              : The parent of the object\n                        flags: readable, writable\n                        Object of type \"GstObject\"\n  blocksize           : Size in bytes to read per buffer (-1 = default)\n                        flags: readable, writable\n                        Unsigned Integer. Range: 0 - 4294967295 Default: 4294967295\n  num-buffers         : Number of buffers to output before sending EOS (-1 = unlimited)\n                        flags: readable, writable\n                        Integer. Range: -1 - 2147483647 Default: -1\n  typefind            : Run typefind before negotiating\n                        flags: readable, writable\n                        Boolean. Default: false\n  do-timestamp        : Apply current stream time to buffers\n                        flags: readable, writable\n                        Boolean. Default: false\n  samplesperbuffer    : Number of samples in each outgoing buffer\n                        flags: readable, writable\n                        Integer. Range: 1 - 2147483647 Default: 1024\n  wave                : Oscillator waveform\n                        flags: readable, writable, controllable\n                        Enum \"GstAudioTestSrcWave\" Default: 0, \"sine\"\n                           (0): sine             - Sine\n                           (1): square           - Square\n                           (2): saw              - Saw\n                           (3): triangle         - Triangle\n                           (4): silence          - Silence\n                           (5): white-noise      - White uniform noise\n                           (6): pink-noise       - Pink noise\n                           (7): sine-table       - Sine table\n                           (8): ticks            - Periodic Ticks\n                           (9): gaussian-noise   - White Gaussian noise\n                           (10): red-noise        - Red (brownian) noise\n                           (11): blue-noise       - Blue noise\n                           (12): violet-noise     - Violet noise\n  freq                : Frequency of test signal. The sample rate needs to be at least 4 times higher.\n                        flags: readable, writable, controllable\n                        Double. Range:               0 -    5.368709e+08 Default:             440\n  volume              : Volume of test signal\n                        flags: readable, writable, controllable\n                        Double. Range:               0 -               1 Default:             0.8\n  is-live             : Whether to act as a live source\n                        flags: readable, writable\n                        Boolean. Default: false\n  timestamp-offset    : An offset added to timestamps set on buffers (in ns)\n                        flags: readable, writable\n                        Integer64. Range: -9223372036854775808 - 9223372036854775807 Default: 0\n  can-activate-push   : Can activate in push mode\n                        flags: readable, writable\n                        Boolean. Default: true\n  can-activate-pull   : Can activate in pull mode\n                        flags: readable, writable\n                        Boolean. Default: false\n</code></pre>\n\n</div>\n\n\n        "});