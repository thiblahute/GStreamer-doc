fragment_downloaded_cb({"url": "tools/gst-launch.html#pipeline-examples", "fragment": "PIPELINE EXAMPLES \nThe examples below assume that you have the correct plug ins available. In general pulsesink can be substituted with another audio output plug in such as alsasink or osxaudiosink Likewise xvimagesink can be substituted with ximagesink glimagesink or osxvideosink Keep in mind though that different sinks might accept different formats and even the same sink might accept different formats on different machines so you might need to add converter elements like audioconvert and audioresample for audio or videoconvert for video in front of the sink to make things work. \nAudio playback \nPlay the mp3 music file music.mp3 using a libmpg123 based plug in and output to an Pulseaudio device gst launch filesrc location music.mp3 mpegaudioparse mpg123audiodec audioconvert audioresample pulsesink \nPlay an Ogg Vorbis format file gst launch filesrc location music.ogg oggdemux vorbisdec audioconvert audioresample pulsesink \nPlay an mp3 file or an http stream using GIO gst launch giosrc location music.mp3 mpegaudioparse mpg123audiodec audioconvert pulsesink gst launch giosrc location http domain.com music.mp3 mpegaudioparse mpg123audiodec audioconvert audioresample pulsesink \nUse GIO to play an mp3 file located on an SMB server gst launch giosrc location smb computer music.mp3 mpegaudioparse mpg123audiodec audioconvert audioresample pulsesink \nFormat conversion \nConvert an mp3 music file to an Ogg Vorbis file gst launch filesrc location music.mp3 mpegaudioparse mpg123audiodec audioconvert vorbisenc oggmux filesink location music.ogg \nConvert to the FLAC format gst launch filesrc location music.mp3 mpegaudioparse mpg123audiodec audioconvert flacenc filesink location test.flac \nOther \nPlays a WAV file that contains raw audio data PCM gst launch filesrc location music.wav wavparse audioconvert audioresample pulsesink \nConvert a WAV file containing raw audio data into an Ogg Vorbis or mp3 file gst launch filesrc location music.wav wavparse audioconvert vorbisenc oggmux filesink location music.ogg gst launch filesrc location music.wav wavparse audioconvert lamemp3enc filesink location music.mp3 \nRips all tracks from compact disc and convert them into a single mp3 file gst launch cdparanoiasrc mode continuous audioconvert lamemp3enc mpegaudioparse id3v2mux filesink location cd.mp3 \nRips track from the CD and converts it into a single mp3 file gst launch cdparanoiasrc track audioconvert lamemp3enc mpegaudioparse id3v2mux filesink location track5.mp3 \nUsing gst inspect it is possible to discover settings like the above for cdparanoiasrc that will tell it to rip the entire cd or only tracks of it. Alternatively you can use an URI and gst launch will find an element such as cdparanoia that supports that protocol for you e.g. gst launch cdda lamemp3enc vbr new vbr quality filesink location track5.mp3 \nRecords sound from your audio input and encodes it into an ogg file gst launch pulsesrc audioconvert vorbisenc oggmux filesink location input.ogg \nVideo \nDisplay only the video portion of an MPEG video file outputting to an X display window gst launch filesrc location JB_FF9_TheGravityOfLove.mpg dvddemux mpegvideoparse mpeg2dec xvimagesink \nDisplay the video portion of a vob file used on DVDs outputting to an SDL window gst launch filesrc location flflfj.vob dvddemux mpegvideoparse mpeg2dec sdlvideosink \nPlay both video and audio portions of an MPEG movie gst launch filesrc location movie.mpg dvddemux name demuxer demuxer. queue mpegvideoparse mpeg2dec sdlvideosink demuxer. queue mpegaudioparse mpg123audiodec audioconvert audioresample pulsesink \nPlay an AVI movie with an external text subtitle stream gst launch filesrc location movie.mpg mpegdemux name demuxer demuxer. queue mpegvideoparse mpeg2dec videoconvert sdlvideosink demuxer. queue mpegaudioparse mpg123audiodec audioconvert audioresample pulsesink \nThis example also shows how to refer to specific pads by name if an element here textoverlay has multiple sink or source pads. gst launch textoverlay name overlay videoconvert videoscale autovideosink filesrc location movie.avi decodebin videoconvert overlay.video_sink filesrc location movie.srt subparse overlay.text_sink \nPlay an AVI movie with an external text subtitle stream using playbin gst launch playbin uri file path to movie.avi suburi file path to movie.srt \nNetwork streaming \nStream video using RTP and network elements. \nThis command would be run on the transmitter gst launch v4l2src video x raw width height format UYVY videoconvert ffenc_h263 video x h263 rtph263ppay pt udpsink host port \nUse this command on the receiver gst launch udpsrc port application x rtp clock rate payload rtph263pdepay queue delay ffdec_h263 xvimagesink \nDiagnostic \nGenerate a null stream and ignore it and print out details gst launch v fakesrc num buffers fakesink \nGenerate a pure sine tone to test the audio output gst launch audiotestsrc audioconvert audioresample pulsesink \nGenerate a familiar test pattern to test the video output gst launch videotestsrc xvimagesink gst launch videotestsrc ximagesink \nAutomatic linking \nYou can use the decodebin element to automatically select the right elements to get a working pipeline. \nPlay any supported audio format gst launch filesrc location musicfile decodebin audioconvert audioresample pulsesink \nPlay any supported video format with video and audio output. Threads are used automatically. To make this even easier you can use the playbin element gst launch filesrc location videofile decodebin name decoder decoder. queue audioconvert audioresample pulsesink decoder. videoconvert xvimagesink gst launch playbin uri file home joe foo.avi \nFiltered connections \nThese examples show you how to use filtered caps. \nShow a test image and use the YUY2 or YV12 video format for this. gst launch videotestsrc video x raw format YUY2 video x raw format YV12 xvimagesink \nRecord audio and write it to a wav file. Force usage of signed to bit samples and a sample rate between kHz and KHz. gst launch pulsesrc audio x raw rate format S16LE S24LE S32LE wavenc filesink location recording.wav \n\n"});