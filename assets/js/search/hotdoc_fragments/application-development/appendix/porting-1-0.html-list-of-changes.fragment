fragment_downloaded_cb({"url": "application-development/appendix/porting-1-0.html#list-of-changes", "fragment": "List of changes \nAll deprecated methods were removed. Recompile against with GST_DISABLE_DEPRECATED defined such as by adding DGST_DISABLE_DEPRECATED to the compiler flags and fix issues before attempting to port to \nplaybin2 has been renamed to playbin with similar API \ndecodebin2 has been renamed to decodebin with similar API. Note that there is no longer a new decoded pad signal just use GstElement s pad added signal instead but don t forget to remove the gboolean last argument from your old signal callback functino signature \nthe names of some formatted pad templates has been changed from e.g. src d to src u or src_ u or similar since we don t want to see negative numbers in pad names. This mostly affects applications that create request pads from elements. \nsome elements that used to have a single dynamic source pad have a source pad now. Example wavparse id3demux iceydemux apedemux. This does not affect applications using decodebin or playbin \nplaybin now proxies the GstVideoOverlay former GstXOverlay interface so most applications can just remove the sync bus handler where they would set the window ID and instead just set the window ID on playbin from the application thread before starting playback. \nplaybin also proxies the GstColorBalance and GstNavigation interfaces so applications that use this don t need to go fishing for elements that may implement those any more but can just use on playbin unconditionally. \nmultifdsink tcpclientsink tcpclientsrc tcpserversrc the protocol property is removed use gdppay and gdpdepay. \nXML serialization was removed. \nProbes and pad blocking was merged into new pad probes. \nPosition duration and convert functions no longer use an inout parameter for the destination format. \nVideo and audio caps were simplified. audio x raw int and audio x raw float are now all under the audio x raw media type. Similarly video x raw rgb and video x raw yuv are now video x raw. \nffmpegcolorspace was removed and replaced with videoconvert. \nGstMixerInterface GstTunerInterface were removed without replacement. \nThe GstXOverlay interface was renamed to GstVideoOverlay and now part of the video library in gst plugins base as the interfaces library no longer exists. \nThe name of the GstXOverlay prepare xwindow id message has changed to prepare window handle and GstXOverlay has been renamed to GstVideoOverlay Code that checks for the string directly should be changed to use gst_is_video_overlay_prepare_window_handle_message message instead. \nThe GstPropertyProbe interface was removed. There is no replacement for it in GStreamer x and x but since version there is a more featureful replacement for device discovery and feature querying provided by GstDeviceMonitor GstDevice and friends. See the GStreamer Device Discovery and Device Probing documentation. \ngst_uri_handler_get_uri and the get_uri vfunc now return a copy of the URI string \ngst_uri_handler_set_uri and the set_uri vfunc now take an additional GError argument so the handler can notify the caller why it didn t accept a particular URI. \ngst_uri_handler_set_uri now checks if the protocol of the URI passed is one of the protocols advertised by the uri handler so set_uri vfunc implementations no longer need to check that as well. \nGstTagList is now an opaque mini object instead of being typedefed to a GstStructure. While it was previously okay and in some cases required because of missing taglist API to cast a GstTagList to a GstStructure or use gst_structure_ API on taglists you can no longer do that. Doing so will cause crashes. \nAlso tag lists are refcounted now and can therefore not be freely modified any longer. Make sure to call gst_tag_list_make_writable taglist before adding removing or changing tags in the taglist. \nGST_TAG_IMAGE GST_TAG_PREVIEW_IMAGE GST_TAG_ATTACHMENT many tags that used to be of type GstBuffer are now of type GstSample which is basically a struct containing a buffer alongside caps and some other info \nGstController has now been merged into GstObject. It does not exists as an individual object anymore. In addition core contains a GstControlSource base class and the GstControlBinding. The actual control sources are in the controller library as before. The nd big change is that control sources generate a sequence of gdouble values and those are mapped to the property type and value range by GstControlBindings. \nThe whole gst_controller_ API is gone and now available in simplified form under gst_object_ ControlSources are now attached via GstControlBinding to properties. There are no GValue arguments used anymore when programming control sources. \n"});