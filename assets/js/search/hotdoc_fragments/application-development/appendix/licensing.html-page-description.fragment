fragment_downloaded_cb({"url": "application-development/appendix/licensing.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"licensing.md\">\n        <h1 id=\"licensing-advisory\">Licensing advisory</h1>\n<h2 id=\"how-to-license-the-applications-you-build-with-gstreamer\">How to license the applications you build with GStreamer</h2>\n<p>The licensing of GStreamer is no different from a lot of other libraries\nout there like GTK+ or glibc: we use the LGPL. What complicates things\nwith regards to GStreamer is its plugin-based design and the heavily\npatented and proprietary nature of many multimedia codecs. While patents\non software are currently only allowed in a small minority of world\ncountries (the US and Australia being the most important of those), the\nproblem is that due to the central place the US hold in the world\neconomy and the computing industry, software patents are hard to ignore\nwherever you are. Due to this situation, many companies, including major\nGNU/Linux distributions, get trapped in a situation where they either\nget bad reviews due to lacking out-of-the-box media playback\ncapabilities (and attempts to educate the reviewers have met with little\nsuccess so far), or go against their own - and the free software\nmovement's - wish to avoid proprietary software. Due to competitive\npressure, most choose to add some support. Doing that through pure free\nsoftware solutions would have them risk heavy litigation and punishment\nfrom patent owners. So when the decision is made to include support for\npatented codecs, it leaves them the choice of either using special\nproprietary applications, or try to integrate the support for these\ncodecs through proprietary plugins into the multimedia infrastructure\nprovided by GStreamer. Faced with one of these two evils the GStreamer\ncommunity of course prefer the second option.</p>\n<p>The problem which arises is that most free software and open source\napplications developed use the GPL as their license. While this is\ngenerally a good thing, it creates a dilemma for people who want to put\ntogether a distribution. The dilemma they face is that if they include\nproprietary plugins in GStreamer to support patented formats in a way\nthat is legal for them, they do risk running afoul of the GPL license of\nthe applications. We have gotten some conflicting reports from lawyers\non whether this is actually a problem, but the official stance of the\nFSF is that it is a problem. We view the FSF as an authority on this\nmatter, so we are inclined to follow their interpretation of the GPL\nlicense.</p>\n<p>So what does this mean for you as an application developer? Well, it\nmeans you have to make an active decision on whether you want your\napplication to be used together with proprietary plugins or not. What\nyou decide here will also influence the chances of commercial\ndistributions and Unix vendors shipping your application. The GStreamer\ncommunity suggest you license your software using a license that will\nallow proprietary plugins to be bundled with GStreamer and your\napplications, in order to make sure that as many vendors as possible go\nwith GStreamer instead of less free solutions. This in turn we hope and\nthink will let GStreamer be a vehicle for wider use of free formats like\nthe Xiph.org formats.</p>\n<p>If you do decide that you want to allow for non-free plugins to be used\nwith your application you have a variety of choices. One of the simplest\nis using licenses like LGPL, MPL or BSD for your application instead of\nthe GPL. Or you can add an exception clause to your GPL license stating\nthat you except GStreamer plugins from the obligations of the GPL.</p>\n<p>A good example of such a GPL exception clause would be, using the Totem\nvideo player project as an example: The authors of the Totem video\nplayer project hereby grants permission for non-GPL-compatible GStreamer\nplugins to be used and distributed together with GStreamer and Totem.\nThis permission goes above and beyond the permissions granted by the GPL\nlicense Totem is covered by.</p>\n<p>Our suggestion among these choices is to use the LGPL license, as it is\nwhat resembles the GPL most and it makes it a good licensing fit with\nthe major GNU/Linux desktop projects like GNOME and KDE. It also allows\nyou to share code more openly with projects that have compatible\nlicenses. Obviously, pure GPL code without the above-mentioned clause is\nnot usable in your application as such. By choosing the LGPL, there is\nno need for an exception clause and thus code can be shared more freely.</p>\n<p>I have above outlined the practical reasons for why the GStreamer\ncommunity suggests you allow non-free plugins to be used with your\napplications. We feel that in the multimedia arena, the free software\ncommunity is still not strong enough to set the agenda and that blocking\nnon-free plugins to be used in our infrastructure hurts us more than it\nhurts the patent owners and their ilk.</p>\n<p>This view is not shared by everyone. The Free Software Foundation urges\nyou to use an unmodified GPL for your applications, so as to push back\nagainst the temptation to use non-free plug-ins. They say that since not\neveryone else has the strength to reject them because they are\nunethical, they ask your help to give them a legal reason to do so.</p>\n<p>This advisory is part of a bigger advisory with a FAQ which you can find\non the <a href=\"http://gstreamer.freedesktop.org/documentation/licensing.html\">GStreamer\nwebsite</a></p>\n\n        \n\n    </div>\n\n\n        "});