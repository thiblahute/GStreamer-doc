fragment_downloaded_cb({"url": "application-development/appendix/integration.html#page-description", "fragment": "GStreamer tries to integrate closely with operating systems such as Linux and UNIX like operating systems OS X or Windows and desktop environments such as GNOME or KDE In this chapter we ll mention some specific techniques to integrate your application with your operating system or desktop environment of choice. \nGStreamer provides a basic set of elements that are useful when integrating with Linux or a UNIX like operating system. \nFor audio input and output GStreamer provides input and output elements for several audio subsystems. Amongst others GStreamer includes elements for ALSA alsasrc alsasink OSS osssrc osssink Pulesaudio pulsesrc pulsesink and Sun audio sunaudiosrc sunaudiomixer sunaudiosink \nFor video input GStreamer contains source elements for Video4linux2 v4l2src v4l2element v4l2sink \nFor video output GStreamer provides elements for output to X windows ximagesink Xv windows xvimagesink for hardware accelerated video direct framebuffer dfbimagesink and openGL image contexts glsink \nGStreamer has been the media backend of the GNOME desktop since GNOME onwards. Nowadays a whole bunch of GNOME applications make use of GStreamer for media processing including but not limited to Rhythmbox Videos and Sound Juicer. \nMost of these GNOME applications make use of some specific techniques to integrate as closely as possible with the GNOME desktop \nGNOME applications usually call gtk_init to parse command line options and initialize GTK. GStreamer applications would normally call gst_init to do the same for GStreamer. This would mean that only one of the two can parse command line options. To work around this issue GStreamer can provide a GLib GOptionGroup which can be passed to gnome_program_init The following example requires GTK or newer previous GTK versions do not support command line parsing via GOption yet \nGNOME uses Pulseaudio for audio use the pulsesrc and pulsesink elements to have access to all the features. \nGStreamer provides data input output elements for use with the GIO VFS system. These elements are called giosrc and giosink The deprecated GNOME VFS system is supported too but shouldn t be used for any new applications. \nGStreamer has been proposed for inclusion in KDE Currently GStreamer is included as an optional component and it s used by several KDE applications including AmaroK KMPlayer and Kaffeine. \nAlthough not yet as complete as the GNOME integration bits there are already some KDE integration specifics available. This list will probably grow as GStreamer starts to be used in KDE \nGStreamer provides native video and audio output elements for OS X. It builds using the standard development tools for OS X. \nWarning \nNote this section is out of date. GStreamer has much better support for win32 than previous versions though and should usually compile and work out of the box both using MSYS MinGW or Microsoft compilers. The GStreamer web site and the mailing list archives are a good place to check the latest win32 related news. \nGStreamer builds using Microsoft Visual C NET and using Cygwin. \nThere are different makefiles that can be used to build GStreamer with the usual Microsoft compiling tools. \nThe Makefile is meant to be used with the GNU make program and the free version of the Microsoft compiler http msdn.microsoft.com visualc vctoolkit2003 You also have to modify your system environment variables to use it from the command line. You will also need a working Platform SDK for Windows that is available for free from Microsoft. \nThe projects makefiles will generate automatically some source files needed to compile GStreamer. That requires that you have installed on your system some GNU tools and that they are available in your system PATH. \nThe GStreamer project depends on other libraries namely \nGLib \nlibxml2 \nlibintl \nlibiconv \nWork is being done to provide pre compiled GStreamer libraries as a packages for win32. Check the GStreamer web site and check our mailing list for the latest developments in this respect. \nNote \nGNU tools needed that you can find on http gnuwin32.sourceforge.net \nGNU flex tested with \nGNU bison tested with \nand http www.mingw.org \nthe generated files from the auto makefiles will be available soon separately on the net for convenience people who don t want to install GNU tools \nFIXME This section needs be updated for GStreamer \n"});