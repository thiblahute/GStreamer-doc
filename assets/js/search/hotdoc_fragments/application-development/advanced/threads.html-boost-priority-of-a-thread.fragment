fragment_downloaded_cb({"url": "application-development/advanced/threads.html#boost-priority-of-a-thread", "fragment": "Boost priority of a thread \nLet s look at the simple pipeline above. We would like to boost the priority of the streaming thread. It will be the fakesrc element that starts the streaming thread for generating the fake data pushing them to the peer fakesink. The flow for changing the priority would go like this \nWhen going from READY to PAUSED state fakesrc will require a streaming thread for pushing data into the fakesink. It will post a STREAM_STATUS message indicating its requirement for a streaming thread. \nThe application will react to the STREAM_STATUS messages with a sync bus handler. It will then configure a custom GstTaskPool on the GstTask inside the message. The custom taskpool is responsible for creating the threads. In this example we will make a thread with a higher priority. \nAlternatively since the sync message is called in the thread context you can use thread ENTER LEAVE notifications to change the priority or scheduling pollicy of the current thread. \nIn a first step we need to implement a custom GstTaskPool that we can configure on the task. Below is the implementation of a GstTaskPool subclass that uses pthreads to create a SCHED_RR real time thread. Note that creating real time threads might require extra priveleges. \nThe important function to implement when writing an taskpool is the push function. The implementation should start a thread that calls the given function. More involved implementations might want to keep some threads around in a pool because creating and destroying threads is not always the fastest operation. \nIn a next step we need to actually configure the custom taskpool when the fakesrc needs it. For this we intercept the STREAM_STATUS messages with a sync handler. \nNote that this program likely needs root permissions in order to create real time threads. When the thread can t be created the state change function will fail which we catch in the application above. \nWhen there are multiple threads in the pipeline you will receive multiple STREAM_STATUS messages. You should use the owner of the message which is likely the pad or the element that starts the thread to figure out what the function of this thread is in the context of the application. \n"});