fragment_downloaded_cb({"url": "application-development/advanced/buffering.html#norebuffer-strategy", "fragment": "No rebuffer strategy \nWe would like to buffer enough data in the pipeline so that playback continues without interruptions. What we need to know to implement this is know the total remaining playback time in the file and the total remaining download time. If the buffering time is less than the playback time we can start playback without interruptions. \nWe have all this information available with the DURATION POSITION and BUFFERING queries. We need to periodically execute the buffering query to get the current buffering status. We also need to have a large enough buffer to hold the complete file worst case. It is best to use this buffering strategy with download buffering see Download buffering \nThis is what the code would look like \nSee how we set the pipeline to the PAUSED state first. We will receive buffering messages during the preroll state when buffering is needed. When we are prerolled on_message_async_done we see if buffering is going on if not we start playback. If buffering was going on we start a timeout to poll the buffering state. If the estimated time to download is less than the remaining playback time we start playback. \n"});