fragment_downloaded_cb({"url": "application-development/advanced/autoplugging.html#media-stream-type-detection", "fragment": "Media stream type detection \nUsually when loading a media stream the type of the stream is not known. This means that before we can choose a pipeline to decode the stream we first need to detect the stream type. GStreamer uses the concept of typefinding for this. Typefinding is a normal part of a pipeline it will read data for as long as the type of a stream is unknown. During this period it will provide data to all plugins that implement a typefinder. When one of the typefinders recognizes the stream the typefind element will emit a signal and act as a passthrough module from that point on. If no type was found it will emit an error and further media processing will stop. \nOnce the typefind element has found a type the application can use this to plug together a pipeline to decode the media stream. This will be discussed in the next section. \nPlugins in GStreamer can as mentioned before implement typefinder functionality. A plugin implementing this functionality will submit a media type optionally a set of file extensions commonly used for this media type and a typefind function. Once this typefind function inside the plugin is called the plugin will see if the data in this media stream matches a specific pattern that marks the media type identified by that media type. If it does it will notify the typefind element of this fact telling which mediatype was recognized and how certain we are that this stream is indeed that mediatype. Once this run has been completed for all plugins implementing a typefind functionality the typefind element will tell the application what kind of media stream it thinks to have recognized. \nThe following code should explain how to use the typefind element. It will print the detected media type or tell that the media type was not found. The next section will introduce more useful behaviours such as plugging together a decoding pipeline. \nOnce a media type has been detected you can plug an element e.g. a demuxer or decoder to the source pad of the typefind element and decoding of the media stream will start right after. \n"});