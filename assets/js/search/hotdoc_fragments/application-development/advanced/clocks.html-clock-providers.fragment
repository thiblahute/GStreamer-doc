fragment_downloaded_cb({"url": "application-development/advanced/clocks.html#clock-providers", "fragment": "Clock providers \nA clock provider is an element in the pipeline that can provide a GstClock object. The clock object needs to report an absolute time that is monotonically increasing when the element is in the PLAYING state. It is allowed to pause the clock while the element is PAUSED. \nClock providers exist because they play back media at some rate and this rate is not necessarily the same as the system clock rate. For example a soundcard may playback at kHz but that doesn t mean that after exactly second according to the system clock the soundcard has played back samples. This is only true by approximation. In fact the audio device has an internal clock based on the number of samples played that we can expose. \nIf an element with an internal clock needs to synchronize it needs to estimate when a time according to the pipeline clock will take place according to the internal clock. To estimate this it needs to slave its clock to the pipeline clock. \nIf the pipeline clock is exactly the internal clock of an element the element can skip the slaving step and directly use the pipeline clock to schedule playback. This can be both faster and more accurate. Therefore generally elements with an internal clock like audio input or output devices will be a clock provider for the pipeline. \nWhen the pipeline goes to the PLAYING state it will go over all elements in the pipeline from sink to source and ask each element if they can provide a clock. The last element that can provide a clock will be used as the clock provider in the pipeline. This algorithm prefers a clock from an audio sink in a typical playback pipeline and a clock from source elements in a typical capture pipeline. \nThere exist some bus messages to let you know about the clock and clock providers in the pipeline. You can see what clock is selected in the pipeline by looking at the NEW_CLOCK message on the bus. When a clock provider is removed from the pipeline a CLOCK_LOST message is posted and the application should go to PAUSED and back to PLAYING to select a new clock. \n"});