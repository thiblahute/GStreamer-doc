fragment_downloaded_cb({"url": "application-development/introduction/gstreamer.html#page-description", "fragment": "GStreamer is a framework for creating streaming media applications. The fundamental design comes from the video pipeline at Oregon Graduate Institute as well as some ideas from DirectShow. \nGStreamer s development framework makes it possible to write any type of streaming multimedia application. The GStreamer framework is designed to make it easy to write applications that handle audio or video or both. It isn t restricted to audio and video and can process any kind of data flow. The pipeline design is made to have little overhead above what the applied filters induce. This makes GStreamer a good framework for designing even high end audio applications which put high demands on latency. \nOne of the most obvious uses of GStreamer is using it to build a media player. GStreamer already includes components for building a media player that can support a very wide variety of formats including MP3 Ogg Vorbis MPEG AVI Quicktime mod and more. GStreamer however is much more than just another media player. Its main advantages are that the pluggable components can be mixed and matched into arbitrary pipelines so that it s possible to write a full fledged video or audio editing application. \nThe framework is based on plugins that will provide the various codec and other functionality. The plugins can be linked and arranged in a pipeline. This pipeline defines the flow of the data. Pipelines can also be edited with a GUI editor and saved as XML so that pipeline libraries can be made with a minimum of effort. \nThe GStreamer core function is to provide a framework for plugins data flow and media type handling negotiation. It also provides an API to write applications using the various plugins. \nSpecifically GStreamer provides \nan API for multimedia applications \na plugin architecture \na pipeline architecture \na mechanism for media type handling negotiation \na mechanism for synchronization \nover plug ins providing more than elements \na set of tools \nGStreamer plug ins could be classified into \nprotocols handling \nsources for audio and video involves protocol plugins \nformats parsers formaters muxers demuxers metadata subtitles \ncodecs coders and decoders \nfilters converters mixers effects \nsinks for audio and video involves protocol plugins \n\nGStreamer is packaged into \ngstreamer the core package \ngst plugins base an essential exemplary set of elements \ngst plugins good a set of good quality plug ins under LGPL \ngst plugins ugly a set of good quality plug ins that might pose distribution problems \ngst plugins bad a set of plug ins that need more quality \ngst libav a set of plug ins that wrap libav for decoding and encoding \na few others packages \n"});