fragment_downloaded_cb({"url": "application-development/introduction/basics.html#communication", "fragment": "Communication \nGStreamer provides several mechanisms for communication and data exchange between the application and the pipeline. \nbuffers are objects for passing streaming data between elements in the pipeline. Buffers always travel from sources to sinks downstream \nevents are objects sent between elements or from the application to elements. Events can travel upstream and downstream. Downstream events can be synchronised to the data flow. \nmessages are objects posted by elements on the pipeline s message bus where they will be held for collection by the application. Messages can be intercepted synchronously from the streaming thread context of the element posting the message but are usually handled asynchronously by the application from the application s main thread. Messages are used to transmit information such as errors tags state changes buffering state redirects etc. from elements to the application in a thread safe way. \nqueries allow applications to request information such as duration or current playback position from the pipeline. Queries are always answered synchronously. Elements can also use queries to request information from their peer elements such as the file size or duration They can be used both ways within a pipeline but upstream queries are more common. \n\n"});