fragment_downloaded_cb({"url": "application-development/basics/pads.html#dynamic-or-sometimes-pads", "fragment": "Dynamic or sometimes pads \nSome elements might not have all of their pads when the element is created. This can happen for example with an Ogg demuxer element. The element will read the Ogg stream and create dynamic pads for each contained elementary stream vorbis theora when it detects such a stream in the Ogg stream. Likewise it will delete the pad when the stream ends. This principle is very useful for demuxer elements for example. \nRunning gst inspect oggdemux will show that the element has only one pad a sink pad called sink The other pads are dormant You can see this in the pad template because there is an Exists Sometimes property. Depending on the type of Ogg file you play the pads will be created. We will see that this is very important when you are going to create dynamic pipelines. You can attach a signal handler to an element to inform you when the element has created a new pad from one of its sometimes pad templates. The following piece of code is an example of how to do this \nIt is not uncommon to add elements to the pipeline only from within the pad added callback. If you do this don t forget to set the state of the newly added elements to the target state of the pipeline using gst_element_set_state or gst_element_sync_state_with_parent \n"});