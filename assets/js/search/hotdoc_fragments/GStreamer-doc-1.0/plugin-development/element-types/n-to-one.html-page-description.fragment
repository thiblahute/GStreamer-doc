fragment_downloaded_cb({"url": "GStreamer-doc-1.0/plugin-development/element-types/n-to-one.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"n-to-one.md\">\n<h1 id=\"writing-a-nto1-element-or-muxer\">Writing a N-to-1 Element or Muxer</h1>\n<p>N-to-1 elements have been previously mentioned and discussed in both\n<a href=\"../advanced/request.html\">Request and Sometimes pads</a> and in\n<a href=\"../advanced/scheduling.html\">Different scheduling modes</a>. The main noteworthy\nthing about N-to-1 elements is that each pad is push-based in its own\nthread, and the N-to-1 element synchronizes those streams by\nexpected-timestamp-based logic. This means it lets all streams wait\nexcept for the one that provides the earliest next-expected timestamp.\nWhen that stream has passed one buffer, the next\nearliest-expected-timestamp is calculated, and we start back where we\nwere, until all streams have reached EOS. There is a helper base class,\ncalled <code>GstCollectPads</code>, that will help you to do this.</p>\n<p>Note, however, that this helper class will only help you with grabbing a\nbuffer from each input and giving you the one with earliest timestamp.\nIf you need anything more difficult, such as \"don't-grab-a-new-buffer\nuntil a given timestamp\" or something like that, you'll need to do this\nyourself.</p>\n\n</div>\n\n\n\t"});