fragment_downloaded_cb({"url": "GStreamer-doc-1.0/design/conventions.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"conventions.md\">\n<h1 id=\"documentation-conventions\">Documentation conventions</h1>\n<p>Due to the potential for exponential growth, several abbreviating\nconventions will be used throughout this documentation. These\nconventions have grown primarily from extremely in-depth discussions of\nthe architecture in IRC. This has verified the safety of these\nconventions, if used properly. There are no known namespace conflicts as\nlong as context is rigorously observed.</p>\n<h2 id=\"object-classes\">Object classes</h2>\n<p>Since everything starts with Gst, we will generally refer to objects by\nthe shorter name, i.e. Element or Pad. These names will always have\ntheir first letter capitalized.</p>\n<h2 id=\"function-names\">Function names</h2>\n<p>Within the context of a given object, functions defined in that object\u2019s\nheader and/or source file will have their object-specific prefix\nstripped. For instance, gst_element_add_pad() would be referred to as\nsimply <em>add_pad(). Note that the trailing parentheses should always be\npresent, but sometimes may not be. A prefixing underscore (</em>) will\nalways tell you it\u2019s a function, however, regardless of the presence or\nabsence of the trailing parentheses.</p>\n<h2 id=\"defines-and-enums\">defines and enums</h2>\n<p>Values and macros defined as enums and preprocessor macros will be\nreferred to in all capitals, as per their definition. This includes\nobject flags and element states, as well as general enums. Examples are\nthe states NULL, READY, PLAYING, and PAUSED; the element flags\nLOCKED_STATE , and state return values SUCCESS, FAILURE, and ASYNC.\nWhere there is a prefix, as in the element flags, it is usually dropped\nand implied. Note however that element flags should be cross-checked\nwith the header, as there are currently two conventions in use: with and\nwithout <em>FLAGS</em> in the middle.</p>\n<h2 id=\"drawing-conventions\">Drawing conventions</h2>\n<p>When drawing pictures the following conventions apply:</p>\n<h3 id=\"objects\">objects</h3>\n<p>Objects are drawn with a box like:</p>\n<pre><code>+------+\n|      |\n+------+\n</code></pre>\n<h3 id=\"pointers\">pointers</h3>\n<p>a pointer to an object.</p>\n<pre><code>     +-----+\n*---&gt;|     |\n     +-----+\n</code></pre>\n<p>an invalid pointer, this is a pointer that should not be used.</p>\n<pre><code>*-//-&gt;\n</code></pre>\n<h3 id=\"elements\">elements</h3>\n<pre><code> +----------+\n | name     |\nsink       src\n +----------+\n</code></pre>\n<h3 id=\"pad-links\">pad links</h3>\n<pre><code>-----+    +---\n     |    |\n    src--sink\n-----+    +---\n</code></pre>\n\n</div>\n\n\n\t"});