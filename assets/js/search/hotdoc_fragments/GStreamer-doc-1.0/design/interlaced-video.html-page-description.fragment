fragment_downloaded_cb({"url": "GStreamer-doc-1.0/design/interlaced-video.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"interlaced-video.md\">\n<h1 id=\"interlaced-video\">Interlaced Video</h1>\n<p>Video buffers have a number of states identifiable through a combination\nof caps and buffer flags.</p>\n<p>Possible states:</p>\n<ul>\n<li>Progressive</li>\n<li>Interlaced</li>\n<li>Plain</li>\n<li>One field</li>\n<li>Two fields</li>\n<li>Three fields - this should be a progressive buffer with a repeated 'first'\nfield that can be used for telecine pulldown</li>\n<li>Telecine\n<ul>\n<li>One field</li>\n<li>Two fields</li>\n<li>Progressive</li>\n<li>Interlaced (a.k.a. 'mixed'; the fields are from different frames)</li>\n<li>Three fields - this should be a progressive buffer with a repeated 'first'\nfield that can be used for telecine pulldown</li>\n</ul>\n</li>\n</ul>\n<p>Note: It can be seen that the difference between the plain interlaced\nand telecine states is that in the latter, buffers containing\ntwo fields may be progressive.</p>\n<p>Tools for identification:</p>\n<ul>\n<li><code>GstVideoInfo</code></li>\n<li><code>GstVideoInterlaceMode</code> - enum <code>GST_VIDEO_INTERLACE_MODE_...</code></li>\n<li>PROGRESSIVE</li>\n<li>INTERLEAVED</li>\n<li>MIXED</li>\n<li>Buffers flags - <code>GST_VIDEO_BUFFER_FLAG_...</code>\n<ul>\n<li>TFF</li>\n<li>RFF</li>\n<li>ONEFIELD</li>\n<li>INTERLACED</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"identification-of-buffer-states\">Identification of Buffer States</h2>\n<p>Note that flags are not necessarily interpreted in the same way for all\ndifferent states nor are they necessarily required nor make sense in all\ncases.</p>\n<h3 id=\"progressive\">Progressive</h3>\n<p>If the interlace mode in the video info corresponding to a buffer is\n<strong>\"progressive\"</strong>, then the buffer is progressive.</p>\n<h3 id=\"plain-interlaced\">Plain Interlaced</h3>\n<p>If the video info interlace mode is <strong>\"interleaved\"</strong>, then the buffer is\nplain interlaced.</p>\n<p><code>GST_VIDEO_BUFFER_FLAG_TFF</code> indicates whether the top or bottom field\nis to be displayed first. The timestamp on the buffer corresponds to the\nfirst field.</p>\n<p><code>GST_VIDEO_BUFFER_FLAG_RFF</code> indicates that the first field (indicated\nby the TFF flag) should be repeated. This is generally only used for\ntelecine purposes but as the telecine state was added long after the\ninterlaced state was added and defined, this flag remains valid for\nplain interlaced buffers.</p>\n<p><code>GST_VIDEO_BUFFER_FLAG_ONEFIELD</code> means that only the field indicated\nthrough the TFF flag is to be used. The other field should be ignored.</p>\n<h3 id=\"telecine\">Telecine</h3>\n<p>If video info interlace mode is <strong>\"mixed\"</strong> then the buffers are in some\nform of telecine state.</p>\n<p>The <code>TFF</code> and <code>ONEFIELD</code> flags have the same semantics as for the plain\ninterlaced state.</p>\n<p><code>GST_VIDEO_BUFFER_FLAG_RFF</code> in the telecine state indicates that the\nbuffer contains only repeated fields that are present in other buffers\nand are as such unneeded. For example, in a sequence of three telecined\nframes, we might have:</p>\n<pre><code>AtAb AtBb BtBb\n</code></pre>\n<p>In this situation, we only need the first and third buffers as the\nsecond buffer contains fields present in the first and third.</p>\n<p>Note that the following state can have its second buffer identified\nusing the <code>ONEFIELD</code> flag (and <code>TFF</code> not set):</p>\n<pre><code>AtAb AtBb BtCb\n</code></pre>\n<p>The telecine state requires one additional flag to be able to identify\nprogressive buffers.</p>\n<p>The presence of the <code>GST_VIDEO_BUFFER_FLAG_INTERLACED</code> means that the\nbuffer is an 'interlaced' or 'mixed' buffer that contains two fields\nthat, when combined with fields from adjacent buffers, allow\nreconstruction of progressive frames. The absence of the flag implies\nthe buffer containing two fields is a progressive frame.</p>\n<p>For example in the following sequence, the third buffer would be mixed\n(yes, it is a strange pattern, but it can happen):</p>\n<pre><code>AtAb AtBb BtCb CtDb DtDb\n</code></pre>\n\n</div>\n\n\n\t"});