fragment_downloaded_cb({"url": "libgstplayback-so-1.0/playbin.html#page-description", "fragment": "Advanced Usage specifying the audio and video sink \nRetrieving Tags and Other Meta Data \nEmbedding the video window in your application \nSpecifying which CD DVD device to use \nBy default if no audio sink or video sink has been specified via the audio sink or video sink property playbin will use the autoaudiosink and autovideosink elements to find the first best available output method. This should work in most cases but is not always desirable. Often either the user or application might want to specify more explicitly what to use for audio and video output. \nIf the application wants more control over how audio or video should be output it may create the audio video sink elements itself for example using gst_element_factory_make and provide them to playbin using the audio sink or video sink property. \nGNOME based applications for example will usually want to create gconfaudiosink and gconfvideosink elements and make playbin use those so that output happens to whatever the user has configured in the GNOME Multimedia System Selector configuration dialog. \nThe sink elements do not necessarily need to be ready made sinks. It is possible to create container elements that look like a sink to playbin but in reality contain a number of custom elements linked together. This can be achieved by creating a GstBin and putting elements in there and linking them and then creating a sink GstGhostPad for the bin and pointing it to the sink pad of the first element within the bin. This can be used for a number of purposes for example to force output to a particular format or to modify or observe the data before it is output. \nIt is also possible to suppress audio and or video output by using fakesink elements or capture it from there using the fakesink element s handoff signal which nota bene is fired from the streaming thread \nMost of the common meta data artist title etc. can be retrieved by watching for TAG messages on the pipeline s bus see above \nOther more specific meta information like width height framerate of video streams or samplerate number of channels of audio streams can be obtained from the negotiated caps on the sink pads of the sinks. \nBy default playbin or rather the video sinks used will create their own window. Applications will usually want to force output to a window of their own however. This can be done using the GstVideoOverlay interface which most video sinks implement. See the documentation there for more details. \nThe device to use for CDs DVDs needs to be set on the source element playbin creates before it is opened. The most generic way of doing this is to connect to playbin s source setup or notify source signal which will be emitted by playbin when it has created the source element for a particular URI. In the signal callback you can check if the source element has a device property and set it appropriately. In some cases the device can also be set as part of the URI but it depends on the elements involved if this will work or not. For example for DVD menu playback the following syntax might work if the resindvd plugin is used dvd path to device \n"});