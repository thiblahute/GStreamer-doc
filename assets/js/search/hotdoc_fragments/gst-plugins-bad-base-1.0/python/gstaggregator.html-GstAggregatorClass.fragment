fragment_downloaded_cb({"url": "gst-plugins-bad-base-1.0/python/gstaggregator.html#GstAggregatorClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstAggregatorClass\">\n\t\t<h3 id=\"gstbadbaseaggregatorclass\">\n\tGstBadBase.AggregatorClass\n</h3>\n\n\t\t<p>The aggregator base class will handle in a thread-safe way all manners of\nconcurrent flushes, seeks, pad additions and removals, leaving to the\nsubclass the responsibility of clipping buffers, and aggregating buffers in\nthe way the implementor sees fit.</p>\n<p>It will also take care of event ordering (stream-start, segment, eos).</p>\n<p>Basically, a basic implementation will override <em>aggregate</em>, and call\n_finish_buffer from inside that function.</p>\n\n\n<div class=\"member_details\">\n\t<h5 id=\"attributes\">Attributes</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstAggregatorClass.parent_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstElementClass\" href=\"../../libgstreamer-1.0/c/gstelement.html#GstElementClass\">GstElementClass</a> <em><code>parent_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAggregatorClass.sinkpads_type\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GType\" href=\"https://developer.gnome.org/gobject/unstable/gobject-Type-Information.html#GType\">GType</a> <em><code>sinkpads_type</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nThe type of the pads that should be created when\nGstElement.request_new_pad is called.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAggregatorClass._gst_reserved\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> <em><code>_gst_reserved</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});