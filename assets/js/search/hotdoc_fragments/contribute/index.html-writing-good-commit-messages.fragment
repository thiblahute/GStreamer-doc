fragment_downloaded_cb({"url": "contribute/index.html#writing-good-commit-messages", "fragment": "Writing Good Commit Messages \nPlease take the time to write good and concise commit messages. \nThe first line of each commit message should be a short and concise summary of the commit. If the commit applies to a specific subsystem library plugin or element prefix the message with the name of the component for example \nor \nor \nThis should be a summary of the change and not a description of the change. Meaning don t say how you did something but what you fixed improved or changed what the most important practical effect of the change is. Example \ninstead of \nThe second line of the commit message should be empty. \nThe third and following lines should contain an extensive description and rationale of the change made what was changed what was broken how did it get fixed what bugs or issues does this fix And most importantly why was something changed. \nTrivial commits do not require a description e.g. if you fix a memory leak it s usually enough to just say that you fixed a leak. Maybe mention what was leaked and perhaps also if it was an important leak or only happens in some corner case error code path but in any case there s no need to write a long explanation why leaks are bad or why this needed fixing. \nThe important part is really what the reasoning behind the change is since that s what people want to know if they try to figure out twelve months later why a line of code does what it does. \nIf the commit is related to any particular bugs in bugzilla please add the full bug URL at the end of the commit message. \nWe do not use Signed off by lines in GStreamer please create patches without those. \n"});