fragment_downloaded_cb({"url": "libgstbase-doc-1.0/c/gstbytereader.h.html#gst_byte_reader_peek_float32_le", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_byte_reader_peek_float32_le\">\n\t\t<h3 id=\"gst_byte_reader_peek_float32_le1\">\n\t<span><code>gst_byte_reader_peek_float32_le</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\ngboolean\ngst_byte_reader_peek_float32_le (const <a title=\"GstByteReader\" href=\"../../libgstbase-doc-1.0/gstbytereader.h.html#GstByteReader\">GstByteReader</a> * reader,\n                                 gfloat* val)</pre>\n\n<p>Read a 32 bit little endian floating point value into <em>val</em>\nbut keep the current position.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters44\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>reader:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstbase-doc-1.0/gstbytereader.h.html#GstByteReader\">GstByteReader</a> instance</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Pointer to a gfloat to store the result</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns43\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if successful, <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> otherwise.</p>\n\n\t</td>\n\t<td>\n\t\tgboolean\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});