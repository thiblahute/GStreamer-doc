fragment_downloaded_cb({"url": "libgstbase-doc-1.0/c/gstbasesink.html#GstBaseSinkClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBaseSinkClass\">\n\t\t<h3 id=\"struct-gstbasesinkclass\">\n\t\tstruct GstBaseSinkClass\n\t</h3>\n\n\t\t<p>Subclasses can override any of the available virtual methods or not, as\nneeded. At the minimum, the <em>render</em> method should be overridden to\noutput/present buffers.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"fields\">Fields</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.parent_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstElementClass\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstElementClass\">GstElementClass</a> <em><code>parent_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Element parent class</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.get_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>get_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Called to get sink pad caps from the subclass</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.set_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>set_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Notify subclass of changed caps</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.fixate\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>fixate</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Only useful in pull mode. Implement if you have\nideas about what should be the default values for the caps you support.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.activate_pull\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>activate_pull</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Subclasses should override this when they can provide an\nalternate method of spawning a thread to drive the pipeline in pull mode.\nShould start or stop the pulling thread, depending on the value of the\n\"active\" argument. Called after actually activating the sink pad in pull\nmode. The default implementation starts a task on the sink pad.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.get_times\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>get_times</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Called to get the start and end times for synchronising\nthe passed buffer to the clock</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.propose_allocation\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>propose_allocation</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>configure the allocation query</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.start\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>start</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Start processing. Ideal for opening resources in the subclass</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.stop\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>stop</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Stop processing. Subclasses should use this to close resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.unlock\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>unlock</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Unlock any pending access to the resource. Subclasses should\nunblock any blocked function ASAP and call <a href=\"gstbasesink.html#gst_base_sink_wait_preroll\">gst_base_sink_wait_preroll</a></p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.unlock_stop\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>unlock_stop</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Clear the previous unlock request. Subclasses should clear\nany state they set during <a href=\"gstbasesink.html#GstBaseSinkClass.unlock\">GstBaseSinkClass.unlock</a>(), and be ready to\ncontinue where they left off after <a href=\"gstbasesink.html#gst_base_sink_wait_preroll\">gst_base_sink_wait_preroll</a>,\n<a href=\"gstbasesink.html#gst_base_sink_wait\">gst_base_sink_wait</a> or gst_wait_sink_wait_clock return or\n<a href=\"gstbasesink.html#GstBaseSinkClass.render\">GstBaseSinkClass.render</a>() is called again.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.query\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>query</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>perform a <a href=\"../../libgstreamer-doc-1.0/c/gstquery.html#GstQuery\">GstQuery</a> on the element.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Override this to handle events arriving on the sink pad</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.wait_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>wait_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Override this to implement custom logic to wait for the event\ntime (for events like EOS and GAP). Subclasses should always first\nchain up to the default implementation.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.prepare\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>prepare</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Called to prepare the buffer for <em>render</em> and <em>preroll</em>. This\nfunction is called before synchronisation is performed.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.prepare_list\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>prepare_list</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Called to prepare the buffer list for <em>render_list</em>. This\nfunction is called before synchronisation is performed.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.preroll\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>preroll</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Called to present the preroll buffer if desired.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.render\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>render</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Called when a buffer should be presented or output, at the\ncorrect moment if the <a href=\"gstbasesink.html#GstBaseSink\">GstBaseSink</a> has been set to sync to the clock.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass.render_list\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>render_list</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Same as <em>render</em> but used with buffer lists instead of\nbuffers.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSinkClass._gst_reserved\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> <em><code>_gst_reserved</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});