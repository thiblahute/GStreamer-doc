fragment_downloaded_cb({"url": "libgstbase-doc-1.0/c/gstbasetransform.html#GstBaseTransformClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBaseTransformClass\">\n\t\t<h3 id=\"struct-gstbasetransformclass\">\n\t\tstruct GstBaseTransformClass\n\t</h3>\n\n\t\t<p>Subclasses can override any of the available virtual methods or not, as\nneeded. At minimum either <em>transform</em> or <em>transform_ip</em> need to be overridden.\nIf the element can overwrite the input data with the results (data is of the\nsame type and quantity) it should provide <em>transform_ip</em>.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"fields\">Fields</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.parent_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstElementClass\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstElementClass\">GstElementClass</a> <em><code>parent_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Element parent class</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.passthrough_on_same_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gboolean\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gboolean\">gboolean</a> <em><code>passthrough_on_same_caps</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>If set to <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>, passthrough mode will be\nautomatically enabled if the caps are the same.\nSet to <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> by default.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.transform_ip_on_passthrough\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gboolean\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gboolean\">gboolean</a> <em><code>transform_ip_on_passthrough</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>If set to <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>, <em>transform_ip</em> will be called in\npassthrough mode. The passed buffer might not be\nwritable. When <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a>, neither <em>transform</em> nor\n<em>transform_ip</em> will be called in passthrough mode.\nSet to <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> by default.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.transform_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>transform_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.  Given the pad in this direction and the given\ncaps, what caps are allowed on the other pad in this\nelement ?</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.fixate_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>fixate_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional. Given the pad in this direction and the given\ncaps, fixate the caps on the other pad. The function takes\nownership of <em>othercaps</em> and returns a fixated version of\n<em>othercaps</em>. <em>othercaps</em> is not guaranteed to be writable.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.accept_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>accept_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nSubclasses can override this method to check if <em>caps</em> can be\nhandled by the element. The default implementation might not be\nthe most optimal way to check this in all cases.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.set_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>set_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>allows the subclass to be notified of the actual caps set.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.query\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>query</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nHandle a requested query. Subclasses that implement this\nshould must chain up to the parent if they didn't handle the\nquery</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.decide_allocation\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>decide_allocation</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Setup the allocation parameters for allocating output\nbuffers. The passed in query contains the result of the\ndownstream allocation query. This function is only called\nwhen not operating in passthrough mode. The default\nimplementation will remove all memory dependent metadata.\nIf there is a <em>filter_meta</em> method implementation, it will\nbe called for all metadata API in the downstream query,\notherwise the metadata API is removed.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.filter_meta\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>filter_meta</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if the metadata API should be proposed in the\nupstream allocation query. The default implementation is <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a>\nand will cause all metadata to be removed.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.propose_allocation\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>propose_allocation</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Propose buffer allocation parameters for upstream elements.\nThis function must be implemented if the element reads or\nwrites the buffer content. The query that was passed to\nthe decide_allocation is passed in this method (or <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a>\nwhen the element is in passthrough mode). The default\nimplementation will pass the query downstream when in\npassthrough mode and will copy all the filtered metadata\nAPI in non-passthrough mode.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.transform_size\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>transform_size</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional. Given the size of a buffer in the given direction\nwith the given caps, calculate the size in bytes of a buffer\non the other pad with the given other caps.\nThe default implementation uses get_unit_size and keeps\nthe number of units the same.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.get_unit_size\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>get_unit_size</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Required if the transform is not in-place.\nget the size in bytes of one unit for the given caps.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.start\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>start</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element starts processing.\nAllows opening external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.stop\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>stop</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element stops processing.\nAllows closing external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.sink_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>sink_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nEvent handler on the sink pad. The default implementation\nhandles the event and forwards it downstream.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.src_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>src_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nEvent handler on the source pad. The default implementation\nhandles the event and forwards it upstream.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.prepare_output_buffer\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>prepare_output_buffer</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nSubclasses can override this to do their own\nallocation of output buffers.  Elements that only do\nanalysis can return a subbuffer or even just\nreturn a reference to the input buffer (if in\npassthrough mode). The default implementation will\nuse the negotiated allocator or bufferpool and\ntransform_size to allocate an output buffer or it\nwill return the input buffer in passthrough mode.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.copy_metadata\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>copy_metadata</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCopy the metadata from the input buffer to the output buffer.\nThe default implementation will copy the flags, timestamps and\noffsets of the buffer.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.transform_meta\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>transform_meta</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional. Transform the metadata on the input buffer to the\noutput buffer. By default this method copies all meta without\ntags. subclasses can implement this method and return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if\nthe metadata is to be copied.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.before_transform\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>before_transform</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nThis method is called right before the base class will\nstart processing. Dynamic properties or other delayed\nconfiguration could be performed in this method.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.transform\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>transform</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Required if the element does not operate in-place.\nTransforms one incoming buffer to one outgoing buffer.\nThe function is allowed to change size/timestamp/duration\nof the outgoing buffer.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.transform_ip\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>transform_ip</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Required if the element operates in-place.\nTransform the incoming buffer in-place.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.submit_input_buffer\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>submit_input_buffer</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Function which accepts a new input buffer and pre-processes it.\nThe default implementation performs caps (re)negotiation, then\nQoS if needed, and places the input buffer into the <em>queued_buf</em>\nmember variable. If the buffer is dropped due to QoS, it returns\nGST_BASE_TRANSFORM_FLOW_DROPPED. If this input buffer is not\ncontiguous with any previous input buffer, then <em>is_discont</em>\nis set to <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a>. (Since 1.6)</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass.generate_output\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>generate_output</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Called after each new input buffer is submitted repeatedly\nuntil it either generates an error or fails to generate an output\nbuffer. The default implementation takes the contents of the\n<em>queued_buf</em> variable, generates an output buffer if needed\nby calling the class <em>prepare_output_buffer</em>, and then\ncalls either <em>transform</em> or <em>transform_ip</em>. Elements that don't\ndo 1-to-1 transformations on input to output buffers can either\nreturn GST_BASE_TRANSFORM_FLOW_DROPPED or simply not generate\nan output buffer until they are ready to do so. (Since 1.6)</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseTransformClass._gst_reserved\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> <em><code>_gst_reserved</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});