fragment_downloaded_cb({"url": "libgstbase-doc-1.0/c/gstbasesrc.html#GstBaseSrcClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBaseSrcClass\">\n\t\t<h3 id=\"struct-gstbasesrcclass\">\n\t\tstruct GstBaseSrcClass\n\t</h3>\n\n\t\t<p>Subclasses can override any of the available virtual methods or not, as\nneeded. At the minimum, the <em>create</em> method should be overridden to produce\nbuffers.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"fields\">Fields</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.parent_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstElementClass\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstElementClass\">GstElementClass</a> <em><code>parent_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Element parent class</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.get_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>get_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Called to get the caps to report</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.negotiate\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>negotiate</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Negotiated the caps with the peer.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.fixate\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>fixate</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Called during negotiation if caps need fixating. Implement instead of\nsetting a fixate function on the source pad.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.set_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>set_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Notify subclass of changed output caps</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.decide_allocation\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>decide_allocation</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>configure the allocation query</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.start\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>start</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Start processing. Subclasses should open resources and prepare\nto produce data. Implementation should call <a href=\"../../libgstbase-doc-1.0/c/gstbasesrc.html#gst_base_src_start_complete\">gst_base_src_start_complete</a>\nwhen the operation completes, either from the current thread or any other\nthread that finishes the start operation asynchronously.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.stop\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>stop</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Stop processing. Subclasses should use this to close resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.get_times\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>get_times</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Given a buffer, return the start and stop time when it\nshould be pushed out. The base class will sync on the clock using\nthese times.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.get_size\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>get_size</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Return the total size of the resource, in the format set by\n<a href=\"../../libgstbase-doc-1.0/c/gstbasesrc.html#gst_base_src_set_format\">gst_base_src_set_format</a>.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.is_seekable\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>is_seekable</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Check if the source can seek</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.prepare_seek_segment\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>prepare_seek_segment</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Prepare the <a href=\"../../libgstreamer-doc-1.0/c/gstsegment.html#GstSegment\">GstSegment</a> that will be passed to the\n<a href=\"../../libgstbase-doc-1.0/c/gstbasesrc.html#GstBaseSrcClass.do_seek\">GstBaseSrcClass.do_seek</a>() vmethod for executing a seek\nrequest. Sub-classes should override this if they support seeking in\nformats other than the configured native format. By default, it tries to\nconvert the seek arguments to the configured native format and prepare a\nsegment in that format.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.do_seek\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>do_seek</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Perform seeking on the resource to the indicated segment.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.unlock\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>unlock</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Unlock any pending access to the resource. Subclasses should unblock\nany blocked function ASAP. In particular, any create function in\nprogress should be unblocked and should return GST_FLOW_FLUSHING. Any\nfuture <a href=\"../../libgstbase-doc-1.0/c/gstbasesrc.html#GstBaseSrcClass.create\">GstBaseSrcClass.create</a>() function call should also return\nGST_FLOW_FLUSHING until the <a href=\"../../libgstbase-doc-1.0/c/gstbasesrc.html#GstBaseSrcClass.unlock_stop\">GstBaseSrcClass.unlock_stop</a>() function has\nbeen called.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.unlock_stop\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>unlock_stop</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Clear the previous unlock request. Subclasses should clear any\nstate they set during <a href=\"../../libgstbase-doc-1.0/c/gstbasesrc.html#GstBaseSrcClass.unlock\">GstBaseSrcClass.unlock</a>(), such as clearing command\nqueues.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.query\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>query</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Handle a requested query.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Override this to implement custom event handling.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.create\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>create</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Ask the subclass to create a buffer with offset and size.  When the\nsubclass returns GST_FLOW_OK, it MUST return a buffer of the requested size\nunless fewer bytes are available because an EOS condition is near. No\nbuffer should be returned when the return value is different from\nGST_FLOW_OK. A return value of GST_FLOW_EOS signifies that the end of\nstream is reached. The default implementation will call\n<a href=\"../../libgstbase-doc-1.0/c/gstbasesrc.html#GstBaseSrcClass.alloc\">GstBaseSrcClass.alloc</a>() and then call <a href=\"../../libgstbase-doc-1.0/c/gstbasesrc.html#GstBaseSrcClass.fill\">GstBaseSrcClass.fill</a>().</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.alloc\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>alloc</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Ask the subclass to allocate a buffer with for offset and size. The\ndefault implementation will create a new buffer from the negotiated allocator.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass.fill\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>fill</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Ask the subclass to fill the buffer with data for offset and size. The\npassed buffer is guaranteed to hold the requested amount of bytes.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseSrcClass._gst_reserved\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> <em><code>_gst_reserved</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});