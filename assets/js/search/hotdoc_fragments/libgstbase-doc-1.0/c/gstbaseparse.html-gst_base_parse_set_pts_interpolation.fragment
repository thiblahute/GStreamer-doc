fragment_downloaded_cb({"url": "libgstbase-doc-1.0/c/gstbaseparse.html#gst_base_parse_set_pts_interpolation", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_base_parse_set_pts_interpolation\">\n\t\t<h3 id=\"gst_base_parse_set_pts_interpolation1\">\n\t<span><code>gst_base_parse_set_pts_interpolation</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_base_parse_set_pts_interpolation (<a title=\"GstBaseParse\" href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer-libs/html/GstBaseParse.html#GstBaseParse-struct\">GstBaseParse</a> * parse,\n                                      <a title=\"gboolean\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gboolean\">gboolean</a> pts_interpolate)</pre>\n\n<p>By default, the base class will guess PTS timestamps using a simple\ninterpolation (previous timestamp + duration), which is incorrect for\ndata streams with reordering, where PTS can go backward. Sub-classes\nimplementing such formats should disable PTS interpolation.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters14\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>parse:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer-libs/html/GstBaseParse.html#GstBaseParse-struct\">GstBaseParse</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pts_interpolate:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if parser should interpolate PTS timestamps</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});