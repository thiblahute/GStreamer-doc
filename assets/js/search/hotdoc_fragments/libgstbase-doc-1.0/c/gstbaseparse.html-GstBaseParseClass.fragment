fragment_downloaded_cb({"url": "libgstbase-doc-1.0/c/gstbaseparse.html#GstBaseParseClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBaseParseClass\">\n\t\t<h3 id=\"struct-gstbaseparseclass\">\n\t\tstruct GstBaseParseClass\n\t</h3>\n\n\t\t<p>Subclasses can override any of the available virtual methods or not, as\nneeded. At minimum <em>handle_frame</em> needs to be overridden.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"fields\">Fields</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.parent_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstElementClass\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstElementClass\">GstElementClass</a> <em><code>parent_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the parent class</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.start\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>start</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element starts processing.\nAllows opening external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.stop\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>stop</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element stops processing.\nAllows closing external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.set_sink_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>set_sink_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nAllows the subclass to be notified of the actual caps set.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.handle_frame\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>handle_frame</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Parses the input data into valid frames as defined by subclass\nwhich should be passed to <a href=\"../../libgstbase-doc-1.0/c/gstbaseparse.html#gst_base_parse_finish_frame\">gst_base_parse_finish_frame</a>.\nThe frame's input buffer is guaranteed writable,\nwhereas the input frame ownership is held by caller\n(so subclass should make a copy if it needs to hang on).\nInput buffer (data) is provided by baseclass with as much\nmetadata set as possible by baseclass according to upstream\ninformation and/or subclass settings,\nthough subclass may still set buffer timestamp and duration\nif desired.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.pre_push_frame\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>pre_push_frame</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled just prior to pushing a frame (after any pending\nevents have been sent) to give subclass a chance to perform\nadditional actions at this time (e.g. tag sending) or to\ndecide whether this buffer should be dropped or not\n(e.g. custom segment clipping).</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.convert\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>convert</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nConvert between formats.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.sink_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>sink_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nEvent handler on the sink pad. This function should chain\nup to the parent implementation to let the default handler\nrun.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.src_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>src_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nEvent handler on the source pad. Should chain up to the\nparent to let the default handler run.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.get_sink_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>get_sink_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nAllows the subclass to do its own sink get caps if needed.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.detect\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>detect</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled until it doesn't return GST_FLOW_OK anymore for\nthe first buffers. Can be used by the subclass to detect\nthe stream format.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.sink_query\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>sink_query</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nQuery handler on the sink pad. This function should chain\nup to the parent implementation to let the default handler\nrun (Since 1.2)</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass.src_query\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>src_query</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nQuery handler on the source pad. Should chain up to the\nparent to let the default handler run (Since 1.2)</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBaseParseClass._gst_reserved\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> <em><code>_gst_reserved</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n"});