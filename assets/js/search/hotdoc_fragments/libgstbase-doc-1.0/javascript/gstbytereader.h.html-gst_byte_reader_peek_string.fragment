fragment_downloaded_cb({"url": "libgstbase-doc-1.0/javascript/gstbytereader.h.html#gst_byte_reader_peek_string", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_byte_reader_peek_string\">\n\t\t<h3 id=\"gst_byte_reader_peek_string-not-introspectable\">\n\t<span><code>gst_byte_reader_peek_string (not introspectable)</code></span>\n</h3>\n\n\t\t<pre class=\"raw_code\">\n#define gst_byte_reader_peek_string(reader,str) \\\n    gst_byte_reader_peek_string_utf8(reader,str)\n</pre>\n\n<p>Returns a constant pointer to the current data position if there is\na NUL-terminated string in the data (this could be just a NUL terminator).\nThe current position will be maintained. This will work for any\nNUL-terminated string with a character width of 8 bits, so ASCII,\nUTF-8, ISO-8859-N etc.</p>\n<p>This function will fail if no NUL-terminator was found in in the data.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters68\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>reader:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstbase-doc-1.0/gstbytereader.h.html#GstByteReader\">GstBase.ByteReader</a> instance</p>\n</td>\n<td>\n reader\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>str:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>address of a\ngchar pointer variable in which to store the result</p>\n</td>\n<td>\n str\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns14\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">true</a> if a string could be skipped, <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">false</a> otherwise.</p>\n\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});