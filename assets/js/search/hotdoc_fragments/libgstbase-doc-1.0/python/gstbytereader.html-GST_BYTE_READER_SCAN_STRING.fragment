fragment_downloaded_cb({"url": "libgstbase-doc-1.0/python/gstbytereader.html#GST_BYTE_READER_SCAN_STRING", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_BYTE_READER_SCAN_STRING\">\n\t\t<h3 id=\"gst_byte_reader_scan_string-not-introspectable\">\n\t<span><code>GST_BYTE_READER_SCAN_STRING (not introspectable)</code></span>\n</h3>\n\n\t\t<pre class=\"raw_code\">\n#define GST_BYTE_READER_SCAN_STRING(bits) \\\nstatic guint \\\ngst_byte_reader_scan_string_utf##bits (const GstByteReader * reader) \\\n{ \\\n  guint len, off, max_len; \\\n  \\\n  max_len = (reader-&gt;size - reader-&gt;byte) / sizeof (guint##bits); \\\n  \\\n  /* need at least a single NUL terminator */ \\\n  if (max_len &lt; 1) \\\n    return 0; \\\n  \\\n  len = 0; \\\n  off = reader-&gt;byte; \\\n  /* endianness does not matter if we are looking for a NUL terminator */ \\\n  while (GST_READ_UINT##bits##_LE (&amp;reader-&gt;data[off]) != 0) { \\\n    ++len; \\\n    off += sizeof (guint##bits); \\\n    /* have we reached the end without finding a NUL terminator? */ \\\n    if (len == max_len) \\\n      return 0; \\\n  } \\\n  /* return size in bytes including the NUL terminator (hence the +1) */ \\\n  return (len + 1) * sizeof (guint##bits); \\\n}\n</pre>\n\n\n\n\n\n\n</div>\n\n\n\n"});