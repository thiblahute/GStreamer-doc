fragment_downloaded_cb({"url": "libgstbase-doc-1.0/python/gstbytereader.h.html#gst_byte_reader_masked_scan_uint32", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_byte_reader_masked_scan_uint32\">\n\t\t<h3 id=\"gstbasebytereadermasked_scan_uint32\">\n\t<span><code>GstBase.ByteReader.masked_scan_uint32</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef GstBase.ByteReader.masked_scan_uint32 (self, mask, pattern, offset, size):\n    #python wrapper for 'gst_byte_reader_masked_scan_uint32'</pre>\n\n<p>Scan for pattern <em>pattern</em> with applied mask <em>mask</em> in the byte reader data,\nstarting from offset <em>offset</em> relative to the current position.</p>\n<p>The bytes in <em>pattern</em> and <em>mask</em> are interpreted left-to-right, regardless\nof endianness.  All four bytes of the pattern must be present in the\nbyte reader data for it to match, even if the first or last bytes are masked\nout.</p>\n<p>It is an error to call this function without making sure that there is\nenough data (offset+size bytes) in the byte reader.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters53\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>reader:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../libgstbase-doc-1.0/gstbytereader.h.html#GstByteReader\">GstBase.ByteReader</a></p>\n</td>\n<td>\n<a title=\"GstBase.ByteReader\" href=\"../../libgstbase-doc-1.0/gstbytereader.h.html#GstByteReader\">GstBase.ByteReader</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>mask:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>mask to apply to data before matching against <em>pattern</em></p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pattern:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pattern to match (after mask is applied)</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>offset:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>offset from which to start scanning, relative to the current\nposition</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>size:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>number of bytes to scan from offset</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns47\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>offset of the first match, or -1 if no match was found.</p>\n<p>Example:</p>\n<pre><code class=\"language-[\"> // Assume the reader contains 0x00 0x01 0x02 ... 0xfe 0xff\n\n gst_byte_reader_masked_scan_uint32 (reader, 0xffffffff, 0x00010203, 0, 256);\n // -&gt; returns 0\n gst_byte_reader_masked_scan_uint32 (reader, 0xffffffff, 0x00010203, 1, 255);\n // -&gt; returns -1\n gst_byte_reader_masked_scan_uint32 (reader, 0xffffffff, 0x01020304, 1, 255);\n // -&gt; returns 1\n gst_byte_reader_masked_scan_uint32 (reader, 0xffff, 0x0001, 0, 256);\n // -&gt; returns -1\n gst_byte_reader_masked_scan_uint32 (reader, 0xffff, 0x0203, 0, 256);\n // -&gt; returns 0\n gst_byte_reader_masked_scan_uint32 (reader, 0xffff0000, 0x02030000, 0, 256);\n // -&gt; returns 2\n gst_byte_reader_masked_scan_uint32 (reader, 0xffff0000, 0x02030000, 0, 4);\n // -&gt; returns -1\n</code></pre>\n\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});