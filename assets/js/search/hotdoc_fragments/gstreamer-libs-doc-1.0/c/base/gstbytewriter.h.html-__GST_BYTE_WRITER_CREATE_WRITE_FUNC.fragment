fragment_downloaded_cb({"url": "gstreamer-libs-doc-1.0/c/base/gstbytewriter.h.html#__GST_BYTE_WRITER_CREATE_WRITE_FUNC", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"__GST_BYTE_WRITER_CREATE_WRITE_FUNC\">\n\t\t<h3 id=\"__gst_byte_writer_create_write_func\">\n\t<span><code>__GST_BYTE_WRITER_CREATE_WRITE_FUNC</code></span>\n</h3>\n\n\t\t<pre class=\"raw_code\">\n#define __GST_BYTE_WRITER_CREATE_WRITE_FUNC(bits,type,name,write_func) \\\nstatic inline void \\\ngst_byte_writer_put_##name##_unchecked (GstByteWriter *writer, type val) \\\n{ \\\n  guint8 *write_data; \\\n  \\\n  write_data = (guint8 *) writer-&gt;parent.data + writer-&gt;parent.byte; \\\n  write_func (write_data, val); \\\n  writer-&gt;parent.byte += bits/8; \\\n  writer-&gt;parent.size = MAX (writer-&gt;parent.size, writer-&gt;parent.byte); \\\n} \\\n\\\nstatic inline gboolean \\\n_gst_byte_writer_put_##name##_inline (GstByteWriter *writer, type val) \\\n{ \\\n  g_return_val_if_fail (writer != NULL, FALSE); \\\n  \\\n  if (G_UNLIKELY (!_gst_byte_writer_ensure_free_space_inline(writer, bits/8))) \\\n    return FALSE; \\\n  \\\n  gst_byte_writer_put_##name##_unchecked (writer, val); \\\n  \\\n  return TRUE; \\\n}\n</pre>\n\n\n\n\n\n\n</div>\n\n\n"});