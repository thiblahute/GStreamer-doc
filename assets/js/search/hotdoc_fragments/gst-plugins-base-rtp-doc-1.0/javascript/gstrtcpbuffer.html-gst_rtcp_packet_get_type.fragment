fragment_downloaded_cb({"url": "gst-plugins-base-rtp-doc-1.0/javascript/gstrtcpbuffer.html#gst_rtcp_packet_get_type", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_rtcp_packet_get_type\">\n\t\t<h3 id=\"gstrtprtcppacketprototypeget_type\">\n\t<span><code>GstRtp.RTCPPacket.prototype.get_type</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\nfunction GstRtp.RTCPPacket.prototype.get_type(): {\n    // javascript wrapper for 'gst_rtcp_packet_get_type'\n}</pre>\n\n<p>Get the packet type of the packet pointed to by <em>packet</em>.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters47\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>packet:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a valid <a href=\"../../gst-plugins-base-rtp-doc-1.0/gstrtcpbuffer.html#GstRTCPPacket\">GstRtp.RTCPPacket</a></p>\n</td>\n<td>\n<a title=\"GstRtp.RTCPPacket\" href=\"../../gst-plugins-base-rtp-doc-1.0/gstrtcpbuffer.html#GstRTCPPacket\">GstRtp.RTCPPacket</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns38\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>The packet type or GST_RTCP_TYPE_INVALID when <em>packet</em> is not\npointing to a valid packet.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstRtp.RTCPType\" href=\"../../gst-plugins-base-rtp-doc-1.0/gstrtcpbuffer.html#GstRTCPType\">GstRtp.RTCPType</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});