fragment_downloaded_cb({"url": "gst-plugins-base-rtp-doc-1.0/c/gstrtpbasedepayload.html#_GstRTPBaseDepayloadClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GstRTPBaseDepayloadClass\">\n\t\t<h3 id=\"struct-_gstrtpbasedepayloadclass\">\n\t\tstruct _GstRTPBaseDepayloadClass\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\nstruct _GstRTPBaseDepayloadClass\n{\n  GstElementClass parent_class;\n\n  /* virtuals, inform the subclass of the caps. */\n  gboolean (*set_caps) (GstRTPBaseDepayload *filter, GstCaps *caps);\n\n  /* pure virtual function, child must implement either this method\n   * or the process_rtp_packet virtual method to process incoming\n   * rtp packets. If the child returns a buffer without a valid timestamp,\n   * the timestamp of @in will be applied to the result buffer and the\n   * buffer will be pushed. If this function returns %NULL, nothing is\n   * pushed.  */\n  GstBuffer * (*process) (GstRTPBaseDepayload *base, GstBuffer *in);\n\n  /* non-pure function used to to signal the depayloader about packet loss. the\n   * timestamp and duration are the estimated values of the lost packet.\n   * The default implementation of this message pushes a segment update. */\n  gboolean (*packet_lost) (GstRTPBaseDepayload *filter, GstEvent *event);\n\n  /* the default implementation does the default actions for events but\n   * implementation can override. */\n  gboolean (*handle_event) (GstRTPBaseDepayload * filter, GstEvent * event);\n\n  /* Optional. Same as the process virtual function, but slightly more\n   * efficient, since it is passed the rtp buffer structure that has already\n   * been mapped (with GST_MAP_READ) by the base class and thus does not have\n   * to be mapped again by the subclass. Can be used by the subclass to process\n   * incoming rtp packets. If the subclass returns a buffer without a valid\n   * timestamp, the timestamp of the input buffer will be applied to the result\n   * buffer and the output buffer will be pushed out. If this function returns\n   * %NULL, nothing is pushed out.\n   *\n   * Since: 1.6\n   */\n  GstBuffer * (*process_rtp_packet) (GstRTPBaseDepayload *base, GstRTPBuffer * rtp_buffer);\n\n};\n</pre>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"fields1\">Fields</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"_GstRTPBaseDepayloadClass.parent_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstElementClass\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstElementClass\">GstElementClass</a> <em><code>parent_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"_GstRTPBaseDepayloadClass.set_caps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>set_caps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"_GstRTPBaseDepayloadClass.process\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>process</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"_GstRTPBaseDepayloadClass.packet_lost\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>packet_lost</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"_GstRTPBaseDepayloadClass.handle_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>handle_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"_GstRTPBaseDepayloadClass.process_rtp_packet\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>process_rtp_packet</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});