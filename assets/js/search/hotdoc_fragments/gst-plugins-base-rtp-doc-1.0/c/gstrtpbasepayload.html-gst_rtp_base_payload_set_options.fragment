fragment_downloaded_cb({"url": "gst-plugins-base-rtp-doc-1.0/c/gstrtpbasepayload.html#gst_rtp_base_payload_set_options", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_rtp_base_payload_set_options\">\n\t\t<h3 id=\"gst_rtp_base_payload_set_options1\">\n\t<span><code>gst_rtp_base_payload_set_options</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_rtp_base_payload_set_options (<a title=\"GstRTPBasePayload\" href=\"../../gst-plugins-base-rtp-doc-1.0/c/gstrtpbasepayload.html#GstRTPBasePayload\">GstRTPBasePayload</a> * payload,\n                                  const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * media,\n                                  <a title=\"gboolean\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gboolean\">gboolean</a> dynamic,\n                                  const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * encoding_name,\n                                  <a title=\"guint32\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint32\">guint32</a> clock_rate)</pre>\n\n<p>Set the rtp options of the payloader. These options will be set in the caps\nof the payloader. Subclasses must call this method before calling\n<a href=\"../../gst-plugins-base-rtp-doc-1.0/c/gstrtpbasepayload.html#gst_rtp_base_payload_push\">gst_rtp_base_payload_push</a> or <a href=\"../../gst-plugins-base-rtp-doc-1.0/c/gstrtpbasepayload.html#gst_rtp_base_payload_set_outcaps\">gst_rtp_base_payload_set_outcaps</a>.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters3\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>payload:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../gst-plugins-base-rtp-doc-1.0/c/gstrtpbasepayload.html#GstRTPBasePayload\">GstRTPBasePayload</a></p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>media:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the media type (typically \"audio\" or \"video\")</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>dynamic:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>if the payload type is dynamic</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>encoding_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the encoding name</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>clock_rate:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the clock rate of the media</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});