fragment_downloaded_cb({"url": "gst-plugins-base-rtp-doc-1.0/python/gstrtpbasepayload.html#GstRTPBasePayload:stats", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRTPBasePayload:stats\">\n\t\t<h3 class=\"method\" id=\"stats\">\n\t<span><code>stats</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cstats\u201d <span class=\"type\">Gst.Structure (not introspectable)</span>\n</pre>\n\n<p>Various payloader statistics retrieved atomically (and are therefore\nsynchroized with each other), these can be used e.g. to generate an\nRTP-Info header. This property return a GstStructure named\napplication/x-rtp-payload-stats containing the following fields relating to\nthe last processed buffer and current state of the stream being payloaded:</p>\n<pre><code> * `clock-rate` :#G_TYPE_UINT, clock-rate of the\n stream\n\n\n * `running-time` :#G_TYPE_UINT64, running time\n\n\n\n * `seqnum` :#G_TYPE_UINT, sequence number, same as\n #GstRTPBasePayload:seqnum\n\n\n * `timestamp` :#G_TYPE_UINT, RTP timestamp, same as\n #GstRTPBasePayload:timestamp\n\n\n * `ssrc` :#G_TYPE_UINT, The SSRC in use\n\n\n\n * `pt` :#G_TYPE_UINT, The Payload type in use, same as\n #GstRTPBasePayload:pt\n\n\n * `seqnum-offset` :#G_TYPE_UINT, The current offset added to the\n seqnum\n\n\n * `timestamp-offset` :#G_TYPE_UINT, The current offset added to the\n timestamp\n</code></pre>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n</p>\n\n</div>\n\n\n\n"});