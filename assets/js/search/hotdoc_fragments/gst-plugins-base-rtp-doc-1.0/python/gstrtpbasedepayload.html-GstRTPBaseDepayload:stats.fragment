fragment_downloaded_cb({"url": "gst-plugins-base-rtp-doc-1.0/python/gstrtpbasedepayload.html#GstRTPBaseDepayload:stats", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRTPBaseDepayload:stats\">\n\t\t<h3 class=\"method\" id=\"stats\">\n\t<span><code>stats</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cstats\u201d <span class=\"type\">Gst.Structure (not introspectable)</span>\n</pre>\n\n<p>Various depayloader statistics retrieved atomically (and are therefore\nsynchroized with each other). This property return a GstStructure named\napplication/x-rtp-depayload-stats containing the following fields relating to\nthe last processed buffer and current state of the stream being depayloaded:</p>\n<pre><code> * `clock-rate` :#G_TYPE_UINT, clock-rate of the\n stream\n\n\n * `npt-start` :#G_TYPE_UINT64, time of playback start\n\n\n\n * `npt-stop` :#G_TYPE_UINT64, time of playback stop\n\n\n\n * `play-speed` :#G_TYPE_DOUBLE, the playback speed\n\n\n\n * `play-scale` :#G_TYPE_DOUBLE, the playback scale\n\n\n\n * `running-time-dts` :#G_TYPE_UINT64, the last running-time of the\n  last DTS\n\n\n\n * `running-time-pts` :#G_TYPE_UINT64, the last running-time of the\n  last PTS\n\n\n\n * `seqnum` :#G_TYPE_UINT, the last seen seqnum\n\n\n\n * `timestamp` :#G_TYPE_UINT, the last seen RTP timestamp\n</code></pre>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n</p>\n\n</div>\n\n\n"});