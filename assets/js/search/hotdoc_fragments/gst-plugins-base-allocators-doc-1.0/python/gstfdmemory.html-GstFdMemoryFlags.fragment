fragment_downloaded_cb({"url": "gst-plugins-base-allocators-doc-1.0/python/gstfdmemory.html#GstFdMemoryFlags", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"GstFdMemoryFlags\">\n\t\t<h3 id=\"enum-gstallocatorsfdmemoryflags\">\n\t\tenum GstAllocators.FdMemoryFlags\n\t</h3>\n\n\t\t<p>Various flags to control the operation of the fd backed memory.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_FD_MEMORY_FLAG_NONE\"></a>\n\t\tGstAllocators.FdMemoryFlags.none\n\t\t</p>\n\t</td>\n\t<td><p>no flag</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_FD_MEMORY_FLAG_KEEP_MAPPED\"></a>\n\t\tGstAllocators.FdMemoryFlags.keep_mapped\n\t\t</p>\n\t</td>\n\t<td><p>once the memory is mapped,\nkeep it mapped until the memory is destroyed.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_FD_MEMORY_FLAG_MAP_PRIVATE\"></a>\n\t\tGstAllocators.FdMemoryFlags.map_private\n\t\t</p>\n\t</td>\n\t<td><p>do a private mapping instead of\nthe default shared mapping.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_FD_MEMORY_FLAG_DONT_CLOSE\"></a>\n\t\tGstAllocators.FdMemoryFlags.dont_close\n\t\t</p>\n\t</td>\n\t<td><p>don't close the file descriptor when\nthe memory is freed. Since: 1.10.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});