fragment_downloaded_cb({"url": "gst-plugins-base-rtsp-doc-1.0/c/gstrtspconnection.html#gst_rtsp_watch_wait_backlog", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"gst_rtsp_watch_wait_backlog\">\n\t\t<h3 id=\"gst_rtsp_watch_wait_backlog1\">\n\t<span><code>gst_rtsp_watch_wait_backlog</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstRTSPResult\" href=\"gstrtspdefs.html#GstRTSPResult\">GstRTSPResult</a>\ngst_rtsp_watch_wait_backlog (<a title=\"GstRTSPWatch\" href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-gstrtspconnection.html#GstRTSPWatch\">GstRTSPWatch</a> * watch,\n                             <a title=\"GTimeVal\" href=\"https://developer.gnome.org/glib/unstable/glib-Date-and-Time-Functions.html#GTimeVal\">GTimeVal</a> * timeout)</pre>\n\n<p>Wait until there is place in the backlog queue, <em>timeout</em> is reached\nor <em>watch</em> is set to flushing.</p>\n<p>If <em>timeout</em> is <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> this function can block forever. If <em>timeout</em>\ncontains a valid timeout, this function will return <a href=\"gstrtspdefs.html#GST_RTSP_ETIMEOUT\">GST_RTSP_ETIMEOUT</a>\nafter the timeout expired.</p>\n<p>The typically use of this function is when gst_rtsp_watch_write_data\nreturns <a href=\"gstrtspdefs.html#GST_RTSP_ENOMEM\">GST_RTSP_ENOMEM</a>. The caller then calls this function to wait for\nfree space in the backlog queue and try again.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters46\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>watch:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-gstrtspconnection.html#GstRTSPWatch\">GstRTSPWatch</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timeout:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-Date-and-Time-Functions.html#GTimeVal\">GTimeVal</a> timeout</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns33\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"gstrtspdefs.html#GST_RTSP_OK\">GST_RTSP_OK</a> when if there is room in queue.\n<a href=\"gstrtspdefs.html#GST_RTSP_ETIMEOUT\">GST_RTSP_ETIMEOUT</a> when <em>timeout</em> was reached.\n<a href=\"gstrtspdefs.html#GST_RTSP_EINTR\">GST_RTSP_EINTR</a> when <em>watch</em> is flushing\n<a href=\"gstrtspdefs.html#GST_RTSP_EINVAL\">GST_RTSP_EINVAL</a> when called with invalid parameters.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstRTSPResult\" href=\"gstrtspdefs.html#GstRTSPResult\">GstRTSPResult</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.4\n\t\t</p>\n\n</div>\n\n\n\n"});