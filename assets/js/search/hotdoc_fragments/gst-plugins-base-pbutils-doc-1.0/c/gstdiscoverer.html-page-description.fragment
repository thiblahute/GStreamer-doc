fragment_downloaded_cb({"url": "gst-plugins-base-pbutils-doc-1.0/c/gstdiscoverer.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstdiscoverer.h\">\n<h1 id=\"gstdiscoverer\">GstDiscoverer</h1><p>The <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-gstdiscoverer.html#GstDiscoverer-struct\">GstDiscoverer</a> is a utility object which allows to get as much\ninformation as possible from one or many URIs.</p>\n<p>It provides two APIs, allowing usage in blocking or non-blocking mode.</p>\n<p>The blocking mode just requires calling <a href=\"../../gst-plugins-base-pbutils-doc-1.0/c/gstdiscoverer.html#gst_discoverer_discover_uri\">gst_discoverer_discover_uri</a>\nwith the URI one wishes to discover.</p>\n<p>The non-blocking mode requires a running <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#GMainLoop\">GMainLoop</a> iterating a\n<a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#GMainContext\">GMainContext</a>, where one connects to the various signals, appends the\nURIs to be processed (through <a href=\"../../gst-plugins-base-pbutils-doc-1.0/c/gstdiscoverer.html#gst_discoverer_discover_uri_async\">gst_discoverer_discover_uri_async</a>) and then\nasks for the discovery to begin (through <a href=\"../../gst-plugins-base-pbutils-doc-1.0/c/gstdiscoverer.html#gst_discoverer_start\">gst_discoverer_start</a>).\nBy default this will use the GLib default main context unless you have\nset a custom context using <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#g-main-context-push-thread-default\">g_main_context_push_thread_default</a>.</p>\n<p>All the information is returned in a <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-gstdiscoverer.html#GstDiscovererInfo-struct\">GstDiscovererInfo</a> structure.</p>\n\n</div>\n\n\n"});