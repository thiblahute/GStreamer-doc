fragment_downloaded_cb({"url": "gst-plugins-bad-codecparsers-1.0/python/gsth265parser.html#gsth265parser-page", "fragment": "GstH265Parser \nIt offers you bitstream parsing in HEVC mode and non HEVC mode. To identify Nals in a bitstream and parse its headers you should call \nGstCodecParsers.H265Parser.identify_nalu to identify the following nalu in non HEVC bitstreams \nGstCodecParsers.H265Parser.identify_nalu_hevc to identify the nalu in HEVC bitstreams \nThen depending on the GstCodecParsers.H265NalUnitType of the newly parsed GstCodecParsers.H265NalUnit you should call the differents functions to parse the structure \nFrom GstCodecParsers.H265NalUnitType to GstCodecParsers.H265NalUnitType GstCodecParsers.H265Parser.parse_slice_hdr \nGST_H265_NAL_SEI gst_h265_parser_parse_sei not introspectable \nGstCodecParsers.H265NalUnitType GstCodecParsers.H265Parser.parse_vps \nGstCodecParsers.H265NalUnitType GstCodecParsers.H265Parser.parse_sps \nGstCodecParsers.H265NalUnitType GstCodecParsers.H265Parser.parse_pps \nAny other GstCodecParsers.H265Parser.parse_nal \nNote You should always call GstCodecParsers.H265Parser.parse_nal if you don t actually need GstCodecParsers.H265NalUnitType to be parsed for your personal use in order to guarantee that the GstCodecParsers.H265Parser is always up to date. \nFor more details about the structures look at the ITU T H.265 specifications you can download them from \n"});