fragment_downloaded_cb({"url": "gst-plugins-bad-codecparsers-1.0/gstmpegvideoparser.html#GstMpegVideoPictureType", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstMpegVideoPictureType\">\n\t\t<h3 id=\"gstmpegvideopicturetype\">\n\t\tGstMpegVideoPictureType\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\ntypedef enum {\n  GST_MPEG_VIDEO_PICTURE_TYPE_I = 0x01,\n  GST_MPEG_VIDEO_PICTURE_TYPE_P = 0x02,\n  GST_MPEG_VIDEO_PICTURE_TYPE_B = 0x03,\n  GST_MPEG_VIDEO_PICTURE_TYPE_D = 0x04\n} GstMpegVideoPictureType;\n</pre>\n\n<p>Picture type.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members6\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_MPEG_VIDEO_PICTURE_TYPE_I\"></a>\n\t\tGST_MPEG_VIDEO_PICTURE_TYPE_I\n\t\t</p>\n\t</td>\n\t<td><p>Intra-coded (I) frame</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_MPEG_VIDEO_PICTURE_TYPE_P\"></a>\n\t\tGST_MPEG_VIDEO_PICTURE_TYPE_P\n\t\t</p>\n\t</td>\n\t<td><p>Predictive-codec (P) frame</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_MPEG_VIDEO_PICTURE_TYPE_B\"></a>\n\t\tGST_MPEG_VIDEO_PICTURE_TYPE_B\n\t\t</p>\n\t</td>\n\t<td><p>Bidirectionally predictive-coded (B) frame</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 3</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_MPEG_VIDEO_PICTURE_TYPE_D\"></a>\n\t\tGST_MPEG_VIDEO_PICTURE_TYPE_D\n\t\t</p>\n\t</td>\n\t<td><p>D frame</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n"});