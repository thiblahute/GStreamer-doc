fragment_downloaded_cb({"url": "gst-plugins-bad-codecparsers-1.0/c/gsth264parser.html#gsth264parser", "fragment": "GstH264Parser \nIt offers bitstream parsing in both AVC length prefixed and Annex B x000001 start code prefix format. To identify a NAL unit in a bitstream and parse its headers first call \ngst_h264_parser_identify_nalu to identify a NAL unit in an Annex B type bitstream \ngst_h264_parser_identify_nalu_avc to identify a NAL unit in an AVC type bitstream \nThe following functions are then available for parsing the structure of the GstH264NalUnit depending on the GstH264NalUnitType \nFrom GST_H264_NAL_SLICE to GST_H264_NAL_SLICE_IDR gst_h264_parser_parse_slice_hdr \nGST_H264_NAL_SEI gst_h264_parser_parse_sei \nGST_H264_NAL_SPS gst_h264_parser_parse_sps \nGST_H264_NAL_PPS gst_h264_parser_parse_pps \nAny other gst_h264_parser_parse_nal \nOne of these functions must be called on every NAL unit in the bitstream in order to keep the internal structures of the GstH264NalParser up to date. It is legal to call gst_h264_parser_parse_nal on NAL units of any type if no special parsing of the current NAL unit is required by the application. \nFor more details about the structures look at the ITU T H.264 and ISO IEC MPEG Part specifications available at \nITU T H.264 http www.itu.int rec T REC H.264 \nISO IEC http www.iso.org iso iso_catalogue catalogue_tc catalogue_detail.htm csnumber \n"});