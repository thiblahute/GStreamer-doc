fragment_downloaded_cb({"url": "rtp.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"rtp.md\">\n<h1 id=\"rtp-and-rtsp-support\">RTP and RTSP support</h1>\n<p>GStreamer has excellent support for both RTP and RTSP, and its RTP/RTSP\nstack has proved itself over years of being widely used in production use\nin a variety of mission-critical and low-latency scenarios, from small\nembedded devices to large-scale videoconferencing and command-and-control\nsystems.</p>\n<h2 id=\"gstreamer-rtsp-server\">GStreamer RTSP Server</h2>\n<p>GStreamer's RTSP server (gst-rtsp-server) is a featureful and easy-to-use\nlibrary that allows applications to implement a complete RTSP server with\njust a couple of lines of code.</p>\n<p>It is multi-threaded, scalable and flexible, and provides support for\nstatic or dynamic mount points, authentication, retransmission (rtx),\nencryption (srtp, secure RTP), UDP unicast and multicast as well as\nTCP interleaving, seeking, and optionally also cgroup integration for\nadvanced resource management and control. It can also distribute a\nGStreamer net client clock to GStreamer RTSP clients to facilitate\nmulti-device synchronization.</p>\n<h2 id=\"gstreamer-rtsp-client\">GStreamer RTSP Client</h2>\n<p>The GStreamer <tt>rtspsrc</tt> element from gst-plugins-good is GStreamer's\nhigh-level RTSP client abstraction. It can be used as a standalone element\ndirectly, or can be used via <tt>playbin</tt> by passing an rtsp:// URI to\nplaybin. <tt>rtspsrc</tt> features a number of GObject properties that allow\nyou to configure it in all kinds of different ways, most notably a\n<tt>\"latency\"</tt> property to configure the default jitterbuffer latency,\nwhich you may want to configure to a lower value to achieve lower latency.</p>\n<h2 id=\"rtp-components\">RTP components</h2>\n<p>Most of GStreamer's key RTP components live in gst-plugins-good:</p>\n<ul>\n<li>The <tt><a href=\"/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-plugin-rtpmanager.html\">rtpmanager</a></tt>\nplugin contains elements like\n<tt><a href=\"/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-rtpbin.html\">rtpbin</a></tt> and\n<tt><a href=\"/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-rtpjitterbuffer.html\">rtpjitterbuffer</a></tt></li>\n<li>The <tt><a href=\"/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-plugin-rtp.html\">rtp</a></tt> plugin\ncontains RTP payloading and depayloading elements for many different\ncodecs and container formats</li>\n</ul>\n<p>with some lower-level libraries in gst-plugins-base:</p>\n<ul>\n<li>The <a href=\"/data/doc/gstreamer/head/gst-plugins-base-libs/html/gstreamer-rtp.html\">GStreamer RTP library</a>\ncontains things such as RTP payloader/depayloader base classes and functions to handle RTP and RTCP buffers</li>\n<li>The <a href=\"/data/doc/gstreamer/head/gst-plugins-base-libs/html/gstreamer-mikey.html\">GStreamer MIKEY library</a>\ncontains helper functions to deal with MIKEY messages for secure RTP</li>\n<li>The <a href=\"/data/doc/gstreamer/head/gst-plugins-base-libs/html/gstreamer-rtsp.html\">GStreamer RTSP library</a>\ncontains low-level RTSP functionality used by gst-rtsp-server and higher-level objects such as rtspsrc.</li>\n<li>The <a href=\"/data/doc/gstreamer/head/gst-plugins-base-libs/html/gstreamer-sdp.html\">GStreamer SDP library</a>\ncontains utility functions for SDP message parsing and creation.</li>\n</ul>\n<p>Some of the main components are:</p>\n<ul>\n<li><tt><a href=\"/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-rtpbin.html\">rtpbin</a></tt>\nis the high-level RTP component and supports sending\nand receiving, just sending or just receiving data, with and without RTCP\nsupport. This is the bin that does it all: it adapts dynamically to your\nneeds based on the requested pads; it also contains an rtpjitterbuffer.</li>\n<li><tt><a href=\"/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-rtpjitterbuffer.html\">rtpjitterbuffer</a></tt>\nis an RTP buffer that controls network jitter and reorders packets. It also\ndumps packets that arrive to late, handles packet retransmission and lost\npacket notification and adjusts for sender-receiver clock drift.</li>\n<li><tt><a href=\"/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-rtpptdemux.html\">rtpptdemux</a></tt>\nis an element that usually sits on the rtpbin src\npad and will detect any new payload types that arrive in the RTP stream.\nIt will then create a pad for that new payload and you can connect a\ndepayloader/decoder pipeline to that pad.</li>\n<li><tt><a href=\"/data/doc/gstreamer/head/gst-plugins-good-plugins/html/gst-plugins-good-plugins-rtpssrcdemux.html\">rtpssrcdemux</a></tt>\nis an element that usually sits on the rtpbin src\npad and will detect any new SSRCs that arrive in the RTP stream.\nIt will then create a pad for that new SSRC and you can connect a\ndepayloader/decoder pipeline to that pad.</li>\n<li><tt><a href=\"/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-gstrtpbasedepayload.html\">GstRTPBaseDepayload</a></tt>\nis a base class for RTP depayloaders</li>\n<li><tt><a href=\"/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-gstrtpbasepayload.html\">GstRTPBasePayload</a></tt>\nis a base class for RTP payloaders</li>\n<li><tt><a href=\"/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-gstrtpbaseaudiopayload.html\">GstRTPBaseAudioPayload</a>\nis a base class for audio RTP payloaders</tt></li>\n</ul>\n<p>Note that many RTP elements assume they receive RTP buffers with\n<a href=\"/data/doc/gstreamer/head/gstreamer-libs/html/gstreamer-libs-GstNetAddressMeta.html\">GstNetAddressMeta</a>\nmeta data set on them (as udpsrc will produce).</p>\n\n</div>\n\n\n\t"});