fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/mp4mux.html#mp4mux", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"mp4mux\">\n\t\t<h3 id=\"mp4mux2\">\n\tmp4mux\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\nGObject\n    <span class=\"lineart\">\u2570\u2500\u2500</span>GInitiallyUnowned\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span>mp4mux\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>This element merges streams (audio and video) into ISO MPEG-4 (.mp4) files.</p>\n<p>The following background intends to explain why various similar muxers\nare present in this plugin.</p>\n<p>The <ulink url=\"http://www.apple.com/quicktime/resources/qtfileformat.pdf\">\nQuickTime file format specification</ulink> served as basis for the MP4 file\nformat specification (mp4mux), and as such the QuickTime file structure is\nnearly identical to the so-called ISO Base Media file format defined in\nISO 14496-12 (except for some media specific parts).\nIn turn, the latter ISO Base Media format was further specialized as a\nMotion JPEG-2000 file format in ISO 15444-3 (mj2mux)\nand in various 3GPP(2) specs (3gppmux).\nThe fragmented file features defined (only) in ISO Base Media are used by\nISMV files making up (a.o.) Smooth Streaming (ismlmux).</p>\n<p>A few properties (#GstMp4Mux:movie-timescale, GstMp4Mux:trak-timescale)\nallow adjusting some technical parameters, which might be useful in (rare)\ncases to resolve compatibility issues in some situations.</p>\n<p>Some other properties influence the result more fundamentally.\nA typical mov/mp4 file's metadata (aka moov) is located at the end of the\nfile, somewhat contrary to this usually being called \"the header\".\nHowever, a GstMp4Mux:faststart file will (with some effort) arrange this to\nbe located near start of the file, which then allows it e.g. to be played\nwhile downloading. Alternatively, rather than having one chunk of metadata at\nstart (or end), there can be some metadata at start and most of the other\ndata can be spread out into fragments of GstMp4Mux:fragment-duration.\nIf such fragmented layout is intended for streaming purposes, then\nGstMp4Mux:streamable allows foregoing to add index metadata (at the end of\nfile).</p>\n<h2 id=\"example-pipelines1\">Example pipelines</h2>\n<pre><code>gst-launch-1.0 gst-launch-1.0 v4l2src num-buffers=50 ! queue ! x264enc ! mp4mux ! filesink location=video.mp4\n</code></pre>\n<p>Records a video stream captured from a v4l2 device, encodes it into H.264\nand muxes it into an mp4 file.</p>\n\n</div>\n\n</div>\n\n\n"});