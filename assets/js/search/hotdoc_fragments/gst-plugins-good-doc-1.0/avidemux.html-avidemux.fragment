fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/avidemux.html#avidemux", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"avidemux\">\n\t\t<h3 id=\"avidemux2\">\n\tavidemux\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span>avidemux\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>Demuxes an .avi file into raw or compressed audio and/or video streams.</p>\n<p>This element supports both push and pull-based scheduling, depending on the\ncapabilities of the upstream elements.</p>\n<h2 id=\"example-launch-line1\">Example launch line</h2>\n<pre><code>gst-launch-1.0 filesrc location=test.avi ! avidemux name=demux  demux.audio_00 ! decodebin ! audioconvert ! audioresample ! autoaudiosink   demux.video_00 ! queue ! decodebin ! videoconvert ! videoscale ! autovideosink\n</code></pre>\n<p>Play (parse and decode) an .avi file and try to output it to\nan automatically detected soundcard and videosink. If the AVI file contains\ncompressed audio or video data, this will only work if you have the\nright decoder elements/plugins installed.</p>\n\n</div>\n\n</div>\n\n\n"});