fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/multifilesrc.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"multifilesrc\">\n<h1 id=\"multifilesrc1\">multifilesrc</h1><p>Reads buffers from sequentially named files. If used together with an image\ndecoder, one needs to use the <a href=\"multifilesrc.html#GstMultiFileSrc:caps\">caps</a> property or a capsfilter\nto force to caps containing a framerate. Otherwise image decoders send EOS\nafter the first picture. We also need a videorate element to set timestamps\non all buffers after the first one in accordance with the framerate.</p>\n<p>File names are created by replacing \"%d\" with the index using printf.</p>\n<h2 id=\"example-launch-line\">Example launch line</h2>\n<pre><code>gst-launch-1.0 multifilesrc location=\"img.%04d.png\" index=0 caps=\"image/png,framerate=\\(fraction\\)12/1\" ! \\\n    pngdec ! videoconvert ! videorate ! theoraenc ! oggmux ! \\\n    filesink location=\"images.ogg\"\n</code></pre>\n<p>This pipeline creates a video file \"images.ogg\" by joining multiple PNG\nfiles named img.0000.png, img.0001.png, etc.</p>\n\n</div>\n\n\n"});