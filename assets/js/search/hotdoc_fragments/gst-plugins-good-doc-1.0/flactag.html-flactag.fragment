fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/flactag.html#flactag", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"flactag\">\n\t\t<h3 id=\"flactag2\">\n\tflactag\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\nGObject\n    <span class=\"lineart\">\u2570\u2500\u2500</span>GInitiallyUnowned\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span>flactag\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>The flactag element can change the tag contained within a raw\nFLAC stream. Specifically, it modifies the comments header packet\nof the FLAC stream.</p>\n<p>Applications can set the tags to write using the <a href=\"../libgstreamer-doc-1.0/c/gsttagsetter.html#GstTagSetter\">GstTagSetter</a> interface.\nTags contained withing the FLAC bitstream will be picked up\nautomatically (and merged according to the merge mode set via the tag\nsetter interface).</p>\n<h2 id=\"example-pipelines1\">Example pipelines</h2>\n<pre><code>gst-launch-1.0 -v filesrc location=foo.flac ! flactag ! filesink location=bar.flac\n</code></pre>\n<p>This element is not useful with gst-launch, because it does not support\nsetting the tags on a <a href=\"../libgstreamer-doc-1.0/c/gsttagsetter.html#GstTagSetter\">GstTagSetter</a> interface. Conceptually, the element\nwill usually be used in this order though.</p>\n\n</div>\n\n</div>\n\n\n"});