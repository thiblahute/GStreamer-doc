fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/rtph261depay.html#rtph261depay", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"rtph261depay\">\n\t\t<h3 id=\"rtph261depay2\">\n\trtph261depay\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstRTPBaseDepayload\" href=\"../gst-plugins-base-rtp-doc-1.0/c/gstrtpbasedepayload.html#GstRTPBaseDepayload\">GstRTPBaseDepayload</a>\n                    <span class=\"lineart\">\u2570\u2500\u2500</span>rtph261depay\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>Extract encoded H.261 video frames from RTP packets according to RFC 4587.\nFor detailed information see: https://www.rfc-editor.org/rfc/rfc4587.txt</p>\n<p>The depayloader takes an RTP packet and extracts its H.261 stream. It\naggregates the extracted stream until a complete frame is received before\nit pushes it downstream.</p>\n<h2 id=\"example-pipeline1\">Example pipeline</h2>\n<pre><code>gst-launch-1.0 udpsrc caps='application/x-rtp, payload=31' ! rtph261depay ! avdec_h261 ! autovideosink\n</code></pre>\n<p>This example pipeline will depayload and decode an RTP H.261 video stream.\nRefer to the rtph261pay example to create the RTP stream.</p>\n\n</div>\n\n</div>\n\n\n"});