fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/alpha.html#alpha", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"alpha\">\n\t\t<h3 id=\"alpha2\">\n\talpha\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\nGObject\n    <span class=\"lineart\">\u2570\u2500\u2500</span>GInitiallyUnowned\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstBaseTransform\" href=\"../libgstbase-doc-1.0/c/gstbasetransform.html#GstBaseTransform\">GstBaseTransform</a>\n                    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstVideoFilter\" href=\"../gst-plugins-base-video-doc-1.0/c/gstvideofilter.html#GstVideoFilter\">GstVideoFilter</a>\n                        <span class=\"lineart\">\u2570\u2500\u2500</span>alpha\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>The alpha element adds an alpha channel to a video stream. The values\nof the alpha channel can be either be set to a constant or can be\ndynamically calculated via chroma keying, e.g. blue can be set as\nthe transparent color.</p>\n<p>Sample pipeline:</p>\n<pre><code>gst-launch-1.0 videotestsrc pattern=snow ! mixer.sink_0 \\\n  videotestsrc pattern=smpte75 ! alpha method=green ! mixer.sink_1 \\\n  videomixer name=mixer sink_0::zorder=0 sink_1::zorder=1 ! \\\n  videoconvert ! autovideosink\n</code></pre>\n<p>This pipeline adds a alpha channel to the SMPTE color bars\nwith green as the transparent color and overlays the output on\ntop of a snow video stream.</p>\n\n</div>\n\n</div>\n\n\n"});