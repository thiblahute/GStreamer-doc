fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/scaletempo.html#scaletempo", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"scaletempo\">\n\t\t<h3 id=\"scaletempo2\">\n\tscaletempo\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\nGObject\n    <span class=\"lineart\">\u2570\u2500\u2500</span>GInitiallyUnowned\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstBaseTransform\" href=\"../libgstbase-doc-1.0/c/gstbasetransform.html#GstBaseTransform\">GstBaseTransform</a>\n                    <span class=\"lineart\">\u2570\u2500\u2500</span>scaletempo\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>Scale tempo while maintaining pitch\n(WSOLA-like technique with cross correlation)\nInspired by SoundTouch library by Olli Parviainen</p>\n<p>Use Sceletempo to apply playback rates without the chipmunk effect.</p>\n<h2 id=\"example-pipelines1\">Example pipelines</h2>\n<pre><code>filesrc location=media.ext ! decodebin name=d \\\n    d. ! queue ! audioconvert ! audioresample ! scaletempo ! audioconvert ! audioresample ! autoaudiosink \\\n    d. ! queue ! videoconvert ! autovideosink\n</code></pre>\n<p>OR</p>\n<pre><code>playbin uri=... audio_sink=\"scaletempo ! audioconvert ! audioresample ! autoaudiosink\"\n</code></pre>\n<p>When an application sends a seek event with rate != 1.0, Scaletempo applies\nthe rate change by scaling the tempo without scaling the pitch.</p>\n<p>Scaletempo works by producing audio in constant sized chunks\n(#GstScaletempo:stride) but consuming chunks proportional to the playback\nrate.</p>\n<p>Scaletempo then smooths the output by blending the end of one stride with\nthe next (#GstScaletempo:overlap).</p>\n<p>Scaletempo smooths the overlap further by searching within the input buffer\nfor the best overlap position.  Scaletempo uses a statistical cross\ncorrelation (roughly a dot-product).  Scaletempo consumes most of its CPU\ncycles here. One can use the <a href=\"scaletempo.html#GstScaletempo:search\">search</a> propery to tune how far\nthe algoritm looks.</p>\n\n</div>\n\n</div>\n\n\n"});