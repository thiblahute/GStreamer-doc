fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/element-videocrop.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-videocrop\">\n<h1 id=\"videocrop\">videocrop</h1><p>This element crops video frames, meaning it can remove parts of the\npicture on the left, right, top or bottom of the picture and output\na smaller picture than the input picture, with the unwanted parts at the\nborder removed.</p>\n<p>The videocrop element is similar to the videobox element, but its main\ngoal is to support a multitude of formats as efficiently as possible.\nUnlike videbox, it cannot add borders to the picture and unlike videbox\nit will always output images in exactly the same format as the input image.</p>\n<p>If there is nothing to crop, the element will operate in pass-through mode.</p>\n<p>Note that no special efforts are made to handle chroma-subsampled formats\nin the case of odd-valued cropping and compensate for sub-unit chroma plane\nshifts for such formats in the case where the <a href=\"element-videocrop.html#GstVideoCrop:left\">left</a> or\n<a href=\"element-videocrop.html#GstVideoCrop:top\">top</a> property is set to an odd number. This doesn't matter for\nmost use cases, but it might matter for yours.</p>\n<h2 id=\"example-launch-line\">Example launch line</h2>\n<pre><code class=\"language-[\"> gst-launch-1.0 -v videotestsrc ! videocrop top=42 left=1 right=4 bottom=0 ! ximagesink\n</code></pre>\n\n</div>\n\n\n"});