fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/multipartdemux.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"multipartdemux\">\n<h1 id=\"multipartdemux1\">multipartdemux</h1><p>MultipartDemux uses the Content-type field of incoming buffers to demux and\npush data to dynamic source pads. Most of the time multipart streams are\nsequential JPEG frames generated from a live source such as a network source\nor a camera.</p>\n<p>The output buffers of the multipartdemux typically have no timestamps and are\nusually played as fast as possible (at the rate that the source provides the\ndata).</p>\n<p>the content in multipart files is separated with a boundary string that can\nbe configured specifically with the <a href=\"multipartdemux.html#GstMultipartDemux:boundary\">boundary</a> property\notherwise it will be autodetected.</p>\n<h2 id=\"sample-pipelines\">Sample pipelines</h2>\n<pre><code>gst-launch-1.0 filesrc location=/tmp/test.multipart ! multipartdemux ! image/jpeg,framerate=\\(fraction\\)5/1 ! jpegparse ! jpegdec ! videoconvert ! autovideosink\n</code></pre>\n<p>a simple pipeline to demux a multipart file muxed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-good/html/gst-plugins-good-plugins-multipartmux.html#GstMultipartMux-struct\">GstMultipartMux</a>\ncontaining JPEG frames.</p>\n\n</div>\n\n\n"});