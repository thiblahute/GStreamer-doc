fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/element-videobox.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"element-videobox\">\n<h1 id=\"videobox1\">videobox</h1><p>This plugin crops or enlarges the image. It takes 4 values as input, a\ntop, bottom, left and right offset. Positive values will crop that much\npixels from the respective border of the image, negative values will add\nthat much pixels. When pixels are added, you can specify their color.\nSome predefined colors are usable with an enum property.</p>\n<p>The plugin is alpha channel aware and will try to negotiate with a format\nthat supports alpha channels first. When alpha channel is active two\nother properties, alpha and border_alpha can be used to set the alpha\nvalues of the inner picture and the border respectively. an alpha value of\n0.0 means total transparency, 1.0 is opaque.</p>\n<p>The videobox plugin has many uses such as doing a mosaic of pictures,\nletterboxing video, cutting out pieces of video, picture in picture, etc..</p>\n<p>Setting autocrop to true changes the behavior of the plugin so that\ncaps determine crop properties rather than the other way around: given\ninput and output dimensions, the crop values are selected so that the\nsmaller frame is effectively centered in the larger frame.  This\ninvolves either cropping or padding.</p>\n<p>If you use autocrop there is little point in setting the other\nproperties manually because they will be overriden if the caps change,\nbut nothing stops you from doing so.</p>\n<p>Sample pipeline:</p>\n<pre><code class=\"language-[\"> gst-launch-1.0 videotestsrc ! videobox autocrop=true ! \\\n   \"video/x-raw, width=600, height=400\" ! videoconvert ! ximagesink\n</code></pre>\n\n</div>\n\n\n"});