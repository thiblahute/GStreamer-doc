fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/element-rgvolume.html#GstRgVolume:result-gain", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstRgVolume:result-gain\">\n\t\t<h3 class=\"method\" id=\"resultgain\">\n\t<span><code>result-gain</code></span>\n</h3>\n\n\t\t<pre class=\"property_signature\">\n\u201cresult-gain\u201d <span class=\"type\">gdouble</span>\n</pre>\n\n<p>Applied gain [dB].  This gain is applied to processed buffer data.</p>\n<p>This is set to the <a href=\"element-rgvolume.html#GstRgVolume:target-gain\">target-gain</a> if amplification by that amount\ncan be applied safely. \"Safely\" means that the volume adjustment does not\ninflict clipping distortion.  Should this not be the case, the result gain\nis set to an appropriately reduced value (by applying peak normalization).\nThe proposed standard calls this \"clipping prevention\".</p>\n<p>The difference between target and result gain reflects the necessary amount\nof reduction.  Applications can make use of this information to temporarily\nreduce the <a href=\"element-rgvolume.html#GstRgVolume:pre-amp\">pre-amp</a> for subsequent streams, as recommended by\nthe ReplayGain standard.</p>\n<p>Note that target and result gain differing for a great majority of streams\nindicates a problem: What happens in this case is that most streams receive\npeak normalization instead of amplification by the ideal replay gain.  To\nprevent this, the <a href=\"element-rgvolume.html#GstRgVolume:pre-amp\">pre-amp</a> has to be lowered and/or a limiter\nhas to be used which facilitates the use of <a href=\"element-rgvolume.html#GstRgVolume:headroom\">headroom</a>.</p>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n</p>\n<p>\n\tDefault value :\t0\n</p>\n\n</div>\n\n\n\t"});