fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/cairooverlay.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"cairooverlay\">\n<h1 id=\"cairooverlay1\">cairooverlay</h1><p>cairooverlay renders an overlay using a application provided render function.</p>\n<p>The full example can be found in tests/examples/cairo/cairo_overlay.c</p>\n<h2 id=\"example-code\">Example code</h2>\n<pre><code>\n#include &lt;gst/gst.h&gt;\n#include &lt;gst/video/video.h&gt;\n\n...\n\ntypedef struct {\n  gboolean valid;\n  int width;\n  int height;\n} CairoOverlayState;\n\n...\n\nstatic void\nprepare_overlay (GstElement * overlay, GstCaps * caps, gpointer user_data)\n{\n  CairoOverlayState *state = (CairoOverlayState *)user_data;\n\n  gst_video_format_parse_caps (caps, NULL, &amp;amp;state-&gt;width, &amp;amp;state-&gt;height);\n  state-&gt;valid = TRUE;\n}\n\nstatic void\ndraw_overlay (GstElement * overlay, cairo_t * cr, guint64 timestamp,\n  guint64 duration, gpointer user_data)\n{\n  CairoOverlayState *s = (CairoOverlayState *)user_data;\n  double scale;\n\n  if (!s-&gt;valid)\n    return;\n\n  scale = 2*(((timestamp/(int)1e7) % 70)+30)/100.0;\n  cairo_translate(cr, s-&gt;width/2, (s-&gt;height/2)-30);\n  cairo_scale (cr, scale, scale);\n\n  cairo_move_to (cr, 0, 0);\n  cairo_curve_to (cr, 0,-30, -50,-30, -50,0);\n  cairo_curve_to (cr, -50,30, 0,35, 0,60 );\n  cairo_curve_to (cr, 0,35, 50,30, 50,0 ); *\n  cairo_curve_to (cr, 50,-30, 0,-30, 0,0 );\n  cairo_set_source_rgba (cr, 0.9, 0.0, 0.1, 0.7);\n  cairo_fill (cr);\n}\n\n...\n\ncairo_overlay = gst_element_factory_make (\"cairooverlay\", \"overlay\");\n\ng_signal_connect (cairo_overlay, \"draw\", G_CALLBACK (draw_overlay),\n  overlay_state);\ng_signal_connect (cairo_overlay, \"caps-changed\",\n  G_CALLBACK (prepare_overlay), overlay_state);\n...\n\n</code></pre>\n\n</div>\n\n\n"});