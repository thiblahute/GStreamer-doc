fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/udpsrc.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"udpsrc\">\n<h1 id=\"udpsrc1\">udpsrc</h1><p>udpsrc is a network source that reads UDP packets from the network.\nIt can be combined with RTP depayloaders to implement RTP streaming.</p>\n<p>The udpsrc element supports automatic port allocation by setting the\n<a href=\"udpsrc.html#GstUDPSrc:port\">port</a> property to 0. After setting the udpsrc to PAUSED, the\nallocated port can be obtained by reading the port property.</p>\n<p>udpsrc can read from multicast groups by setting the <a href=\"udpsrc.html#GstUDPSrc:multicast-group\">multicast-group</a>\nproperty to the IP address of the multicast group.</p>\n<p>Alternatively one can provide a custom socket to udpsrc with the <a href=\"udpsrc.html#GstUDPSrc:socket\">socket</a>\nproperty, udpsrc will then not allocate a socket itself but use the provided\none.</p>\n<p>The <a href=\"udpsrc.html#GstUDPSrc:caps\">caps</a> property is mainly used to give a type to the UDP packet\nso that they can be autoplugged in GStreamer pipelines. This is very useful\nfor RTP implementations where the contents of the UDP packets is transfered\nout-of-bounds using SDP or other means.</p>\n<p>The <a href=\"udpsrc.html#GstUDPSrc:buffer-size\">buffer-size</a> property is used to change the default kernel\nbuffersizes used for receiving packets. The buffer size may be increased for\nhigh-volume connections, or may be decreased to limit the possible backlog of\nincoming data. The system places an absolute limit on these values, on Linux,\nfor example, the default buffer size is typically 50K and can be increased to\nmaximally 100K.</p>\n<p>The <a href=\"udpsrc.html#GstUDPSrc:skip-first-bytes\">skip-first-bytes</a> property is used to strip off an arbitrary\nnumber of bytes from the start of the raw udp packet and can be used to strip\noff proprietary header, for example.</p>\n<p>The udpsrc is always a live source. It does however not provide a <a href=\"../libgstreamer-doc-1.0/c/gstclock.html#GstClock\">GstClock</a>,\nthis is left for upstream elements such as an RTP session manager or demuxer\n(such as an MPEG demuxer). As with all live sources, the captured buffers\nwill have their timestamp set to the current running time of the pipeline.</p>\n<p>udpsrc implements a <a href=\"../libgstreamer-doc-1.0/c/gsturi.html#GstURIHandler\">GstURIHandler</a> interface that handles udp://host:port\ntype URIs.</p>\n<p>If the <a href=\"udpsrc.html#GstUDPSrc:timeout\">timeout</a> property is set to a value bigger than 0, udpsrc\nwill generate an element message named\n<code>\"GstUDPSrcTimeout\"</code>\nif no data was recieved in the given timeout.\nThe message's structure contains one field:</p>\n<ul>\n<li>guint64\n<code>\"timeout\"</code>: the timeout in microseconds that\nexpired when waiting for data.</li>\n</ul>\n<p>The message is typically used to detect that no UDP arrives in the receiver\nbecause it is blocked by a firewall.</p>\n<p>A custom file descriptor can be configured with the\n<a href=\"udpsrc.html#GstUDPSrc:socket\">socket</a> property. The socket will be closed when setting\nthe element to READY by default. This behaviour can be overriden\nwith the <a href=\"udpsrc.html#GstUDPSrc:close-socket\">close-socket</a> property, in which case the\napplication is responsible for closing the file descriptor.</p>\n<h2 id=\"examples\">Examples</h2>\n<pre><code>gst-launch-1.0 -v udpsrc ! fakesink dump=1\n</code></pre>\n<p>A pipeline to read from the default port and dump the udp packets.\nTo actually generate udp packets on the default port one can use the\nudpsink element. When running the following pipeline in another terminal, the\nabove mentioned pipeline should dump data packets to the console.</p>\n<pre><code>gst-launch-1.0 -v audiotestsrc ! udpsink\n</code></pre>\n<pre><code>gst-launch-1.0 -v udpsrc port=0 ! fakesink\n</code></pre>\n<p>read udp packets from a free port.</p>\n\n</div>\n\n\n"});