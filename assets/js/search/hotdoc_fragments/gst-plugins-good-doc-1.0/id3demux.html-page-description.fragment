fragment_downloaded_cb({"url": "gst-plugins-good-doc-1.0/id3demux.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"id3demux\">\n<h1 id=\"id3demux1\">id3demux</h1><p>id3demux accepts data streams with either (or both) ID3v2 regions at the\nstart, or ID3v1 at the end. The mime type of the data between the tag blocks\nis detected using typefind functions, and the appropriate output mime type\nset on outgoing buffers.</p>\n<p>The element is only able to read ID3v1 tags from a seekable stream, because\nthey are at the end of the stream. That is, when get_range mode is supported\nby the upstream elements. If get_range operation is available, id3demux makes\nit available downstream. This means that elements which require get_range\nmode, such as wavparse, can operate on files containing ID3 tag information.</p>\n<p>This id3demux element replaced an older element with the same name which\nrelied on libid3tag from the MAD project.</p>\n<h2 id=\"example-launch-line\">Example launch line</h2>\n<pre><code>gst-launch-1.0 filesrc location=file.mp3 ! id3demux ! fakesink -t\n</code></pre>\n<p>This pipeline should read any available ID3 tag information and output it.\nThe contents of the file inside the ID3 tag regions should be detected, and\nthe appropriate mime type set on buffers produced from id3demux.</p>\n\n</div>\n\n\n"});