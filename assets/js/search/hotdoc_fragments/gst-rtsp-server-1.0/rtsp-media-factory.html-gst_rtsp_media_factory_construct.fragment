fragment_downloaded_cb({"url": "gst-rtsp-server-1.0/rtsp-media-factory.html#gst_rtsp_media_factory_construct", "fragment": "gst_rtsp_media_factory_construct \nGstRtspServer.RTSPMediaFactory.construct \nGstRtspServer.RTSPMediaFactory.prototype.construct \nConstruct the media object and create its streams. Implementations should create the needed gstreamer elements and add them to the result object. No state changes should be performed on them yet. \nOne or more GstRTSPStream objects should be created from the result with gst_rtsp_media_create_stream \nAfter the media is constructed it can be configured and then prepared with gst_rtsp_media_prepare \nParameters \na GstRTSPMediaFactory \nthe url used \na new GstRTSPMedia if the media could be prepared. \nConstruct the media object and create its streams. Implementations should create the needed gstreamer elements and add them to the result object. No state changes should be performed on them yet. \nOne or more GstRTSPStream objects should be created from the result with gst_rtsp_media_create_stream \nAfter the media is constructed it can be configured and then prepared with gst_rtsp_media_prepare \nParameters \na GstRtspServer.RTSPMediaFactory \nthe url used \na new GstRtspServer.RTSPMedia if the media could be prepared. \nConstruct the media object and create its streams. Implementations should create the needed gstreamer elements and add them to the result object. No state changes should be performed on them yet. \nOne or more GstRTSPStream objects should be created from the result with gst_rtsp_media_create_stream \nAfter the media is constructed it can be configured and then prepared with gst_rtsp_media_prepare \nParameters \na GstRtspServer.RTSPMediaFactory \nthe url used \na new GstRtspServer.RTSPMedia if the media could be prepared. \n"});