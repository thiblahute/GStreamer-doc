fragment_downloaded_cb({"url": "gst-rtsp-server-1.0/python/rtsp-media-factory.html#GstRTSPMediaFactoryClass", "fragment": "The GstRtspServer.RTSPMediaFactory class structure. \nGstRTSPMediaFactoryClass.parent_class \nGstRTSPMediaFactoryClass.gen_key \nconvert url to a key for caching shared GstRtspServer.RTSPMedia objects. The default implementation of this function will use the complete URL including the query parameters to return a key. \nGstRTSPMediaFactoryClass.create_element \nConstruct and return a Gst.Element that is a Gst.Bin containing the elements to use for streaming the media. The bin should contain payloaders pay d for each stream. The default implementation of this function returns the bin created from the launch parameter. \nGstRTSPMediaFactoryClass.construct \nthe vmethod that will be called when the factory has to create the GstRtspServer.RTSPMedia for url. The default implementation of this function calls create_element to retrieve an element and then looks for pay d to create the streams. \nGstRTSPMediaFactoryClass.create_pipeline not introspectable \ncreate a new pipeline or re use an existing one and add the GstRtspServer.RTSPMedia s element created by construct to the pipeline. \nGstRTSPMediaFactoryClass.configure \nconfigure the media created with construct. The default implementation will configure the shared property of the media. \nGstRTSPMediaFactoryClass.media_constructed \nsignal emitted when a media was constructed \nGstRTSPMediaFactoryClass.media_configure \nsignal emitted when a media should be configured \nGstRTSPMediaFactoryClass._gst_reserved \n"});