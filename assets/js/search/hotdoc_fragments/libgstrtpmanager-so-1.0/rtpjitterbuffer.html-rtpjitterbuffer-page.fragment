fragment_downloaded_cb({"url": "libgstrtpmanager-so-1.0/rtpjitterbuffer.html#rtpjitterbuffer-page", "fragment": "rtpjitterbuffer \nThis element reorders and removes duplicate RTP packets as they are received from a network source. \nThe element needs the clock rate of the RTP payload in order to estimate the delay. This information is obtained either from the caps on the sink pad or when no caps are present from the request pt map signal. To clear the previous pt map use the clear pt map signal. \nThe rtpjitterbuffer will wait for missing packets up to a configurable time limit using the latency property. Packets arriving too late are considered to be lost packets. If the do lost property is set lost packets will result in a custom serialized downstream event of name GstRTPPacketLost. The lost packet events are usually used by a depayloader or other element to create concealment data or some other logic to gracefully handle the missing packets. \nThe jitterbuffer will use the DTS or PTS if no DTS is set of the incomming buffer and the rtptime inside the RTP packet to create a PTS on the outgoing buffer. \nThe jitterbuffer can also be configured to send early retransmission events upstream by setting the do retransmission property. In this mode the jitterbuffer tries to estimate when a packet should arrive and sends a custom upstream event named GstRTPRetransmissionRequest when the packet is considered late. The initial expected packet arrival time is calculated as follows \nIf seqnum N arrived at time T seqnum N is expected to arrive at T packet spacing rtx delay. The packet spacing is calculated from the DTS or PTS is no DTS of two consecutive RTP packets with different rtptime. \nIf seqnum N0 arrived at time T0 and seqnum Nm arrived at time Tm seqnum Ni is expected at time Ti T0 i Tm T0 Nm N0 Any previously scheduled timeout is overwritten. \nIf seqnum N arrived all seqnum older than N rtx delay reorder are considered late immediately. This is to request fast feedback for abonormally reorder packets before any of the previous timeouts is triggered. \nA late packet triggers the GstRTPRetransmissionRequest custom upstream event. After the initial timeout expires and the retransmission event is sent the timeout is scheduled for T rtx retry timeout. If the missing packet did not arrive after rtx retry timeout a new GstRTPRetransmissionRequest is sent upstream and the timeout is rescheduled again for T rtx retry timeout. This repeats until rtx retry period elapsed at which point no further retransmission requests are sent and the regular logic is performed to schedule a lost packet as discussed above. \nThis element acts as a live element and so adds latency to the pipeline. \nThis element will automatically be used inside rtpbin. \n"});