fragment_downloaded_cb({"url": "gst-plugins-bad-gl-1.0/python/gstglmemorypbo.html#gst_gl_memory_pbo_copy_into_texture", "fragment": "GstGL.GLMemoryPBO.copy_into_texture \nCopies gl_mem into the texture specfified by tex_id. The format of tex_id is specified by tex_format width and height. \nIf respecify is True then the copy is performed in terms of the texture data. This is useful for splitting RGBA textures into RG or R textures or vice versa. The requirement for this to succeed is that the backing texture data must be the same size i.e. say a RGBA8 texture is converted into a RG8 texture then the RG texture must have twice as many pixels available for output as the RGBA texture. \nOtherwise if respecify is False then the copy is performed per texel using glCopyTexImage. See the OpenGL specification for details on the mappings between texture formats. \ngl_mem \na GstGL.GLMemoryPBO \ntex_id \nthe destination texture id \ntarget \nthe destination GstGL.GLTextureTarget \ntex_format \nthe destination GstGL.GLFormat \nwidth \nwidth of tex_id \nheight \nheight of tex_id \nstride \nstride of the backing texture data \nrespecify \nwhether to copy the data or copy per texel \n\nWhether the copy suceeded \nSince \n"});