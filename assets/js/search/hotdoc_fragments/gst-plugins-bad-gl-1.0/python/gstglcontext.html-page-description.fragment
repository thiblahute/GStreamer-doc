fragment_downloaded_cb({"url": "gst-plugins-bad-gl-1.0/python/gstglcontext.html#page-description", "fragment": "Opaque GstGL.GLContext object \nA default implementation of the various GetProcAddress functions that looks for name in the OpenGL shared libraries or in the current process. \nSee also GstGL.GLContext.get_proc_address \nIf an error occurs major and minor are not modified and GstGL.GLAPI.none is returned. \nAttempts to use the context_type specific GetProcAddress implementations to retreive name. \nSee also GstGL.GLContext.get_proc_address. \nUnbind the current framebuffer \nGet the version of the OpenGL platform GLX EGL etc used. Only valid after a call to gst_gl_context_create_context. \nGet a function pointer to a specified opengl function name. If the the specific function does not exist NULL is returned instead. \nPlatform specfic functions names starting egl glX wgl etc can also be retrieved using this method. \nNote This function may return valid function pointers that may not be valid to call in context. The caller is responsible for ensuring that the returned function is a valid function to call in context by either checking the OpenGL API and version or for an appropriate OpenGL extension. \nNote On success you need to cast the returned function pointer to the correct type to be able to call it correctly. On bit Windows this will include the GSTGLAPI not introspectable identifier to use the correct calling convention. e.g. void GSTGLAPI PFN_glGetIntegerv GLenum name GLint ret \ngpointer _reserved \nThe configuration requested is not correct \nGstGL.GLContextError.wrong_api \nThe OpenGL API requested is not correct \nGstGL.GLContextError.old_libs \nglXCreateContext or similar failed \nGstGL.GLContextError.resource_unavailable \nA resource is not available \n"});