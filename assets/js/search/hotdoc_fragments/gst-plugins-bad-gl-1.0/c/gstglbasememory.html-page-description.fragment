fragment_downloaded_cb({"url": "gst-plugins-bad-gl-1.0/c/gstglbasememory.html#page-description", "fragment": "Functions \nStructures \nVirtual Methods \nCopies the dynamically allocated data from src to dest. Direct subclasses should call this function in their own overriden copy function. \nFrees the GstGLAllocationParams and all associated data. \nFrees the dynamically allocated data in params. Direct subclasses should call this function in their own overriden free function. \nnotify will be called once for each allocated memory using these params when freeing the memory. \nOpaque GstGLBaseMemoryAllocator struct \nGstMemoryCopyFunction fallback_mem_copy \ngpointer _padding \nGstGLBaseMemoryAllocatorAllocFunction alloc \na GstGLBaseMemoryAllocatorAllocFunction \nGstGLBaseMemoryAllocatorCreateFunction create \na GstGLBaseMemoryAllocatorCreateFunction \nGstGLBaseMemoryAllocatorMapFunction map \na GstGLBaseMemoryAllocatorMapFunction \nGstGLBaseMemoryAllocatorUnmapFunction unmap \na GstGLBaseMemoryAllocatorUnmapFunction \nGstGLBaseMemoryAllocatorCopyFunction copy \na GstGLBaseMemoryAllocatorCopyFunction \nGstGLBaseMemoryAllocatorDestroyFunction destroy \na GstGLBaseMemoryAllocatorDestroyFunction \ngpointer _padding \nGstGLAllocationParamsCopyFunc copy \na GstGLAllocationParamsCopyFunc \ngsize alloc_size \nthe allocation size \nGstAllocationParams alloc_params \nthe GstAllocationParams \nGstGLContext context \na GstGLContext \ngpointer wrapped_data \nthe wrapped data pointer \ngpointer gl_handle \nthe wrapped OpenGL handle \ngpointer _padding \ngeneric faliure \nGST_GL_BASE_MEMORY_ERROR_OLD_LIBS \nthe implementation is too old and doesn t implement enough features \nGST_GL_BASE_MEMORY_ERROR_RESOURCE_UNAVAILABLE \na resource could not be found \nthe texture needs downloading to the data pointer \nGST_GL_BASE_MEMORY_TRANSFER_NEED_UPLOAD \nthe data pointer needs uploading to the texture \nThe name of the GL buffer allocator \nNote not called with a GL context current \nAlso see gst_memory_copy \nAs this virtual method is called with an OpenGL context current use this function to allocate and OpenGL resources needed for your application \nDestroy any resources allocated throughout the lifetime of mem \nAlso see gst_memory_map \nAlso see gst_memory_unmap \n"});