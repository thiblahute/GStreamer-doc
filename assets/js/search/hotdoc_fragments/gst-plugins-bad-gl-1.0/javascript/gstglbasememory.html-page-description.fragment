fragment_downloaded_cb({"url": "gst-plugins-bad-gl-1.0/javascript/gstglbasememory.html#page-description", "fragment": "Functions \nStructures \nVirtual Methods \nCopies the dynamically allocated data from src to dest. Direct subclasses should call this function in their own overriden copy function. \nFrees the GstGL.GLAllocationParams and all associated data. \nFrees the dynamically allocated data in params. Direct subclasses should call this function in their own overriden free function. \nInitializes mem with the required parameters \nOpaque GstGL.GLBaseMemoryAllocator struct \nGstMemoryCopyFunction fallback_mem_copy \ngpointer _padding \nGstGLBaseMemoryAllocatorAllocFunction alloc \na GstGLBaseMemoryAllocatorAllocFunction \nGstGLBaseMemoryAllocatorCreateFunction create \na GstGLBaseMemoryAllocatorCreateFunction \nGstGLBaseMemoryAllocatorMapFunction map \na GstGLBaseMemoryAllocatorMapFunction \nGstGLBaseMemoryAllocatorUnmapFunction unmap \na GstGLBaseMemoryAllocatorUnmapFunction \nGstGLBaseMemoryAllocatorCopyFunction copy \na GstGLBaseMemoryAllocatorCopyFunction \nGstGLBaseMemoryAllocatorDestroyFunction destroy \na GstGLBaseMemoryAllocatorDestroyFunction \ngpointer _padding \nInitializes the GL Base Memory allocator. It is safe to call this function multiple times. This must be called before any other GstGLBaseMemory operation. \nSince \nGstGLAllocationParamsCopyFunc copy \na GstGLAllocationParamsCopyFunc \ngsize alloc_size \nthe allocation size \nGstAllocationParams alloc_params \nthe GstAllocationParams \nGstGLContext context \na GstGLContext \ngpointer wrapped_data \nthe wrapped data pointer \ngpointer gl_handle \nthe wrapped OpenGL handle \ngpointer _padding \ngeneric faliure \nGstGL.GLBaseMemoryError.prototype.old_libs \nthe implementation is too old and doesn t implement enough features \nGstGL.GLBaseMemoryError.prototype.resource_unavailable \na resource could not be found \nthe texture needs downloading to the data pointer \nGstGL.GLBaseMemoryTransfer.prototype.upload \nthe data pointer needs uploading to the texture \nThe name of the GL buffer allocator \nCopies the parameters from src into dest. The subclass must compose copy functions from the superclass. \nFree any dynamically allocated data. The subclass must call the superclass free. \nNote not called with a GL context current \nAlso see Gst.Memory.prototype.copy \nAs this virtual method is called with an OpenGL context current use this function to allocate and OpenGL resources needed for your application \nDestroy any resources allocated throughout the lifetime of mem \nAlso see Gst.Memory.prototype.map \nAlso see Gst.Memory.prototype.unmap \n"});