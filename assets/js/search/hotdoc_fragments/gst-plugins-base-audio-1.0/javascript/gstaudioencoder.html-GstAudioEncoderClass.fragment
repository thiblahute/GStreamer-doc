fragment_downloaded_cb({"url": "gst-plugins-base-audio-1.0/javascript/gstaudioencoder.html#GstAudioEncoderClass", "fragment": "GstAudioEncoderClass.start \nOptional. Called when the element starts processing. Allows opening external resources. \nGstAudioEncoderClass.handle_frame \nProvides input samples or NULL to clear any remaining data according to directions as configured by the subclass using the API. Input data ref management is performed by base class subclass should not care or intervene and input data is only valid until next call to base class most notably a call to GstAudio.AudioEncoder.prototype.finish_frame. \nGstAudioEncoderClass.flush \nOptional. Instructs subclass to clear any codec caches and discard any pending samples and not yet returned encoded data. \nGstAudioEncoderClass.src_event \nOptional. Event handler on the src pad. Subclasses should chain up to the parent implementation to invoke the default handler. \nGstAudioEncoderClass.getcaps \nOptional. Allows for a custom sink getcaps implementation e.g. for multichannel input specification If not implemented default returns gst_audio_encoder_proxy_getcaps applied to sink template caps. \nGstAudioEncoderClass.decide_allocation \nOptional. Setup the allocation parameters for allocating output buffers. The passed in query contains the result of the downstream allocation query. Subclasses should chain up to the parent implementation to invoke the default handler. \nGstAudioEncoderClass.propose_allocation \nOptional. Propose buffer allocation parameters for upstream elements. Subclasses should chain up to the parent implementation to invoke the default handler. \nGstAudioEncoderClass.transform_meta \nOptional. Transform the metadata on the input buffer to the output buffer. By default this method copies all meta without tags and meta with only the audio tag. subclasses can implement this method and return true if the metadata is to be copied. Since \nGstAudioEncoderClass.sink_query \nOptional. Query handler on the sink pad. This function should return TRUE if the query could be performed. Subclasses should chain up to the parent implementation to invoke the default handler. Since \nGstAudioEncoderClass.src_query \nOptional. Query handler on the source pad. This function should return TRUE if the query could be performed. Subclasses should chain up to the parent implementation to invoke the default handler. Since \nGstAudioEncoderClass._gst_reserved \n"});