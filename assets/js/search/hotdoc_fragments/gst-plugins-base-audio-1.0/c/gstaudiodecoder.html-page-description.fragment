fragment_downloaded_cb({"url": "gst-plugins-base-audio-1.0/c/gstaudiodecoder.html#page-description", "fragment": "Virtual Methods \nThe opaque GstAudioDecoder data structure. \nGstAudioDecoderPrivate priv \nHelper function that allocates a buffer to hold an audio frame for dec s current output format. \nCollects decoded data and pushes it downstream. \nbuf may be NULL in which case the indicated number of frames are discarded and considered to have produced no output e.g. lead in or setup frames Otherwise source pad caps must be set when it is called with valid data in buf. \nNote that a frame received in gst_audio_decoder_handle_frame may be invalidated by a call to this function. \nLets GstAudioDecoder sub classes to know the memory allocator used by the base class and its params. \nUnref the allocator after use it. \nQueries decoder drain handling. \nSets the variables pointed to by min and max to the currently configured latency. \nQueries decoder s latency aggregation. \nQueries decoder required format handling. \nReturn current parsing sync and eos state. \nQueries current audio jitter tolerance threshold. \nReturns caps that express caps or sink template caps if caps NULL restricted to rate channels combinations supported by downstream elements. \nSets a caps in allocation query which are different from the set pad s caps. Use this function before calling gst_audio_decoder_negotiate. Setting to NULL the allocation query will use the caps from the pad. \nConfigures decoder drain handling. If drainable subclass might be handed a NULL buffer to have it return any leftover decoded data. Otherwise it is not considered so capable and will only ever be passed real data. \nMT safe. \nAllows baseclass to perform byte to time estimated conversion. \nSets decoder latency. \nSets numbers of tolerated decoder errors where a tolerated one is then only warned about but more than tolerated will lead to fatal error. You can set for never returning fatal errors. Default is set to GST_AUDIO_DECODER_MAX_ERRORS. \nSets decoder minimum aggregation latency. \nMT safe. \nConfigures decoder format needs. If enabled subclass needs to be negotiated with format caps before it can process any data. It will then never be handed any data before it has been configured. Otherwise it might be handed data without having been configured and is then expected being able to do so either by default or based on the input data. \nMT safe. \nConfigure output info on the srcpad of dec. \nIndicates whether or not subclass handles packet loss concealment plc \nConfigures decoder audio jitter tolerance threshold. \nMT safe. \nLets GstAudioDecoder sub classes decide if they want the sink pad to use the default pad query handler to reply to accept caps queries. \nBy setting this to true it is possible to further customize the default handler with GST_PAD_SET_ACCEPT_INTERSECT and GST_PAD_SET_ACCEPT_TEMPLATE \ngpointer _gst_reserved \nGives the input segment of the element. \nGives the output segment of the element. \n"});