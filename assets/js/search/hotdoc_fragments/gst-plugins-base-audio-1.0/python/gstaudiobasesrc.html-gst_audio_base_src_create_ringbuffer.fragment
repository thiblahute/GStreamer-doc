fragment_downloaded_cb({"url": "gst-plugins-base-audio-1.0/python/gstaudiobasesrc.html#gst_audio_base_src_create_ringbuffer", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_audio_base_src_create_ringbuffer\">\n\t\t\n<h4 id=\"gstaudioaudiobasesrccreate_ringbuffer\">\n\t<span><code>GstAudio.AudioBaseSrc.create_ringbuffer</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef GstAudio.AudioBaseSrc.create_ringbuffer (self):\n    #python wrapper for 'gst_audio_base_src_create_ringbuffer'</pre>\n\n<p>Create and return the <a href=\"gstaudioringbuffer.html#GstAudioRingBuffer\">GstAudio.AudioRingBuffer</a> for <em>src</em>. This function will call\nthe ::create_ringbuffer vmethod and will set <em>src</em> as the parent of the\nreturned buffer (see <a href=\"../../libgstreamer-1.0/c/gstobject.html#gst_object_set_parent\">Gst.Object.set_parent</a>).</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>src:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstaudiobasesrc.html#GstAudioBaseSrc\">GstAudio.AudioBaseSrc</a>.</p>\n</td>\n<td>\n<a title=\"GstAudio.AudioBaseSrc\" href=\"gstaudiobasesrc.html#GstAudioBaseSrc\">GstAudio.AudioBaseSrc</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>The new ringbuffer of <em>src</em>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstAudio.AudioRingBuffer\" href=\"gstaudioringbuffer.html#GstAudioRingBuffer\">GstAudio.AudioRingBuffer</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});