fragment_downloaded_cb({"url": "gst-plugins-base-audio-1.0/audio-converter.html#gst_audio_converter_samples", "fragment": "Gst.Audio.AudioConverter.Samples \nGst.Audio.AudioConverter.Samples \nGst.Audio.AudioConverter.Samples \nGst.Audio.AudioConverter.Samples \nPerform the conversion with in_frames in in to out_frames in out using convert. \nIn case the samples are interleaved in and out must point to an array with a single element pointing to a block of interleaved samples. \nIf non interleaved samples are used in and out must point to an array with pointers to memory blocks one for each channel. \nin may be null in which case in_frames of silence samples are processed by the converter. \nThis function always produces out_frames of output and consumes in_frames of input. Use Gst.Audio.AudioConverter.GetOutFrames and Gst.Audio.AudioConverter.GetInFrames to make sure in_frames and out_frames are matching and in and out point to enough memory. \nParameters \na Gst.Audio.AudioConverter \nextra Gst.Audio.AudioConverterFlags \ninput frames \nnumber of input frames \noutput frames \nnumber of output frames \ntrue is the conversion could be performed. \nPerform the conversion with in_frames in in to out_frames in out using convert. \nIn case the samples are interleaved in and out must point to an array with a single element pointing to a block of interleaved samples. \nIf non interleaved samples are used in and out must point to an array with pointers to memory blocks one for each channel. \nin may be null in which case in_frames of silence samples are processed by the converter. \nThis function always produces out_frames of output and consumes in_frames of input. Use Gst.Audio.AudioConverter.GetOutFrames and Gst.Audio.AudioConverter.GetInFrames to make sure in_frames and out_frames are matching and in and out point to enough memory. \nParameters \na Gst.Audio.AudioConverter \nextra Gst.Audio.AudioConverterFlags \ninput frames \nnumber of input frames \noutput frames \nnumber of output frames \ntrue is the conversion could be performed. \nPerform the conversion with in_frames in in to out_frames in out using convert. \nIn case the samples are interleaved in and out must point to an array with a single element pointing to a block of interleaved samples. \nIf non interleaved samples are used in and out must point to an array with pointers to memory blocks one for each channel. \nin may be null in which case in_frames of silence samples are processed by the converter. \nThis function always produces out_frames of output and consumes in_frames of input. Use Gst.Audio.AudioConverter.GetOutFrames and Gst.Audio.AudioConverter.GetInFrames to make sure in_frames and out_frames are matching and in and out point to enough memory. \nParameters \nextra Gst.Audio.AudioConverterFlags \ninput frames \nnumber of input frames \noutput frames \nnumber of output frames \ntrue is the conversion could be performed. \nPerform the conversion with in_frames in in to out_frames in out using convert. \nIn case the samples are interleaved in and out must point to an array with a single element pointing to a block of interleaved samples. \nIf non interleaved samples are used in and out must point to an array with pointers to memory blocks one for each channel. \nin may be null in which case in_frames of silence samples are processed by the converter. \nThis function always produces out_frames of output and consumes in_frames of input. Use Gst.Audio.AudioConverter.GetOutFrames and Gst.Audio.AudioConverter.GetInFrames to make sure in_frames and out_frames are matching and in and out point to enough memory. \nParameters \na Gst.Audio.AudioConverter \nextra Gst.Audio.AudioConverterFlags \ninput frames \nnumber of input frames \noutput frames \nnumber of output frames \ntrue is the conversion could be performed. \n"});