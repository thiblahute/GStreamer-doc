fragment_downloaded_cb({"url": "gst-plugins-base-plugins-doc-1.0/videoscale.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"videoscale\">\n<h1 id=\"videoscale1\">videoscale</h1><p>This element resizes video frames. By default the element will try to\nnegotiate to the same size on the source and sinkpad so that no scaling\nis needed. It is therefore safe to insert this element in a pipeline to\nget more robust behaviour without any cost if no scaling is needed.</p>\n<p>This element supports a wide range of color spaces including various YUV and\nRGB formats and is therefore generally able to operate anywhere in a\npipeline.</p>\n<h2 id=\"example-pipelines\">Example pipelines</h2>\n<pre><code>gst-launch-1.0 -v filesrc location=videotestsrc.ogg ! oggdemux ! theoradec ! videoconvert ! videoscale ! autovideosink\n</code></pre>\n<p>Decode an Ogg/Theora and display the video. If the video sink chosen\ncannot perform scaling, the video scaling will be performed by videoscale\nwhen you resize the video window.\nTo create the test Ogg/Theora file refer to the documentation of theoraenc.</p>\n<pre><code>gst-launch-1.0 -v filesrc location=videotestsrc.ogg ! oggdemux ! theoradec ! videoconvert ! videoscale ! video/x-raw,width=100 ! autovideosink\n</code></pre>\n<p>Decode an Ogg/Theora and display the video with a width of 100.</p>\n\n</div>\n\n\n"});