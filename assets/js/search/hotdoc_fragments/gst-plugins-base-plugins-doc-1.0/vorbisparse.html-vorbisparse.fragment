fragment_downloaded_cb({"url": "gst-plugins-base-plugins-doc-1.0/vorbisparse.html#vorbisparse", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"vorbisparse\">\n\t\t<h3 id=\"vorbisparse2\">\n\tvorbisparse\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span>vorbisparse\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>The vorbisparse element will parse the header packets of the Vorbis\nstream and put them as the streamheader in the caps. This is used in the\nmultifdsink case where you want to stream live vorbis streams to multiple\nclients, each client has to receive the streamheaders first before they can\nconsume the vorbis packets.</p>\n<p>This element also makes sure that the buffers that it pushes out are properly\ntimestamped and that their offset and offset_end are set. The buffers that\nvorbisparse outputs have all of the metadata that oggmux expects to receive,\nwhich allows you to (for example) remux an ogg/vorbis file.</p>\n<h2 id=\"example-pipelines1\">Example pipelines</h2>\n<pre><code>gst-launch-1.0 -v filesrc location=sine.ogg ! oggdemux ! vorbisparse ! fakesink\n</code></pre>\n<p>This pipeline shows that the streamheader is set in the caps, and that each\nbuffer has the timestamp, duration, offset, and offset_end set.</p>\n<pre><code>gst-launch-1.0 filesrc location=sine.ogg ! oggdemux ! vorbisparse \\\n           ! oggmux ! filesink location=sine-remuxed.ogg\n</code></pre>\n<p>This pipeline shows remuxing. sine-remuxed.ogg might not be exactly the same\nas sine.ogg, but they should produce exactly the same decoded data.</p>\n\n</div>\n\n</div>\n\n\n"});