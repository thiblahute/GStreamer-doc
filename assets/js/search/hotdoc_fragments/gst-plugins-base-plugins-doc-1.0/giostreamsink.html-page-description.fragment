fragment_downloaded_cb({"url": "gst-plugins-base-plugins-doc-1.0/giostreamsink.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"giostreamsink\">\n<h1 id=\"giostreamsink\">giostreamsink</h1><p>This plugin writes incoming data to a custom GIO GOutputStream.</p>\n<p>It can, for example, be used to write a stream to memory with a\nGMemoryOuputStream or to write to a file with a GFileOuputStream.</p>\n<h2 id=\"example-code\">Example code</h2>\n<p>The following example writes the received data to a GMemoryOutputStream.</p>\n<pre><code>\n#include &lt;gst/gst.h&gt;\n#include &lt;gio/gio.h&gt;\n\n...\n\nGstElement *sink;\nGMemoryOuputStream *stream;\n// out_data will contain the received data\nguint8 *out_data;\n\n...\n\nstream = G_MEMORY_OUTPUT_STREAM (g_memory_output_stream_new (NULL, 0,\n         (GReallocFunc) g_realloc, (GDestroyNotify) g_free));\nsink = gst_element_factory_make (\"giostreamsink\", \"sink\");\ng_object_set (G_OBJECT (sink), \"stream\", stream, NULL);\n\n...\n\n// after processing get the written data\nout_data = g_memory_ouput_stream_get_data (G_MEMORY_OUTPUT_STREAM (stream));\n\n...\n\n</code></pre>\n\n</div>\n\n\n"});