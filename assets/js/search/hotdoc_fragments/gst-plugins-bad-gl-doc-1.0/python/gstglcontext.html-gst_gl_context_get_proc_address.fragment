fragment_downloaded_cb({"url": "gst-plugins-bad-gl-doc-1.0/python/gstglcontext.html#gst_gl_context_get_proc_address", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"gst_gl_context_get_proc_address\">\n\t\t<h3 id=\"gstglglcontextget_proc_address\">\n\t<span><code>GstGL.GLContext.get_proc_address</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef GstGL.GLContext.get_proc_address (self, name):\n    #python wrapper for 'gst_gl_context_get_proc_address'</pre>\n\n<p>Get a function pointer to a specified opengl function, <em>name</em>.  If the the\nspecific function does not exist, NULL is returned instead.</p>\n<p>Platform specfic functions (names starting 'egl', 'glX', 'wgl', etc) can also\nbe retrieved using this method.</p>\n<p>Note: This function may return valid function pointers that may not be valid\nto call in <em>context</em>.  The caller is responsible for ensuring that the\nreturned function is a valid function to call in <em>context</em> by either checking\nthe OpenGL API and version or for an appropriate OpenGL extension.</p>\n<p>Note: On success, you need to cast the returned function pointer to the\ncorrect type to be able to call it correctly.  On 32-bit Windows, this will\ninclude the <a href=\"../../gst-plugins-bad-gl-doc-1.0/c/gstglapi.html#GSTGLAPI\">GSTGLAPI (not introspectable)</a> identifier to use the correct calling convention.\ne.g. void (GSTGLAPI *PFN_glGetIntegerv) (GLenum name, GLint * ret)</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters5\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>context:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../gst-plugins-bad-gl-doc-1.0/python/gstgl_fwd.html#GstGLContext\">GstGL.GLContext</a></p>\n</td>\n<td>\n<a title=\"GstGL.GLContext\" href=\"../../gst-plugins-bad-gl-doc-1.0/python/gstgl_fwd.html#GstGLContext\">GstGL.GLContext</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>an opengl function name</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns7\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a function pointer or <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.4\n\t\t</p>\n\n</div>\n\n\n\n"});