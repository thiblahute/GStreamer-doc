fragment_downloaded_cb({"url": "libgstdirectfb-so-1.0/index.html#dfbvideosink", "fragment": "DfbVideoSink renders video frames using the DirectFB library. Rendering can happen in two different modes \nStandalone this mode will take complete control of the monitor forcing DirectFB to fullscreen layout. This is convenient to test using the gst launch command line tool or other simple applications. It is possible to interrupt playback while being in this mode by pressing the Escape key. This mode handles navigation events for every input device supported by the DirectFB library it will look for available video modes in the fb.modes file and try to switch the framebuffer video mode to the most suitable one. Depending on hardware acceleration capabilities the element will handle scaling or not. If no acceleration is available it will do clipping or centering of the video frames respecting the original aspect ratio. \nEmbedded this mode will render video frames in a surface provided by the application developer. This is a more advanced usage of the element and it is required to integrate video playback in existing DirectFB applications. When using this mode the element just renders to the surface provided by the application that means it won t handle navigation events and won t resize the surface to fit video frames geometry. Application has to implement the necessary code to grab informations about the negotiated geometry and resize there surface accordingly. \nFor both modes the element implements a buffer pool allocation system to optimize memory allocation time and handle reverse negotiation. Indeed if you insert an element like videoscale in the pipeline the video sink will negotiate with it to try get a scaled video for either the fullscreen layout or the application provided external surface. \n"});