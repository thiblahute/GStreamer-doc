fragment_downloaded_cb({"url": "gst-plugins-base-app-doc-1.0/c/gstappsink.html#gst_app_sink_try_pull_sample", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_app_sink_try_pull_sample\">\n\t\t<h3 id=\"gst_app_sink_try_pull_sample1\">\n\t<span><code>gst_app_sink_try_pull_sample</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstSample\" href=\"../../libgstreamer-doc-1.0/gstsample.html#GstSample\">GstSample</a> *\ngst_app_sink_try_pull_sample (<a title=\"GstAppSink\" href=\"../../gst-plugins-base-app-doc-1.0/gstappsink.html#GstAppSink\">GstAppSink</a> * appsink,\n                              <a title=\"GstClockTime\" href=\"../../libgstreamer-doc-1.0/gstclock.html#GstClockTime\">GstClockTime</a> timeout)</pre>\n\n<p>This function blocks until a sample or EOS becomes available or the appsink\nelement is set to the READY/NULL state or the timeout expires.</p>\n<p>This function will only return samples when the appsink is in the PLAYING\nstate. All rendered buffers will be put in a queue so that the application\ncan pull samples at its own rate. Note that when the application does not\npull samples fast enough, the queued buffers could consume a lot of memory,\nespecially when dealing with raw video frames.</p>\n<p>If an EOS event was received before any buffers or the timeout expires,\nthis function returns <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a>. Use gst_app_sink_is_eos () to check for the EOS\ncondition.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters17\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>appsink:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../gst-plugins-base-app-doc-1.0/gstappsink.html#GstAppSink\">GstAppSink</a></p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timeout:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the maximum amount of time to wait for a sample</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns10\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"../../libgstreamer-doc-1.0/gstsample.html#GstSample\">GstSample</a> or NULL when the appsink is stopped or EOS or the timeout expires.\nCall <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstSample.html#gst-sample-unref\">gst_sample_unref</a> after usage.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstSample\" href=\"../../libgstreamer-doc-1.0/gstsample.html#GstSample\">GstSample</a> *\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n\n"});