fragment_downloaded_cb({"url": "gst-plugins-base-audio-doc-1.0/c/gstaudiocdsrc.html#_GstAudioCdSrcClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GstAudioCdSrcClass\">\n\t\t<h3 id=\"struct-_gstaudiocdsrcclass\">\n\t\tstruct _GstAudioCdSrcClass\n\t</h3>\n\n\t\t<pre class=\"raw_code\">\nstruct _GstAudioCdSrcClass {\n  GstPushSrcClass pushsrc_class;\n\n  /* open/close the CD device */\n  gboolean    (*open)               (GstAudioCdSrc *src, const gchar *device);\n  void        (*close)              (GstAudioCdSrc *src);\n\n  /* read one sector (LBA) */\n  GstBuffer * (*read_sector)        (GstAudioCdSrc *src, gint sector);\n\n#if 0\n  /* return default device or NULL (optional) */\n  gchar *     (*get_default_device) (GstAudioCdSrc *src);\n\n  /* return NULL-terminated string array of CD devices, or NULL (optional) */\n  /* FIXME 0.11: reconsider for new probing/device discovery API, remove if in doubt */\n  gchar **    (*probe_devices)      (GstAudioCdSrc *src);\n#endif\n\n};\n</pre>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"fields\">Fields</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"_GstAudioCdSrcClass.pushsrc_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>int  <em><code>pushsrc_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"_GstAudioCdSrcClass.gboolean\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>int (int *)  <em><code>gboolean</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"_GstAudioCdSrcClass.close\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>close</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"_GstAudioCdSrcClass.read_sector\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>read_sector</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n"});