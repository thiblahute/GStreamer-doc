fragment_downloaded_cb({"url": "gst-plugins-base-audio-doc-1.0/c/gstaudiodecoder.html#GstAudioDecoderClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstAudioDecoderClass\">\n\t\t<h3 id=\"struct-gstaudiodecoderclass\">\n\t\tstruct GstAudioDecoderClass\n\t</h3>\n\n\t\t<p>Subclasses can override any of the available virtual methods or not, as\nneeded. At minimum <em>handle_frame</em> (and likely <em>set_format</em>) needs to be\noverridden.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"fields\">Fields</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.element_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstElementClass\" href=\"../../libgstreamer-doc-1.0/c/gstelement.html#GstElementClass\">GstElementClass</a> <em><code>element_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The parent class structure</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.start\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>start</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element starts processing.\nAllows opening external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.stop\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>stop</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element stops processing.\nAllows closing external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.set_format\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>set_format</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Notifies subclass of incoming data format (caps).</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.parse\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>parse</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nAllows chopping incoming data into manageable units (frames)\nfor subsequent decoding.  This division is at subclass\ndiscretion and may or may not correspond to 1 (or more)\nframes as defined by audio format.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.handle_frame\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>handle_frame</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Provides input data (or NULL to clear any remaining data)\nto subclass.  Input data ref management is performed by\nbase class, subclass should not care or intervene,\nand input data is only valid until next call to base class,\nmost notably a call to <a href=\"gstaudiodecoder.html#gst_audio_decoder_finish_frame\">gst_audio_decoder_finish_frame</a>.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.flush\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>flush</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nInstructs subclass to clear any codec caches and discard\nany pending samples and not yet returned decoded data.\n<em>hard</em> indicates whether a FLUSH is being processed,\nor otherwise a DISCONT (or conceptually similar).</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.pre_push\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>pre_push</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled just prior to pushing (encoded data) buffer downstream.\nSubclass has full discretionary access to buffer,\nand a not OK flow return will abort downstream pushing.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.sink_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>sink_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nEvent handler on the sink pad. Subclasses should chain up to\nthe parent implementation to invoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.src_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>src_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nEvent handler on the src pad. Subclasses should chain up to\nthe parent implementation to invoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.open\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>open</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element changes to GST_STATE_READY.\nAllows opening external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.close\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>close</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element changes to GST_STATE_NULL.\nAllows closing external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.negotiate\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>negotiate</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nNegotiate with downstream and configure buffer pools, etc.\nSubclasses should chain up to the parent implementation to\ninvoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.decide_allocation\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>decide_allocation</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nSetup the allocation parameters for allocating output\nbuffers. The passed in query contains the result of the\ndownstream allocation query.\nSubclasses should chain up to the parent implementation to\ninvoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.propose_allocation\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>propose_allocation</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nPropose buffer allocation parameters for upstream elements.\nSubclasses should chain up to the parent implementation to\ninvoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.sink_query\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>sink_query</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nQuery handler on the sink pad. This function should\nreturn TRUE if the query could be performed. Subclasses\nshould chain up to the parent implementation to invoke the\ndefault handler. Since 1.6</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.src_query\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>src_query</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nQuery handler on the source pad. This function should\nreturn TRUE if the query could be performed. Subclasses\nshould chain up to the parent implementation to invoke the\ndefault handler. Since 1.6</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.getcaps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>getcaps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nAllows for a custom sink getcaps implementation.\nIf not implemented,\ndefault returns gst_audio_decoder_proxy_getcaps\napplied to sink template caps.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass.transform_meta\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>transform_meta</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional. Transform the metadata on the input buffer to the\noutput buffer. By default this method copies all meta without\ntags and meta with only the \"audio\" tag. subclasses can\nimplement this method and return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if the metadata is to be\ncopied. Since 1.6</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstAudioDecoderClass._gst_reserved\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> <em><code>_gst_reserved</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});