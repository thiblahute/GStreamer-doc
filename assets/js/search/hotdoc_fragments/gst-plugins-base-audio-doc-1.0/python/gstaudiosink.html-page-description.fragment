fragment_downloaded_cb({"url": "gst-plugins-base-audio-doc-1.0/python/gstaudiosink.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstaudiosink.h\">\n<h1 id=\"gstaudiosink\">GstAudioSink</h1><p>This is the most simple base class for audio sinks that only requires\nsubclasses to implement a set of simple functions:</p>\n<ul>\n<li>\n<p><code>open()</code> :Open the device.</p>\n</li>\n<li>\n<p><code>prepare()</code> :Configure the device with the specified format.</p>\n</li>\n<li>\n<p><code>write()</code> :Write samples to the device.</p>\n</li>\n<li>\n<p><code>reset()</code> :Unblock writes and flush the device.</p>\n</li>\n<li>\n<p><code>delay()</code> :Get the number of samples written but not yet played\nby the device.</p>\n</li>\n<li>\n<p><code>unprepare()</code> :Undo operations done by prepare.</p>\n</li>\n<li>\n<p><code>close()</code> :Close the device.</p>\n</li>\n</ul>\n<p>All scheduling of samples and timestamps is done in this base class\ntogether with <a href=\"../../gst-plugins-base-audio-doc-1.0/python/gstaudiobasesink.html#GstAudioBaseSink\">GstAudio.AudioBaseSink</a> using a default implementation of a\n<a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gst-plugins-base-libs/html/gst-plugins-base-libs-gstaudioringbuffer.html#GstAudioRingBuffer-struct\">GstAudio.AudioRingBuffer</a> that uses threads.</p>\n\n</div>\n\n\n"});