fragment_downloaded_cb({"url": "gst-devtools-1.0/python/gst-validate-scenario.html#page-description", "fragment": "Executes a seek event on the scenario pipeline. You should always use that method when you want to execute a seek inside a new action types so that the scenario state is updated taking into account that seek. \nFor more information you should have a look at Gst.Event.new_seek \nGet remaining actions from scenario. \nGet current target state from scenario. \ngpointer _gst_reserved \nGet a time value for the name parameter of an action. This method should be called to retrieved and compute a timed value of a given action. It will first try to retrieve the value as a double then get it as a string and execute any formula taking into account the position and duration variables. And it will always convert that value to a GstClockTime. \nRegister a new action type to the action type system. If the action type already exists it will be overriden by that new definition \ngint repeat \nGstValidateActionPrivate priv \nconst gchar description \nThe description of the parameter \ngboolean mandatory \nWhether the parameter is mandatory for a specific action type \nconst gchar types \nThe types the parameter can take described as a string. It can be precisely describing how the typing works using n between the various acceptable types. \nconst gchar possible_variables \nThe name of the variables that can be used to compute the value of the parameter. For example for the start value of a seek action we will accept to take duration which will be replace by the total duration of the stream on which the action is executed. \nconst gchar def \nThe default value of a parameter as a string should be NULL for mandatory streams. \ngpointer _gst_reserved \ngchar name \nThe name of the new action type to add \nGstValidatePrepareAction prepare \ngchar description \nA description of the new type \nGstValidateActionTypeFlags flags \nThe flags of the action type \ngpointer _gst_reserved \nThe action is a config \nGstValidate.ActionTypeFlags.async \nThe action can be executed ASYNC \nGstValidate.ActionTypeFlags.interlaced \nThe action will be executed async but without blocking further actions to be executed \nGstValidate.ActionTypeFlags.can_execute_on_addition \nThe action will be executed on element added for a particular element type if no playback time is specified \nGstValidate.ActionTypeFlags.needs_clock \nThe pipeline will need to be synchronized with the clock for that action type to be used. \nGstValidate.ActionTypeFlags.no_execution_not_fatal \nDo not consider the non execution of the action as a fatal error. \nGstValidate.ActionTypeFlags.can_be_optional \nThe action can use the optional keyword. Such action instances will have the GstValidate.ActionTypeFlags.no_execution_not_fatal flag set and won t be considered as fatal if they fail. \nGstValidate.ActionTypeFlags.doesnt_need_pipeline \n"});