fragment_downloaded_cb({"url": "gst-devtools-1.0/gst-validate-scenarios.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gst-validate-scenarios.md\">\n<h1 id=\"gstvalidate-scenario-file-format\">GstValidate Scenario File Format</h1>\n<p>To be able to define a list of actions to execute on a <a href=\"../libgstreamer-1.0/c/gstpipeline.html#GstPipeline\"><code>GstPipeline</code></a>,\na dedicated file format is used. The name of the scenario is the name of\nthe file without its <code>.scenario</code> extension. The scenario file format is\nbased on the <a href=\"../libgstreamer-1.0/c/gststructure.html#GstStructure\"><code>GstStructure</code></a> serialized format which is a basic, type\naware, key value format. It takes the type of the action in the first\ncomma separated field, and then some key value pairs in the form\n<code>parameter=value</code> separated by commas. The values type will be guessed\nif not casted as in <code>parameter=(string)value</code>. You can force the type\nguessing system to actually know what type you want by giving it the\nright hints. For example to make sure the value is a double, you should\nadd a decimal (ie. <code>1</code> will be considered as a <code>int</code>, but <code>1.0</code> will be\nconsidered as a <code>double</code> and <code>\"1.0\"</code> will be considered as a <code>string</code>).</p>\n<p>For example to represent a seek action, you should add the following\nline in the <code>.scenario</code> file.</p>\n<pre><code>seek, playback-time=10.0, start=0.0, flags=accurate+flush\n</code></pre>\n<p>The files to be used as scenario should have a <code>.scenario</code> extension and\nshould be placed either in\n<code>$USER_DATA_DIR/gstreamer-1.0/validate/scenarios</code> ,\n<code>$GST_DATADIR/gstreamer-1.0/validate/scenarios</code> or in a path defined in\nthe $GST_VALIDATE_SCENARIOS_PATH environment variable.</p>\n<p>Each line in the <code>.scenario</code> file represent an action (you can also use\n<code>\\</code> at the end of a line write a single action on multiple lines).\nUsually you should start you scenario with a <code>description</code> \"config\"\naction in order for the user to have more information about the\nscenario. It can contain a <code>summary</code> field which is a string explaining\nwhat the scenario does and then several info fields about the scenario.\nYou can find more info about it running:</p>\n<pre><code>gst-validate-1.0 --inspect-action-type action_type_name\n</code></pre>\n<p>So a basic scenario file that will seek three times and stop would look\nlike:</p>\n<pre><code>description, summary=\"Seeks at 1.0 to 2.0 then at \\\n3.0 to 0.0 and then seeks at \\\n1.0 to 2.0 for 1.0 second (between 2.0 and 3.0).\", \\\nseek=true, duration=5.0, min-media-duration=4.0\nseek, playback-time=1.0, rate=1.0, start=2.0, flags=accurate+flush\nseek, playback-time=3.0, rate=1.0, start=0.0, flags=accurate+flush\nseek, playback-time=1.0, rate=1.0, start=2.0, stop=3.0, flags=accurate+flush\n</code></pre>\n<p>Many action types have been implemented to help users define their own\nscenarios. For example there are:</p>\n<ul>\n<li><code>seek</code>: Seeks into the stream.</li>\n<li><code>play</code>: Set the pipeline state to <code>GST_STATE_PLAYING</code>.</li>\n<li><code>pause</code>: Set the pipeline state to <code>GST_STATE_PAUSED</code>.</li>\n<li><code>stop</code>: Stop the execution of the pipeline.</li>\n</ul>\n<blockquote>\n<p><strong>NOTE</strong>: This action actually posts a <a href=\"../libgstreamer-1.0/c/gstmessage.html#GST_MESSAGE_REQUEST_STATE\"><code>GST_MESSAGE_REQUEST_STATE</code></a>\nmessage requesting <a href=\"../libgstreamer-1.0/c/gstelement.html#GST_STATE_NULL\"><code>GST_STATE_NULL</code></a> on the bus and the application\nshould quit.</p>\n</blockquote>\n<p>To get all the details about the registered action types, you can list\nthem all with:</p>\n<pre><code>gst-validate-1.0 --inspect-action-type\n</code></pre>\n<p>and to include transcoding specific action types:</p>\n<pre><code>gst-validate-transcoding-1.0 --inspect-action-type\n</code></pre>\n<p>Many scenarios are distributed with <code>gst-validate</code>, you can list them\nall using:</p>\n<pre><code>gst-validate-1.0 --list-scenarios\n</code></pre>\n<p>You can find more information about the scenario implementation and\naction types in the <a href=\"c/gst-validate-scenario.html#GstValidateScenario\"><code>GstValidateScenario</code> section</a>.</p>\n\n</div>\n\n\n        "});