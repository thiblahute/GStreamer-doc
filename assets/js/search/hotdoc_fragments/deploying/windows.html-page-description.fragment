fragment_downloaded_cb({"url": "deploying/windows.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"windows.md\">\n<h1 id=\"windows-deployment\">Windows deployment</h1>\n<p>This page explains how to deploy GStreamer along your\napplication. There are different mechanisms, which have been reviewed\nin <a href=\"index.html\">Deploying your application</a>. The details for some of the\nmechanisms are given here, and more options might be added to this\ndocumentation in the future.</p>\n<h2 id=\"shared-gstreamer\">Shared GStreamer</h2>\n<p>This is the easiest way to deploy GStreamer, although most of the time\nit installs unnecessary files which grow the size of the installer and\nthe target drive free space requirements. Since GStreamer might be shared\namong all applications that use it, though, the extra space requirements\nare somewhat blurred.</p>\n<p>Simply pack GStreamer  <strong>runtime</strong>  installer (<a href=\"../installing/on-windows.html\">the same one you\ninstalled in your development machine</a>)\ninside your installer (or download it from your installer) and execute\nit silently using <code>msiexec</code>. <code>msiexec</code> is the tool that wraps most of\nthe Windows Installer functionality and offers a number of options to\nsuit your needs. You can review these options by\nexecuting <code>msiexec</code> without parameters. For example using 1.8.1:</p>\n<pre><code>msiexec /i gstreamer-1.0-x86-1.8.1.msi\n</code></pre>\n<p>This will bring up the installation dialog as if the user had\ndouble-clicked on the <code>msi</code> file. Usually, you will want to let the user\nchoose where they want to install GStreamer. An environment variable will\nlet your application locate it later on.</p>\n<h2 id=\"private-deployment-of-gstreamer\">Private deployment of GStreamer</h2>\n<p>You can use the same method as the shared GStreamer, but instruct its\ninstaller to deploy to your application\u2019s folder (or a\nsubfolder). Again, use the <code>msiexec</code> parameters that suit you best. For\nexample:</p>\n<pre><code>msiexec /passive INSTALLDIR=C:\\Desired\\Folder /i gstreamer-1.0-x86-1.8.1.msi\n</code></pre>\n<p>This will install GStreamer to <code>C:\\Desired\\Folder</code>  showing a progress\ndialog, but not requiring user intervention.</p>\n<h2 id=\"deploy-only-necessary-files-by-manually-picking-them\">Deploy only necessary files, by manually picking them</h2>\n<p>On the other side of the spectrum, if you want to reduce the space\nrequirements (and installer size) to the maximum, you can manually\nchoose which GStreamer libraries to deploy. Unfortunately, you are on\nyour own on this road, besides using the <a href=\"http://www.dependencywalker.com/\">Dependency\nWalker</a> tool to discover inter-DLL\ndependencies.</p>\n<p>Bear in mind that GStreamer is modular in nature. Plug-ins are loaded\ndepending on the media that is being played, so, if you do not know in\nadvance what files you are going to play, you do not know which DLLs you\nneed to deploy.</p>\n<h2 id=\"deploy-only-necessary-packages-using-provided-merge-modules\">Deploy only necessary packages, using provided Merge Modules</h2>\n<p>If you are building your installer using one of the Professional\neditions of <a href=\"http://www.microsoft.com/visualstudio/en-us/products/2010-editions/professional/overview\">Visual\nStudio</a>\nor <a href=\"http://wix.sf.net\">WiX</a> you can take advantage of pre-packaged\n<a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/aa369820(v=vs.85).aspx\">Merge\nModules</a>.\nGStreamer is divided in packages, which roughly take care of\ndifferent tasks. There is the core package, the playback package, the\nnetworking package, etc. Each package contains the necessary libraries\nand files to accomplish its task.</p>\n<p>The Merge Modules are pieces that can be put together to build a larger\nWindows Installer. In this case, you just need to create a deployment\nproject for your application with Visual Studio and then add the Merge\nModules for the GStreamer packages your application needs.</p>\n<p>This will produce a smaller installer than deploying the complete\nGStreamer, without the added burden of having to manually pick each\nlibrary. You just need to know which packages your application requires.</p>\n<table>\n<thead>\n<tr>\n<th> Package name</th>\n<th> Dependencies</th>\n<th> Licenses</th>\n<th> Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> base-system-1.0</td>\n<td></td>\n<td>JPEG, FreeType, BSD-like, LGPL, LGPL-2+, LGPL-2.1, LibPNG and MIT</td>\n<td> Base system dependencies</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-capture</td>\n<td> gstreamer-1.0-core, gstreamer-1.0-encoding</td>\n<td> LGPL and LGPL-2+</td>\n<td> GStreamer plugins for capture</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-codecs</td>\n<td> base-crypto, gstreamer-1.0-core</td>\n<td> BSD, Jasper-2.0, BSD-like, LGPL, LGPL-2, LGPL-2+, LGPL-2.1 and LGPL-2.1+</td>\n<td> GStreamer codecs</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-codecs-gpl</td>\n<td> gstreamer-1.0-core</td>\n<td> BSD-like, LGPL, LGPL-2+ and LGPL-2.1+</td>\n<td> GStreamer codecs under the GPL license and/or with patents issues</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-core</td>\n<td> base-system-1.0</td>\n<td> LGPL and LGPL-2+</td>\n<td> GStreamer core</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-dvd</td>\n<td> gstreamer-1.0-core</td>\n<td> GPL-2+, LGPL and LGPL-2+</td>\n<td> GStreamer DVD support</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-effects</td>\n<td> gstreamer-1.0-core</td>\n<td> LGPL and LGPL-2+</td>\n<td> GStreamer effects and instrumentation plugins</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-net</td>\n<td> base-crypto, gstreamer-1.0-core</td>\n<td> GPL-3, LGPL, LGPL-2+, LGPL-2.1+ and LGPL-3+</td>\n<td> GStreamer plugins for network protocols</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-playback</td>\n<td> gstreamer-1.0-core</td>\n<td> LGPL and LGPL-2+</td>\n<td> GStreamer plugins for playback</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-system</td>\n<td> gstreamer-1.0-core</td>\n<td> LGPL, LGPL-2+ and LGPL-2.1+</td>\n<td> GStreamer system plugins</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-visualizers</td>\n<td> gstreamer-1.0-core</td>\n<td> LGPL and LGPL-2+</td>\n<td> GStreamer visualization plugins</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-encoding</td>\n<td> gstreamer-1.0-core, gstreamer-1.0-playback</td>\n<td> LGPL and LGPL2+</td>\n<td> GStreamer plugins for encoding</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-editing</td>\n<td> gstreamer-1.0-core, gstreamer-1.0-devtools</td>\n<td> LGPL and LGPL2+</td>\n<td> GStreamer libraries and plugins for non linear editing</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-devtools</td>\n<td> gstreamer-1.0-core</td>\n<td> LGPL and LGPL2+</td>\n<td> GStreamer developers tools</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-libav</td>\n<td> gstreamer-1.0-core</td>\n<td> LGPL and LGPL2+</td>\n<td> GStreamer plugins wrapping ffmpeg</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-net-restricted</td>\n<td> base-crypto, gstreamer-1.0-core</td>\n<td> LGPL and LGPL2+</td>\n<td> GStreamer plugins for network protocols with potential patent issues in some countries</td>\n</tr>\n<tr>\n<td> gstreamer-1.0-codecs-restricted</td>\n<td> gstreamer-1.0-core</td>\n<td> LGPL and LGPL2+</td>\n<td> GStreamer restricted codecs with potential patent issues in some countries</td>\n</tr>\n<tr>\n<td> base-crypto</td>\n<td> base-system-1.0</td>\n<td> LGPL and LGPL2+</td>\n<td> Cryptographic libraries</td>\n</tr></tbody></table>\n<p>If you include a merge module in your deployment project, remember to\ninclude also its dependencies. Otherwise, the project will build\ncorrectly and install flawlessly, but, when executing your application,\nit will miss files.</p>\n\n</div>\n\n\n        "});