fragment_downloaded_cb({"url": "deploying/windows.html#page-description", "fragment": "This page explains how to deploy GStreamer along your application. There are different mechanisms which have been reviewed in Deploying your application. The details for some of the mechanisms are given here and more options might be added to this documentation in the future. \nThis is the easiest way to deploy GStreamer although most of the time it installs unnecessary files which grow the size of the installer and the target drive free space requirements. Since GStreamer might be shared among all applications that use it though the extra space requirements are somewhat blurred. \nSimply pack GStreamer runtime installer the same one you installed in your development machine inside your installer or download it from your installer and execute it silently using msiexec. msiexec is the tool that wraps most of the Windows Installer functionality and offers a number of options to suit your needs. You can review these options by executing msiexec without parameters. For example using \nThis will bring up the installation dialog as if the user had double clicked on the msi file. Usually you will want to let the user choose where they want to install GStreamer. An environment variable will let your application locate it later on. \nYou can use the same method as the shared GStreamer but instruct its installer to deploy to your application s folder or a subfolder Again use the msiexec parameters that suit you best. For example \nThis will install GStreamer to C Desired Folder showing a progress dialog but not requiring user intervention. \nOn the other side of the spectrum if you want to reduce the space requirements and installer size to the maximum you can manually choose which GStreamer libraries to deploy. Unfortunately you are on your own on this road besides using the Dependency Walker tool to discover inter DLL dependencies. \nBear in mind that GStreamer is modular in nature. Plug ins are loaded depending on the media that is being played so if you do not know in advance what files you are going to play you do not know which DLLs you need to deploy. \nIf you are building your installer using one of the Professional editions of Visual Studio or WiX you can take advantage of pre packaged Merge Modules. GStreamer is divided in packages which roughly take care of different tasks. There is the core package the playback package the networking package etc. Each package contains the necessary libraries and files to accomplish its task. \nThe Merge Modules are pieces that can be put together to build a larger Windows Installer. In this case you just need to create a deployment project for your application with Visual Studio and then add the Merge Modules for the GStreamer packages your application needs. \nThis will produce a smaller installer than deploying the complete GStreamer without the added burden of having to manually pick each library. You just need to know which packages your application requires. \nIf you include a merge module in your deployment project remember to include also its dependencies. Otherwise the project will build correctly and install flawlessly but when executing your application it will miss files. \n"});