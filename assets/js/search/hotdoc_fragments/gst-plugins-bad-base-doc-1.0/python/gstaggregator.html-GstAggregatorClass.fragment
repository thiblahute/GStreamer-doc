fragment_downloaded_cb({"url": "gst-plugins-bad-base-doc-1.0/python/gstaggregator.html#GstAggregatorClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstAggregatorClass\">\n\t\t<h3 id=\"gstbadbaseaggregatorclass\">\n\tGstBadBase.AggregatorClass\n</h3>\n\n\t\t<pre>\ntypedef struct _GstAggregatorClass  GstBadBase.AggregatorClass</pre>\n<p>The aggregator base class will handle in a thread-safe way all manners of\nconcurrent flushes, seeks, pad additions and removals, leaving to the\nsubclass the responsibility of clipping buffers, and aggregating buffers in\nthe way the implementor sees fit.</p>\n<p>It will also take care of event ordering (stream-start, segment, eos).</p>\n<p>Basically, a basic implementation will override <em>aggregate</em>, and call\n_finish_buffer from inside that function.</p>\n\n\n</div>\n\n\n\n"});