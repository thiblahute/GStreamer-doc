fragment_downloaded_cb({"url": "licensing.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"licensing.md\">\n        <!-- FIXME: merge this page with the former sdk's legal-information.md\n            and the legal section from the FAQ\n-->\n<h1 id=\"licensing-your-applications-and-plugins-for-use-with-gstreamer\">Licensing your applications and plugins for use with GStreamer</h1>\n<p>This document is the result of many discussions both inside the\nGStreamer community and with stakeholders outside the community. It\nincludes the results of discussions with lawyers, including official\nrepresentatives of the FSF, to help us ensure we cover the legal issues\nas correctly as possible. This does not mean the FSF or anyone else\nendorse the opinions in this page. The opinions only represent the rough\nconsensus of the GStreamer community. The advice contained in here is\nmeant as information and guidance for people developing free and open\nsource software using the GStreamer library, so they are aware of the\nconsequences of their choices. People developing proprietary software or\npeople distributing GStreamer might also find this document useful in\norder to understand how GStreamer works in a licensing context.</p>\n<p>This text is also meant to explain a little about our thinking in\nregards to how to deal with the problem of software patents which is an\neven bigger pain in the field of multimedia than other fields of\nprogramming.</p>\n<p>For more information on licensing you can check out our <a href=\"frequently-asked-questions/legal.html\">legal\nFAQ</a></p>\n<h2 id=\"licensing-of-code-contributed-to-gstreamer-itself\">Licensing of code contributed to GStreamer itself</h2>\n<p>GStreamer is a plugin-based framework licensed under the LGPL. The\nreason for this choice in licensing is to ensure that everyone can use\nGStreamer to build applications using licenses of their choice.</p>\n<p>To keep this policy viable, the GStreamer community has made a few\nlicensing rules for code to be included in GStreamer's core or\nGStreamer's official modules, like our plugin packages. <strong>We require\nthat all code going into our core packages is LGPL</strong>. For the plugin\ncode, we require the <strong>use of the LGPL for all plugins written from\nscratch or linking to external libraries</strong>. The only exception to this\nis when plugins contain older code under the BSD and MIT license. They\ncan use those licenses instead and will still be considered for\ninclusion, we do prefer that all new code written though is at least\ndual licensed LGPL. We do not accept GPL code to be added to our plugins\nmodules, but we do accept LGPL-licensed plugins using an external GPL\nlibrary for some of our plugin modules. The reason we demand plugins be\nlicensed under the LGPL, even when they are using a GPL library, is that\nother developers might want to use the plugin code as a template for\nplugins linking to non-GPL libraries. We also accept dual licensed\nplugins for inclusion as long as one of the licenses offered for dual\nlicensing is the LGPL.</p>\n<p>We also do not allow plugins under any license into our core,base or\ngood packages if they have known patent issues associated with them.\nThis means that even a contributed LGPL/MIT licensed implementation of\nsomething which there is a licensing body claiming fees for, those\nplugins would need to go into our gst-plugins-ugly module.</p>\n<p>All new plugins, regardless of licensing or patents tend to have to go\nthrough a period in our incubation module, gst-plugins-bad before moving\nto ugly, base or good.</p>\n<h2 id=\"licensing-of-applications-using-gstreamer\">Licensing of applications using GStreamer</h2>\n<p>The licensing of GStreamer is no different from a lot of other libraries\nout there like GTK+ or glibc: we use the <a href=\"http://www.fsf.org/licenses/lgpl.html\">LGPL</a>. What complicates things\nwith regards to GStreamer is its plugin-based design and the heavily\npatented and proprietary nature of many multimedia codecs. While patents\non software are currently only allowed in a small minority of world\ncountries (the US and Australia being the most important of those), the\nproblem is that due to the central place the US hold in the world\neconomy and the computing industry, software patents are hard to ignore\nwherever you are.</p>\n<p>Due to this situation, many companies, including major GNU/Linux\ndistributions, get trapped in a situation where they either get bad\nreviews due to lacking out-of-the-box media playback capabilities (and\nattempts to educate the reviewers have met with little success so far),\nor go against their own - and the free software movement's - wish to\navoid proprietary software. Due to competitive pressure, most choose to\nadd some support. Doing that through pure free software solutions would\nhave them risk heavy litigation and punishment from patent owners. So\nwhen the decision is made to include support for patented codecs, it\nleaves them the choice of either using special proprietary applications,\nor try to integrate the support for these codecs through proprietary\nplugins into the multimedia infrastructure provided by GStreamer. Faced\nwith one of these two evils the GStreamer community of course prefer the\nsecond option.</p>\n<p>The problem which arises is that most free software and open source\napplications developed use the GPL as their license. While this is\ngenerally a good thing, it creates a dilemma for people who want to put\ntogether a distribution. The dilemma they face is that if they include\nproprietary plugins in GStreamer to support patented formats in a way\nthat is legal for them, they do risk running afoul of the GPL license of\nthe applications. We have gotten some conflicting reports from lawyers\non whether this is actually a problem, but the official stance of the\nFSF is that it is a problem. We view the FSF as an authority on this\nmatter, so we are inclined to follow their interpretation of the GPL\nlicense.</p>\n<p>So what does this mean for you as an application developer? Well, it\nmeans <strong>you have to make an active decision on whether you want your\napplication to be used together with proprietary plugins or not</strong>. What\nyou decide here will also influence the chances of commercial\ndistributions and Unix vendors shipping your application. The GStreamer\ncommunity suggest you license your software using a license that will\nallow non-free, patent implementing or non-GPL compatible plugins to be\nbundled with GStreamer and your applications, in order to make sure that\nas many vendors as possible go with GStreamer instead of less free\nsolutions. This in turn we hope and think will let GStreamer be a\nvehicle for wider use of free formats like the\n<a href=\"http://www.xiph.org/\">Xiph.org</a> formats.</p>\n<p>If you do decide that you want to allow for non-free plugins to be used\nwith your application you have a variety of choices. One of the simplest\nis using licenses like LGPL, MPL or BSD for your application instead of\nthe GPL. Or you can add a exceptions clause to your GPL license stating\nthat you except GStreamer plugins from the obligations of the GPL.</p>\n<p>A good example of such a GPL exception clause would be, using the Totem\nvideo player project as an example:</p>\n<p><em>The developers of the Totem video player hereby grants permission for\nnon-GPL compatible GStreamer plugins to be used and distributed together\nwith GStreamer and Totem. This permission is above and beyond the\npermissions granted by the GPL license by which Totem is covered. If you\nmodify this code, you may extend this exception to your version of the\ncode, but you are not obligated to do so. If you do not wish to do so,\ndelete this exception statement from your version.</em></p>\n<p>Our suggestion among these choices is to use the LGPL license, as it is\nwhat resembles the GPL most and it makes it a good licensing fit with\nthe major GNU/Linux desktop projects like GNOME and KDE. It also allows\nyou to share code more openly with projects that have compatible\nlicenses. As you might deduce, pure GPL licensed code without the\nabove-mentioned clause is not re-usable in your application under a GPL\nplus exception clause unless you get the author of the pure GPL code to\nallow a relicensing to GPL plus exception clause. By choosing the LGPL,\nthere is no need for an exception clause and thus code can be shared\nfreely between your application and other LGPL using projects.</p>\n<p>We have above outlined the practical reasons for why the GStreamer\ncommunity suggest you allow non-free plugins to be used with your\napplications. We feel that in the multimedia arena, the free software\ncommunity is still not strong enough to set the agenda and that blocking\nnon-free plugins to be used in our infrastructure hurts us more than it\nhurts the patent owners and their ilk.</p>\n<p>This view is not shared by everyone. The <a href=\"http://www.fsf.org\">Free Software\nFoundation</a> urges you to use an unmodified GPL for\nyour applications, so as to push back against the temptation to use\nnon-free plug-ins. They say that since not everyone else has the\nstrength to reject them because they are unethical, they ask your help\nto give them a legal reason to do so.</p>\n\n        \n\n    </div>\n\n\n        "});