fragment_downloaded_cb({"url": "gst-plugins-base-video-doc-1.0/python/video-blend.html#gst_video_blend", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_video_blend\">\n\t\t<h3 id=\"gstvideovideo_blend\">\n\t<span><code>GstVideo.video_blend</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef GstVideo.video_blend (dest, src, x, y, global_alpha):\n    #python wrapper for 'gst_video_blend'</pre>\n\n<p>Lets you blend the <em>src</em> image into the <em>dest</em> image</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>dest:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"video-frame.html#GstVideoFrame\">GstVideo.VideoFrame</a> where to blend <em>src</em> in</p>\n</td>\n<td>\n<a title=\"GstVideo.VideoFrame\" href=\"video-frame.html#GstVideoFrame\">GstVideo.VideoFrame</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>src:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"video-frame.html#GstVideoFrame\">GstVideo.VideoFrame</a> that we want to blend into</p>\n</td>\n<td>\n<a title=\"GstVideo.VideoFrame\" href=\"video-frame.html#GstVideoFrame\">GstVideo.VideoFrame</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>x:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The x offset in pixel where the <em>src</em> image should be blended</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>y:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the y offset in pixel where the <em>src</em> image should be blended</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>global_alpha:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the global_alpha each per-pixel alpha value is multiplied\nwith</p>\n</td>\n<td>\n<a title=\"float\" href=\"https://docs.python.org/2/library/functions.html#float\">float</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});