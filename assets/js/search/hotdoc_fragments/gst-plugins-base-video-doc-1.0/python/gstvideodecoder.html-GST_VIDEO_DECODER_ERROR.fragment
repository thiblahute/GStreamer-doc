fragment_downloaded_cb({"url": "gst-plugins-base-video-doc-1.0/python/gstvideodecoder.html#GST_VIDEO_DECODER_ERROR", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_VIDEO_DECODER_ERROR\">\n\t\t<h3 id=\"gst_video_decoder_error-not-introspectable\">\n\t<span><code>GST_VIDEO_DECODER_ERROR (not introspectable)</code></span>\n</h3>\n\n\t\t<pre class=\"raw_code\">\n#define GST_VIDEO_DECODER_ERROR(el, w, domain, code, text, debug, ret) \\\nG_STMT_START {                                                              \\\n  gchar *__txt = _gst_element_error_printf text;                            \\\n  gchar *__dbg = _gst_element_error_printf debug;                           \\\n  GstVideoDecoder *__dec = GST_VIDEO_DECODER (el);                   \\\n  ret = _gst_video_decoder_error (__dec, w, GST_ ## domain ## _ERROR,    \\\n      GST_ ## domain ## _ERROR_ ## code, __txt, __dbg, __FILE__,            \\\n      GST_FUNCTION, __LINE__);                                              \\\n} G_STMT_END\n</pre>\n\n<p>Utility function that video decoder elements can use in case they encountered\na data processing error that may be fatal for the current \"data unit\" but\nneed not prevent subsequent decoding.  Such errors are counted and if there\nare too many, as configured in the context's max_errors, the pipeline will\npost an error message and the application will be requested to stop further\nmedia processing.  Otherwise, it is considered a \"glitch\" and only a warning\nis logged. In either case, <em>ret</em> is set to the proper value to\nreturn to upstream/caller (indicating either GST_FLOW_ERROR or GST_FLOW_OK).</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters39\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>el:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the base video decoder element that generates the error</p>\n</td>\n<td>\n el\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>w:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element defined weight of the error, added to error count</p>\n</td>\n<td>\n w\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>domain:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>like CORE, LIBRARY, RESOURCE or STREAM (see gstreamer-GstGError)</p>\n</td>\n<td>\n domain\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>code:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>error code defined for that domain (see gstreamer-GstGError)</p>\n</td>\n<td>\n code\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>text:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the message to display (format string and args enclosed in\nparentheses)</p>\n</td>\n<td>\n text\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>debug:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>debugging information for the message (format string and args\nenclosed in parentheses)</p>\n</td>\n<td>\n debug\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ret:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>variable to receive return value</p>\n</td>\n<td>\n ret\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n"});