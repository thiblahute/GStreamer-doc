fragment_downloaded_cb({"url": "gst-plugins-base-video-doc-1.0/c/video-overlay-composition.html#gst_video_overlay_rectangle_get_pixels_unscaled_argb", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_video_overlay_rectangle_get_pixels_unscaled_argb\">\n\t\t<h3 id=\"gst_video_overlay_rectangle_get_pixels_unscaled_argb1\">\n\t<span><code>gst_video_overlay_rectangle_get_pixels_unscaled_argb</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstBuffer\" href=\"../../libgstreamer-doc-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a> *\ngst_video_overlay_rectangle_get_pixels_unscaled_argb (<a title=\"GstVideoOverlayRectangle\" href=\"video-overlay-composition.html#GstVideoOverlayRectangle\">GstVideoOverlayRectangle</a> * rectangle,\n                                                      <a title=\"GstVideoOverlayFormatFlags\" href=\"video-overlay-composition.html#GstVideoOverlayFormatFlags\">GstVideoOverlayFormatFlags</a> flags)</pre>\n\n<p>Retrieves the pixel data as it is. This is useful if the caller can\ndo the scaling itself when handling the overlaying. The rectangle will\nneed to be scaled to the render dimensions, which can be retrieved using\n<a href=\"video-overlay-composition.html#gst_video_overlay_rectangle_get_render_rectangle\">gst_video_overlay_rectangle_get_render_rectangle</a>.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters15\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>rectangle:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"video-overlay-composition.html#GstVideoOverlayRectangle\">GstVideoOverlayRectangle</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>flags:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>flags.\nIf a global_alpha value != 1 is set for the rectangle, the caller\nshould set the <a href=\"video-overlay-composition.html#GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA\">GST_VIDEO_OVERLAY_FORMAT_FLAG_GLOBAL_ALPHA</a> flag\nif he wants to apply global-alpha himself. If the flag is not set\nglobal_alpha is applied internally before returning the pixel-data.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns15\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"../../libgstreamer-doc-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a> holding the ARGB pixel data with\n<a href=\"gstvideometa.html#GstVideoMeta\">GstVideoMeta</a> set. This function does not return a reference, the caller\nshould obtain a reference of her own with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstBuffer.html#gst-buffer-ref\">gst_buffer_ref</a> if needed.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstBuffer\" href=\"../../libgstreamer-doc-1.0/c/gstbuffer.html#GstBuffer\">GstBuffer</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Don't free data after the code is done\"><span class=\"acronym\">transfer: none</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});