fragment_downloaded_cb({"url": "gst-plugins-base-video-doc-1.0/c/gstvideoencoder.html#GstVideoEncoderClass", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstVideoEncoderClass\">\n\t\t<h3 id=\"struct-gstvideoencoderclass\">\n\t\tstruct GstVideoEncoderClass\n\t</h3>\n\n\t\t<p>Subclasses can override any of the available virtual methods or not, as\nneeded. At minimum <em>handle_frame</em> needs to be overridden, and <em>set_format</em>\nand <em>get_caps</em> are likely needed as well.</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"fields\">Fields</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.element_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstElementClass\" href=\"../../libgstreamer-doc-1.0/gstelement.html#GstElementClass\">GstElementClass</a> <em><code>element_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.open\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>open</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element changes to GST_STATE_READY.\nAllows opening external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.close\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>close</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element changes to GST_STATE_NULL.\nAllows closing external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.start\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>start</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element starts processing.\nAllows opening external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.stop\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>stop</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled when the element stops processing.\nAllows closing external resources.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.set_format\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>set_format</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nNotifies subclass of incoming data format.\nGstVideoCodecState fields have already been\nset according to provided caps.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.handle_frame\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>handle_frame</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Provides input frame to subclass.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.reset\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>reset</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nAllows subclass (encoder) to perform post-seek semantics reset.\nDeprecated.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.finish\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>finish</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nCalled to request subclass to dispatch any pending remaining\ndata (e.g. at EOS).</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.pre_push\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>pre_push</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nAllows subclass to push frame downstream in whatever\nshape or form it deems appropriate.  If not provided,\nprovided encoded frame data is simply pushed downstream.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.getcaps\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>getcaps</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nAllows for a custom sink getcaps implementation (e.g.\nfor multichannel input specification).  If not implemented,\ndefault returns gst_video_encoder_proxy_getcaps\napplied to sink template caps.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.sink_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>sink_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nEvent handler on the sink pad. This function should return\nTRUE if the event was handled and should be discarded\n(i.e. not unref'ed).\nSubclasses should chain up to the parent implementation to\ninvoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.src_event\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>src_event</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nEvent handler on the source pad. This function should return\nTRUE if the event was handled and should be discarded\n(i.e. not unref'ed).\nSubclasses should chain up to the parent implementation to\ninvoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.negotiate\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>negotiate</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nNegotiate with downstream and configure buffer pools, etc.\nSubclasses should chain up to the parent implementation to\ninvoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.decide_allocation\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>decide_allocation</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nSetup the allocation parameters for allocating output\nbuffers. The passed in query contains the result of the\ndownstream allocation query.\nSubclasses should chain up to the parent implementation to\ninvoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.propose_allocation\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>propose_allocation</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nPropose buffer allocation parameters for upstream elements.\nSubclasses should chain up to the parent implementation to\ninvoke the default handler.</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.flush\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>flush</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nFlush all remaining data from the encoder without\npushing it downstream. Since: 1.2</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.sink_query\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>sink_query</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nQuery handler on the sink pad. This function should\nreturn TRUE if the query could be performed. Subclasses\nshould chain up to the parent implementation to invoke the\ndefault handler. Since 1.4</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.src_query\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>src_query</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional.\nQuery handler on the source pad. This function should\nreturn TRUE if the query could be performed. Subclasses\nshould chain up to the parent implementation to invoke the\ndefault handler. Since 1.4</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass.transform_meta\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><em><code>transform_meta</code></em>():</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Optional. Transform the metadata on the input buffer to the\noutput buffer. By default this method is copies all meta without\ntags and meta with only the \"video\" tag. subclasses can\nimplement this method and return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if the metadata is to be\ncopied. Since 1.6</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstVideoEncoderClass._gst_reserved\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>gpointer <em><code>_gst_reserved</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});