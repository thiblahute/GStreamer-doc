fragment_downloaded_cb({"url": "gst-plugins-base-video-doc-1.0/javascript/gstvideoutils.html#GST_VIDEO_CODEC_FRAME_IS_FORCE_KEYFRAME_HEADERS", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_VIDEO_CODEC_FRAME_IS_FORCE_KEYFRAME_HEADERS\">\n\t\t<h3 id=\"gst_video_codec_frame_is_force_keyframe_headers-not-introspectable\">\n\t<span><code>GST_VIDEO_CODEC_FRAME_IS_FORCE_KEYFRAME_HEADERS (not introspectable)</code></span>\n</h3>\n\n\t\t<pre class=\"raw_code\">\n#define GST_VIDEO_CODEC_FRAME_IS_FORCE_KEYFRAME_HEADERS(frame)      (GST_VIDEO_CODEC_FRAME_FLAG_IS_SET(frame, GST_VIDEO_CODEC_FRAME_FLAG_FORCE_KEYFRAME_HEADERS))\n</pre>\n\n<p>Tests if encoder should output stream headers before outputting the\nresulting encoded buffer for the given frame.</p>\n<p>Applies only to frames provided to encoders. Decoders can safely\nignore this field.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters17\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>frame:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../gst-plugins-base-video-doc-1.0/javascript/gstvideoutils.html#GstVideoCodecFrame\">GstVideo.VideoCodecFrame</a></p>\n</td>\n<td>\n frame\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});