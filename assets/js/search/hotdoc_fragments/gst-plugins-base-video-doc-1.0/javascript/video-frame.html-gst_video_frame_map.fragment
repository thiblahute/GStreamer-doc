fragment_downloaded_cb({"url": "gst-plugins-base-video-doc-1.0/javascript/video-frame.html#gst_video_frame_map", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_video_frame_map\">\n\t\t<h3 id=\"gstvideovideoframeprototypemap\">\n\t<span><code>GstVideo.VideoFrame.prototype.map</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\nfunction GstVideo.VideoFrame.prototype.map(info: <a title=\"GstVideo.VideoInfo\" href=\"../../gst-plugins-base-video-doc-1.0/javascript/video-info.html#GstVideoInfo\">GstVideo.VideoInfo</a>, buffer: <a title=\"Gst.Buffer\" href=\"../../libgstreamer-doc-1.0/c/gstbuffer.html#GstBuffer\">Gst.Buffer</a>, flags: <a title=\"Gst.MapFlags\" href=\"../../libgstreamer-doc-1.0/c/gstmemory.html#GstMapFlags\">Gst.MapFlags</a>): {\n    // javascript wrapper for 'gst_video_frame_map'\n}</pre>\n\n<p>Use <em>info</em> and <em>buffer</em> to fill in the values of <em>frame</em>. <em>frame</em> is usually\nallocated on the stack, and you will pass the address to the <a href=\"../../gst-plugins-base-video-doc-1.0/javascript/video-frame.html#GstVideoFrame\">GstVideo.VideoFrame</a>\nstructure allocated on the stack; <a href=\"../../gst-plugins-base-video-doc-1.0/javascript/video-frame.html#gst_video_frame_map\">GstVideo.VideoFrame.prototype.map</a> will then fill in\nthe structures with the various video-specific information you need to access\nthe pixels of the video buffer. You can then use accessor macros such as\n<a href=\"../../gst-plugins-base-video-doc-1.0/c/video-frame.html#GST_VIDEO_FRAME_COMP_DATA\">GST_VIDEO_FRAME_COMP_DATA (not introspectable)</a>, <a href=\"../../gst-plugins-base-video-doc-1.0/c/video-frame.html#GST_VIDEO_FRAME_PLANE_DATA\">GST_VIDEO_FRAME_PLANE_DATA (not introspectable)</a>,\n<a href=\"../../gst-plugins-base-video-doc-1.0/c/video-frame.html#GST_VIDEO_FRAME_COMP_STRIDE\">GST_VIDEO_FRAME_COMP_STRIDE (not introspectable)</a>, <a href=\"../../gst-plugins-base-video-doc-1.0/c/video-frame.html#GST_VIDEO_FRAME_PLANE_STRIDE\">GST_VIDEO_FRAME_PLANE_STRIDE (not introspectable)</a> etc.\nto get to the pixels.</p>\n<pre><code class=\"language-[&lt;!--\">   GstVideoFrame vframe;\n   ...\n   // set RGB pixels to black one at a time\n   if (gst_video_frame_map (&amp;amp;vframe, video_info, video_buffer, GST_MAP_WRITE)) {\n     guint8 *pixels = GST_VIDEO_FRAME_PLANE_DATA (vframe, 0);\n     guint stride = GST_VIDEO_FRAME_PLANE_STRIDE (vframe, 0);\n     guint pixel_stride = GST_VIDEO_FRAME_COMP_PSTRIDE (vframe, 0);\n\n     for (h = 0; h &lt; height; ++h) {\n       for (w = 0; w &lt; width; ++w) {\n         guint8 *pixel = pixels + h * stride + w * pixel_stride;\n\n         memset (pixel, 0, pixel_stride);\n       }\n     }\n\n     gst_video_frame_unmap (&amp;amp;vframe);\n   }\n   ...\n</code></pre>\n<p>All video planes of <em>buffer</em> will be mapped and the pointers will be set in\n<em>frame</em>-&gt;data.</p>\n<p>The purpose of this function is to make it easy for you to get to the video\npixels in a generic way, without you having to worry too much about details\nsuch as whether the video data is allocated in one contiguous memory chunk\nor multiple memory chunks (e.g. one for each plane); or if custom strides\nand custom plane offsets are used or not (as signalled by GstVideoMeta on\neach buffer). This function will just fill the <a href=\"../../gst-plugins-base-video-doc-1.0/javascript/video-frame.html#GstVideoFrame\">GstVideo.VideoFrame</a> structure\nwith the right values and if you use the accessor macros everything will\njust work and you can access the data easily. It also maps the underlying\nmemory chunks for you.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>frame:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to <a href=\"../../gst-plugins-base-video-doc-1.0/javascript/video-frame.html#GstVideoFrame\">GstVideo.VideoFrame</a></p>\n</td>\n<td>\n<a title=\"GstVideo.VideoFrame\" href=\"../../gst-plugins-base-video-doc-1.0/javascript/video-frame.html#GstVideoFrame\">GstVideo.VideoFrame</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>info:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"../../gst-plugins-base-video-doc-1.0/javascript/video-info.html#GstVideoInfo\">GstVideo.VideoInfo</a></p>\n</td>\n<td>\n<a title=\"GstVideo.VideoInfo\" href=\"../../gst-plugins-base-video-doc-1.0/javascript/video-info.html#GstVideoInfo\">GstVideo.VideoInfo</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>buffer:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the buffer to map</p>\n</td>\n<td>\n<a title=\"Gst.Buffer\" href=\"../../libgstreamer-doc-1.0/c/gstbuffer.html#GstBuffer\">Gst.Buffer</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>flags:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p><a href=\"../../libgstreamer-doc-1.0/c/gstmemory.html#GstMapFlags\">Gst.MapFlags</a></p>\n</td>\n<td>\n<a title=\"Gst.MapFlags\" href=\"../../libgstreamer-doc-1.0/c/gstmemory.html#GstMapFlags\">Gst.MapFlags</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean\">true</a> on success.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Number\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/Number\">Number</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});