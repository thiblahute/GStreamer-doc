fragment_downloaded_cb({"url": "libgstreamer-1.0/gsturi.html#gst_filename_to_uri", "fragment": "gst_filename_to_uri \nGst.filename_to_uri \nGst.prototype.filename_to_uri \nSimilar to g_filename_to_uri but attempts to handle relative file paths as well. Before converting filename into an URI it will be prefixed by the current working directory if it is a relative path and then the path will be canonicalised so that it doesn t contain any or segments. \nOn Windows filename should be in UTF encoding. \nParameters \nabsolute or relative file name path \nnewly allocated URI string or NULL on error. The caller must free the URI string with g_free when no longer needed. \nSimilar to GLib.filename_to_uri but attempts to handle relative file paths as well. Before converting filename into an URI it will be prefixed by the current working directory if it is a relative path and then the path will be canonicalised so that it doesn t contain any or segments. \nOn Windows filename should be in UTF encoding. \nParameters \nabsolute or relative file name path \nnewly allocated URI string or NULL on error. The caller must free the URI string with GLib.free when no longer needed. \nSimilar to GLib.prototype.filename_to_uri but attempts to handle relative file paths as well. Before converting filename into an URI it will be prefixed by the current working directory if it is a relative path and then the path will be canonicalised so that it doesn t contain any or segments. \nOn Windows filename should be in UTF encoding. \nParameters \nabsolute or relative file name path \nnewly allocated URI string or NULL on error. The caller must free the URI string with GLib.prototype.free when no longer needed. \n"});