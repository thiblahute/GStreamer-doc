fragment_downloaded_cb({"url": "libgstreamer-1.0/gstelement-h.html#gst_element_call_async", "fragment": "Gst.prototype.call_async \ngst_element_call_async \nGst.Element.CallAsync \nGst.Element.call_async \nCalls func from another thread and passes user_data to it. This is to be used for cases when a state change has to be performed from a streaming thread directly via Gst.prototype.set_state or indirectly e.g. via SEEK events. \nCalling those functions directly from the streaming thread will cause deadlocks in many situations as they might involve waiting for the streaming thread to shut down from this very streaming thread. \nMT safe. \nParameters \na Gst.Element \nFunction to call asynchronously from another thread \nData to pass to func \nGDestroyNotify for user_data \nSince \nCalls func from another thread and passes user_data to it. This is to be used for cases when a state change has to be performed from a streaming thread directly via gst_element_set_state or indirectly e.g. via SEEK events. \nCalling those functions directly from the streaming thread will cause deadlocks in many situations as they might involve waiting for the streaming thread to shut down from this very streaming thread. \nMT safe. \nParameters \na GstElement \nFunction to call asynchronously from another thread \nData to pass to func \nGDestroyNotify for user_data \nSince \nCalls func from another thread and passes user_data to it. This is to be used for cases when a state change has to be performed from a streaming thread directly via Gst.Element.SetState or indirectly e.g. via SEEK events. \nCalling those functions directly from the streaming thread will cause deadlocks in many situations as they might involve waiting for the streaming thread to shut down from this very streaming thread. \nMT safe. \nParameters \nFunction to call asynchronously from another thread \nData to pass to func \nGDestroyNotify for user_data \nSince \nCalls func from another thread and passes user_data to it. This is to be used for cases when a state change has to be performed from a streaming thread directly via Gst.Element.set_state or indirectly e.g. via SEEK events. \nCalling those functions directly from the streaming thread will cause deadlocks in many situations as they might involve waiting for the streaming thread to shut down from this very streaming thread. \nMT safe. \nParameters \na Gst.Element \nFunction to call asynchronously from another thread \nData to pass to func \nGDestroyNotify for user_data \nSince \n"});