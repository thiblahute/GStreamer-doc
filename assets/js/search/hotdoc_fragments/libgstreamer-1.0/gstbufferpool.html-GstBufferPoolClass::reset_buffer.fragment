fragment_downloaded_cb({"url": "libgstreamer-1.0/gstbufferpool.html#GstBufferPoolClass::reset_buffer", "fragment": "reset_buffer \nreset_buffer \nResetBuffer \nreset_buffer \nreset the buffer to its state when it was freshly allocated. The default implementation will clear the flags timestamps and will remove the metadata without the Gst.MetaFlags.POOLED flag even the metadata with Gst.MetaFlags.LOCKED If the Gst.BufferFlags.TAG_MEMORY was set this function can also try to restore the memory and clear the Gst.BufferFlags.TAG_MEMORY again. \nParameters \nreset the buffer to its state when it was freshly allocated. The default implementation will clear the flags timestamps and will remove the metadata without the Gst.MetaFlags.POOLED flag even the metadata with Gst.MetaFlags.LOCKED If the Gst.BufferFlags.TAG_MEMORY was set this function can also try to restore the memory and clear the Gst.BufferFlags.TAG_MEMORY again. \nParameters \nreset the buffer to its state when it was freshly allocated. The default implementation will clear the flags timestamps and will remove the metadata without the Gst.MetaFlags.Pooled flag even the metadata with Gst.MetaFlags.Locked If the Gst.BufferFlags.TagMemory was set this function can also try to restore the memory and clear the Gst.BufferFlags.TagMemory again. \nParameters \nreset the buffer to its state when it was freshly allocated. The default implementation will clear the flags timestamps and will remove the metadata without the GST_META_FLAG_POOLED flag even the metadata with GST_META_FLAG_LOCKED If the GST_BUFFER_FLAG_TAG_MEMORY was set this function can also try to restore the memory and clear the GST_BUFFER_FLAG_TAG_MEMORY again. \nParameters \n"});