fragment_downloaded_cb({"url": "libgstreamer-1.0/gstbus.html#gst_bus_enable_sync_message_emission", "fragment": "gst_bus_enable_sync_message_emission \nGst.Bus.enable_sync_message_emission \nGst.Bus.prototype.enable_sync_message_emission \nInstructs GStreamer to emit the sync message signal after running the bus s sync handler. This function is here so that code can ensure that they can synchronously receive messages without having to affect what the bin s sync handler is. \nThis function may be called multiple times. To clean up the caller is responsible for calling gst_bus_disable_sync_message_emission as many times as this function is called. \nWhile this function looks similar to gst_bus_add_signal_watch it is not exactly the same this function enables synchronous emission of signals when messages arrive gst_bus_add_signal_watch adds an idle callback to pop messages off the bus asynchronously. The sync message signal comes from the thread of whatever object posted the message the message signal is marshalled to the main thread via the main loop. \nMT safe. \nParameters \na GstBus on which you want to receive the sync message signal \nInstructs GStreamer to emit the sync message signal after running the bus s sync handler. This function is here so that code can ensure that they can synchronously receive messages without having to affect what the bin s sync handler is. \nThis function may be called multiple times. To clean up the caller is responsible for calling Gst.Bus.disable_sync_message_emission as many times as this function is called. \nWhile this function looks similar to Gst.Bus.add_signal_watch it is not exactly the same this function enables synchronous emission of signals when messages arrive Gst.Bus.add_signal_watch adds an idle callback to pop messages off the bus asynchronously. The sync message signal comes from the thread of whatever object posted the message the message signal is marshalled to the main thread via the main loop. \nMT safe. \nParameters \na Gst.Bus on which you want to receive the sync message signal \nInstructs GStreamer to emit the sync message signal after running the bus s sync handler. This function is here so that code can ensure that they can synchronously receive messages without having to affect what the bin s sync handler is. \nThis function may be called multiple times. To clean up the caller is responsible for calling Gst.Bus.prototype.disable_sync_message_emission as many times as this function is called. \nWhile this function looks similar to Gst.Bus.prototype.add_signal_watch it is not exactly the same this function enables synchronous emission of signals when messages arrive Gst.Bus.prototype.add_signal_watch adds an idle callback to pop messages off the bus asynchronously. The sync message signal comes from the thread of whatever object posted the message the message signal is marshalled to the main thread via the main loop. \nMT safe. \nParameters \na Gst.Bus on which you want to receive the sync message signal \n"});