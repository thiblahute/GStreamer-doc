fragment_downloaded_cb({"url": "libgstreamer-1.0/gstiterator.html#GstIteratorResyncFunction", "fragment": "GstIteratorResyncFunction \nGst.IteratorResyncFunction \nGst.IteratorResyncFunction \nGst.IteratorResyncFunction \nThis function will be called whenever a concurrent update happened to the iterated datastructure. The implementor of the iterator should restart the iterator from the beginning and clean up any state it might have. \nImplementors of a GstIterator should implement this function and pass it to the constructor of the custom iterator. The function will be called with the iterator lock held. \nParameters \nthe iterator \nThis function will be called whenever a concurrent update happened to the iterated datastructure. The implementor of the iterator should restart the iterator from the beginning and clean up any state it might have. \nImplementors of a Gst.Iterator should implement this function and pass it to the constructor of the custom iterator. The function will be called with the iterator lock held. \nParameters \nthe iterator \nThis function will be called whenever a concurrent update happened to the iterated datastructure. The implementor of the iterator should restart the iterator from the beginning and clean up any state it might have. \nImplementors of a Gst.Iterator should implement this function and pass it to the constructor of the custom iterator. The function will be called with the iterator lock held. \nParameters \nthe iterator \nThis function will be called whenever a concurrent update happened to the iterated datastructure. The implementor of the iterator should restart the iterator from the beginning and clean up any state it might have. \nImplementors of a Gst.Iterator should implement this function and pass it to the constructor of the custom iterator. The function will be called with the iterator lock held. \nParameters \nthe iterator \n"});