fragment_downloaded_cb({"url": "libgstreamer-1.0/gstbus.html#gst_bus_add_watch_full", "fragment": "gst_bus_add_watch_full \nGst.Bus.add_watch_full \nGst.Bus.AddWatchFull \nGst.prototype.add_watch_full \nAdds a bus watch to the default main context with the given priority e.g. G_PRIORITY_DEFAULT It is also possible to use a non default main context set up using g_main_context_push_thread_default before one had to create a bus watch source and attach it to the desired main context manually \nThis function is used to receive asynchronous messages in the main loop. There can only be a single bus watch per bus you must remove it before you can set a new one. \nThe bus watch will only work if a GLib main loop is being run. \nWhen func is called the message belongs to the caller if you want to keep a copy of it call gst_message_ref before leaving func. \nThe watch can be removed using gst_bus_remove_watch or by returning FALSE from func. If the watch was added to the default main context it is also possible to remove the watch using g_source_remove. \nMT safe. \nParameters \na GstBus to create the watch for. \nThe priority of the watch. \nA function to call when a message is received. \nuser data passed to func. \nthe function to call when the source is removed. \nThe event source id or if bus already got an event source. \nAdds a bus watch to the default main context with the given priority e.g. GLib.PRIORITY_DEFAULT It is also possible to use a non default main context set up using GLib.MainContext.push_thread_default before one had to create a bus watch source and attach it to the desired main context manually \nThis function is used to receive asynchronous messages in the main loop. There can only be a single bus watch per bus you must remove it before you can set a new one. \nThe bus watch will only work if a GLib main loop is being run. \nWhen func is called the message belongs to the caller if you want to keep a copy of it call gst_message_ref not introspectable before leaving func. \nThe watch can be removed using Gst.Bus.remove_watch or by returning False from func. If the watch was added to the default main context it is also possible to remove the watch using GLib.Source.remove. \nMT safe. \nParameters \na Gst.Bus to create the watch for. \nThe priority of the watch. \nA function to call when a message is received. \nuser data passed to func. \nthe function to call when the source is removed. \nThe event source id or if bus already got an event source. \nAdds a bus watch to the default main context with the given priority e.g. GLib.Constants.PRIORITY_DEFAULT It is also possible to use a non default main context set up using GLib.MainContext.PushThreadDefault before one had to create a bus watch source and attach it to the desired main context manually \nThis function is used to receive asynchronous messages in the main loop. There can only be a single bus watch per bus you must remove it before you can set a new one. \nThe bus watch will only work if a GLib main loop is being run. \nWhen func is called the message belongs to the caller if you want to keep a copy of it call gst_message_ref not introspectable before leaving func. \nThe watch can be removed using Gst.Bus.RemoveWatch or by returning false from func. If the watch was added to the default main context it is also possible to remove the watch using GLib.Source.Remove. \nMT safe. \nParameters \nThe priority of the watch. \nA function to call when a message is received. \nuser data passed to func. \nthe function to call when the source is removed. \nThe event source id or if bus already got an event source. \nAdds a bus watch to the default main context with the given priority e.g. GLib.PRIORITY_DEFAULT It is also possible to use a non default main context set up using GLib.prototype.push_thread_default before one had to create a bus watch source and attach it to the desired main context manually \nThis function is used to receive asynchronous messages in the main loop. There can only be a single bus watch per bus you must remove it before you can set a new one. \nThe bus watch will only work if a GLib main loop is being run. \nWhen func is called the message belongs to the caller if you want to keep a copy of it call gst_message_ref not introspectable before leaving func. \nThe watch can be removed using Gst.prototype.remove_watch or by returning false from func. If the watch was added to the default main context it is also possible to remove the watch using GLib.prototype.remove. \nMT safe. \nParameters \na Gst.Bus to create the watch for. \nThe priority of the watch. \nA function to call when a message is received. \nuser data passed to func. \nthe function to call when the source is removed. \nThe event source id or if bus already got an event source. \n"});