fragment_downloaded_cb({"url": "libgstreamer-1.0/gstclock.html#gst_clock_set_master", "fragment": "Gst.prototype.set_master \ngst_clock_set_master \nGst.Clock.SetMaster \nGst.Clock.set_master \nSet master as the master clock for clock. clock will be automatically calibrated so that Gst.prototype.get_time reports the same time as the master clock. \nA clock provider that slaves its clock to a master can get the current calibration values with Gst.prototype.get_calibration. \nmaster can be null in which case clock will not be slaved anymore. It will however keep reporting its time adjusted with the last configured rate and time offsets. \nParameters \na Gst.Clock \na master Gst.Clock \ntrue if the clock is capable of being slaved to a master clock. Trying to set a master on a clock without the Gst.ClockFlags.CAN_SET_MASTER flag will make this function return false. \nMT safe. \nSet master as the master clock for clock. clock will be automatically calibrated so that gst_clock_get_time reports the same time as the master clock. \nA clock provider that slaves its clock to a master can get the current calibration values with gst_clock_get_calibration. \nmaster can be NULL in which case clock will not be slaved anymore. It will however keep reporting its time adjusted with the last configured rate and time offsets. \nParameters \na GstClock \na master GstClock \nTRUE if the clock is capable of being slaved to a master clock. Trying to set a master on a clock without the GST_CLOCK_FLAG_CAN_SET_MASTER flag will make this function return FALSE. \nMT safe. \nSet master as the master clock for clock. clock will be automatically calibrated so that Gst.Clock.GetTime reports the same time as the master clock. \nA clock provider that slaves its clock to a master can get the current calibration values with Gst.Clock.GetCalibration. \nmaster can be null in which case clock will not be slaved anymore. It will however keep reporting its time adjusted with the last configured rate and time offsets. \nParameters \na master Gst.Clock \ntrue if the clock is capable of being slaved to a master clock. Trying to set a master on a clock without the Gst.ClockFlags.CanSetMaster flag will make this function return false. \nMT safe. \nSet master as the master clock for clock. clock will be automatically calibrated so that Gst.Clock.get_time reports the same time as the master clock. \nA clock provider that slaves its clock to a master can get the current calibration values with Gst.Clock.get_calibration. \nmaster can be None in which case clock will not be slaved anymore. It will however keep reporting its time adjusted with the last configured rate and time offsets. \nParameters \na Gst.Clock \na master Gst.Clock \nTrue if the clock is capable of being slaved to a master clock. Trying to set a master on a clock without the Gst.ClockFlags.CAN_SET_MASTER flag will make this function return False. \nMT safe. \n"});