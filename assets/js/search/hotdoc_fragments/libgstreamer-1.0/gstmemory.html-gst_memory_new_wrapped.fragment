fragment_downloaded_cb({"url": "libgstreamer-1.0/gstmemory.html#gst_memory_new_wrapped", "fragment": "gst_memory_new_wrapped \nGst.Memory.new_wrapped \nGst.Memory.prototype.new_wrapped \nAllocate a new memory block that wraps the given data. \nThe prefix padding must be filled with if flags contains GST_MEMORY_FLAG_ZERO_PREFIXED and GST_MEMORY_FLAG_ZERO_PADDED respectively. \nParameters \nGstMemoryFlags \ndata to wrap \nallocated size of data \noffset in data \nsize of valid data \nuser_data \ncalled with user_data when the memory is freed \na new GstMemory. \nAllocate a new memory block that wraps the given data. \nThe prefix padding must be filled with if flags contains Gst.MemoryFlags.ZERO_PREFIXED and Gst.MemoryFlags.ZERO_PADDED respectively. \nParameters \nGst.MemoryFlags \ndata to wrap \nallocated size of data \noffset in data \nsize of valid data \nuser_data \ncalled with user_data when the memory is freed \na new Gst.Memory. \nAllocate a new memory block that wraps the given data. \nThe prefix padding must be filled with if flags contains Gst.MemoryFlags.ZERO_PREFIXED and Gst.MemoryFlags.ZERO_PADDED respectively. \nParameters \nGst.MemoryFlags \ndata to wrap \nallocated size of data \noffset in data \nsize of valid data \nuser_data \ncalled with user_data when the memory is freed \na new Gst.Memory. \n"});