fragment_downloaded_cb({"url": "libgstreamer-1.0/gstclock.html#gst_clock_id_wait_async", "fragment": "gst_clock_id_wait_async \nGst.Clock.id_wait_async \nGst.Clock.IdWaitAsync \nGst.prototype.id_wait_async \nRegister a callback on the given GstClockID id with the given function and user_data. When passing a GstClockID with an invalid time to this function the callback will be called immediately with a time set to GST_CLOCK_TIME_NONE. The callback will be called when the time of id has been reached. \nThe callback func can be invoked from any thread either provided by the core or from a streaming thread. The application should be prepared for this. \nParameters \na GstClockID to wait on \nThe callback function \nUser data passed in the callback \nGDestroyNotify for user_data \nthe result of the non blocking wait. \nMT safe. \nRegister a callback on the given object id with the given function and user_data. When passing a object with an invalid time to this function the callback will be called immediately with a time set to GST_CLOCK_TIME_NONE. The callback will be called when the time of id has been reached. \nThe callback func can be invoked from any thread either provided by the core or from a streaming thread. The application should be prepared for this. \nParameters \na object to wait on \nThe callback function \nUser data passed in the callback \nGLib.DestroyNotify for user_data \nthe result of the non blocking wait. \nMT safe. \nRegister a callback on the given Gst.ClockID id with the given function and user_data. When passing a Gst.ClockID with an invalid time to this function the callback will be called immediately with a time set to GST_CLOCK_TIME_NONE. The callback will be called when the time of id has been reached. \nThe callback func can be invoked from any thread either provided by the core or from a streaming thread. The application should be prepared for this. \nParameters \na Gst.ClockID to wait on \nThe callback function \nUser data passed in the callback \nGLib.DestroyNotify for user_data \nthe result of the non blocking wait. \nMT safe. \nRegister a callback on the given Object id with the given function and user_data. When passing a Object with an invalid time to this function the callback will be called immediately with a time set to GST_CLOCK_TIME_NONE. The callback will be called when the time of id has been reached. \nThe callback func can be invoked from any thread either provided by the core or from a streaming thread. The application should be prepared for this. \nParameters \na Object to wait on \nThe callback function \nUser data passed in the callback \nGLib.DestroyNotify for user_data \nthe result of the non blocking wait. \nMT safe. \n"});