fragment_downloaded_cb({"url": "libgstreamer-1.0/gstpad.html#gst_pad_peer_query_convert", "fragment": "Gst.prototype.peer_query_convert \ngst_pad_peer_query_convert \nGst.Pad.PeerQueryConvert \nGst.Pad.peer_query_convert \nQueries the peer pad of a given sink pad to convert src_val in src_format to dest_format. \nParameters \na Gst.Pad on whose peer pad to invoke the convert query on. Must be a sink pad. \na Gst.Format to convert from. \na value to convert. \nthe Gst.Format to convert to. \nReturns a tuple made of \ntrue if the query could be performed. \ntrue if the query could be performed. \nQueries the peer pad of a given sink pad to convert src_val in src_format to dest_format. \nParameters \na GstPad on whose peer pad to invoke the convert query on. Must be a sink pad. \na GstFormat to convert from. \na value to convert. \nthe GstFormat to convert to. \na pointer to the result. \nTRUE if the query could be performed. \nQueries the peer pad of a given sink pad to convert src_val in src_format to dest_format. \nParameters \na Gst.Format to convert from. \na value to convert. \nthe Gst.Format to convert to. \na pointer to the result. \ntrue if the query could be performed. \nQueries the peer pad of a given sink pad to convert src_val in src_format to dest_format. \nParameters \na Gst.Pad on whose peer pad to invoke the convert query on. Must be a sink pad. \na Gst.Format to convert from. \na value to convert. \nthe Gst.Format to convert to. \nReturns a tuple made of \nTrue if the query could be performed. \nTrue if the query could be performed. \n"});