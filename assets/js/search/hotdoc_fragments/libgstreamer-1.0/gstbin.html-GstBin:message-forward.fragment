fragment_downloaded_cb({"url": "libgstreamer-1.0/gstbin.html#GstBin:message-forward", "fragment": "message forward \nmessage forward \nMessageForward \nmessage forward \nForward all children messages even those that would normally be filtered by the bin. This can be interesting when one wants to be notified of the EOS state of individual elements for example. \nThe messages are converted to an ELEMENT message with the bin as the source. The structure of the message is named GstBinForwarded and contains a field named message of type GST_TYPE_MESSAGE that contains the original forwarded message. \nFlags Read Write \nForward all children messages even those that would normally be filtered by the bin. This can be interesting when one wants to be notified of the EOS state of individual elements for example. \nThe messages are converted to an ELEMENT message with the bin as the source. The structure of the message is named GstBinForwarded and contains a field named message of type GST_TYPE_MESSAGE that contains the original forwarded message. \nFlags Read Write \nForward all children messages even those that would normally be filtered by the bin. This can be interesting when one wants to be notified of the EOS state of individual elements for example. \nThe messages are converted to an ELEMENT message with the bin as the source. The structure of the message is named GstBinForwarded and contains a field named message of type GST_TYPE_MESSAGE that contains the original forwarded message. \nFlags Read Write \nForward all children messages even those that would normally be filtered by the bin. This can be interesting when one wants to be notified of the EOS state of individual elements for example. \nThe messages are converted to an ELEMENT message with the bin as the source. The structure of the message is named GstBinForwarded and contains a field named message of type GST_TYPE_MESSAGE that contains the original forwarded message. \nFlags Read Write \n"});