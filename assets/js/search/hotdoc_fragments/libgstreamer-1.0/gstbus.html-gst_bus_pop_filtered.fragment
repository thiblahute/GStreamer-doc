fragment_downloaded_cb({"url": "libgstreamer-1.0/gstbus.html#gst_bus_pop_filtered", "fragment": "Gst.prototype.pop_filtered \ngst_bus_pop_filtered \nGst.Bus.PopFiltered \nGst.Bus.pop_filtered \nGet a message matching type from the bus. Will discard all messages on the bus that do not match type and that have been posted before the first message that does match type. If there is no message matching type on the bus all messages will be discarded. It is not possible to use message enums beyond Gst.MessageType.EXTENDED in the events mask. \nParameters \na Gst.Bus to pop \nmessage types to take into account \nthe next Gst.Message matching type that is on the bus or null if the bus is empty or there is no message matching type. The message is taken from the bus and needs to be unreffed with gst_message_unref not introspectable after usage. \nMT safe. \nGet a message matching type from the bus. Will discard all messages on the bus that do not match type and that have been posted before the first message that does match type. If there is no message matching type on the bus all messages will be discarded. It is not possible to use message enums beyond GST_MESSAGE_EXTENDED in the events mask. \nParameters \na GstBus to pop \nmessage types to take into account \nthe next GstMessage matching type that is on the bus or NULL if the bus is empty or there is no message matching type. The message is taken from the bus and needs to be unreffed with gst_message_unref after usage. \nMT safe. \nGet a message matching type from the bus. Will discard all messages on the bus that do not match type and that have been posted before the first message that does match type. If there is no message matching type on the bus all messages will be discarded. It is not possible to use message enums beyond Gst.MessageType.Extended in the events mask. \nParameters \nmessage types to take into account \nthe next Gst.Message matching type that is on the bus or null if the bus is empty or there is no message matching type. The message is taken from the bus and needs to be unreffed with gst_message_unref not introspectable after usage. \nMT safe. \nGet a message matching type from the bus. Will discard all messages on the bus that do not match type and that have been posted before the first message that does match type. If there is no message matching type on the bus all messages will be discarded. It is not possible to use message enums beyond Gst.MessageType.EXTENDED in the events mask. \nParameters \na Gst.Bus to pop \nmessage types to take into account \nthe next Gst.Message matching type that is on the bus or None if the bus is empty or there is no message matching type. The message is taken from the bus and needs to be unreffed with gst_message_unref not introspectable after usage. \nMT safe. \n"});