fragment_downloaded_cb({"url": "libgstreamer-1.0/gstpad.html#gst_pad_proxy_query_accept_caps", "fragment": "Gst.prototype.proxy_query_accept_caps \nGst.Pad.proxy_query_accept_caps \nGst.Pad.ProxyQueryAcceptCaps \ngst_pad_proxy_query_accept_caps \nChecks if all internally linked pads of pad accepts the caps in query and returns the intersection of the results. \nThis function is useful as a default accept caps query function for an element that can handle any stream format but requires caps that are acceptable for all opposite pads. \nParameters \na Gst.Pad to proxy. \nan ACCEPT_CAPS Gst.Query. \ntrue if query could be executed \nChecks if all internally linked pads of pad accepts the caps in query and returns the intersection of the results. \nThis function is useful as a default accept caps query function for an element that can handle any stream format but requires caps that are acceptable for all opposite pads. \nParameters \na Gst.Pad to proxy. \nan ACCEPT_CAPS Gst.Query. \nTrue if query could be executed \nChecks if all internally linked pads of pad accepts the caps in query and returns the intersection of the results. \nThis function is useful as a default accept caps query function for an element that can handle any stream format but requires caps that are acceptable for all opposite pads. \nParameters \nan ACCEPT_CAPS Gst.Query. \ntrue if query could be executed \nChecks if all internally linked pads of pad accepts the caps in query and returns the intersection of the results. \nThis function is useful as a default accept caps query function for an element that can handle any stream format but requires caps that are acceptable for all opposite pads. \nParameters \na GstPad to proxy. \nan ACCEPT_CAPS GstQuery. \nTRUE if query could be executed \n"});