fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstdebugutils.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstdebugutils.h\">\n        \n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_debug_bin_to_dot_data\">\n\t\t\n<h4 id=\"gst_debug_bin_to_dot_data1\">\n\t<span><code>gst_debug_bin_to_dot_data</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> *\ngst_debug_bin_to_dot_data (<a title=\"GstBin\" href=\"gstbin.html#GstBin\">GstBin</a> * bin,\n                           <a title=\"GstDebugGraphDetails\" href=\"gstdebugutils.html#GstDebugGraphDetails\">GstDebugGraphDetails</a> details)</pre>\n\n<p>To aid debugging applications one can use this method to obtain the whole\nnetwork of gstreamer elements that form the pipeline into an dot file.\nThis data can be processed with graphviz to get an image.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the top-level pipeline that should be analyzed</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a string containing the pipeline in graphviz\ndot format.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_debug_bin_to_dot_file\">\n\t\t\n<h4 id=\"gst_debug_bin_to_dot_file1\">\n\t<span><code>gst_debug_bin_to_dot_file</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_debug_bin_to_dot_file (<a title=\"GstBin\" href=\"gstbin.html#GstBin\">GstBin</a> * bin,\n                           <a title=\"GstDebugGraphDetails\" href=\"gstdebugutils.html#GstDebugGraphDetails\">GstDebugGraphDetails</a> details,\n                           const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * file_name)</pre>\n\n<p>To aid debugging applications one can use this method to write out the whole\nnetwork of gstreamer elements that form the pipeline into an dot file.\nThis file can be processed with graphviz to get an image.\n<informalexample><programlisting>\ndot -Tpng -oimage.png graph_lowlevel.dot\n</programlisting></informalexample></p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the top-level pipeline that should be analyzed</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>file_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>output base filename (e.g. \"myplayer\")</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_debug_bin_to_dot_file_with_ts\">\n\t\t\n<h4 id=\"gst_debug_bin_to_dot_file_with_ts1\">\n\t<span><code>gst_debug_bin_to_dot_file_with_ts</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_debug_bin_to_dot_file_with_ts (<a title=\"GstBin\" href=\"gstbin.html#GstBin\">GstBin</a> * bin,\n                                   <a title=\"GstDebugGraphDetails\" href=\"gstdebugutils.html#GstDebugGraphDetails\">GstDebugGraphDetails</a> details,\n                                   const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * file_name)</pre>\n\n<p>This works like <a href=\"gstdebugutils.html#gst_debug_bin_to_dot_file\">gst_debug_bin_to_dot_file</a>, but adds the current timestamp\nto the filename, so that it can be used to take multiple snapshots.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters2\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the top-level pipeline that should be analyzed</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>file_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>output base filename (e.g. \"myplayer\")</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Function_Macros\">Function Macros</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_DEBUG_BIN_TO_DOT_FILE\">\n\t\t\n<h4 id=\"gst_debug_bin_to_dot_file2\">\n\t<span><code>GST_DEBUG_BIN_TO_DOT_FILE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_DEBUG_BIN_TO_DOT_FILE(bin, details, file_name)\n</pre>\n\n<p>To aid debugging applications one can use this method to write out the whole\nnetwork of gstreamer elements that form the pipeline into an dot file.\nThis file can be processed with graphviz to get an image, like this:</p>\n<pre><code class=\"language-[\">  dot -Tpng -oimage.png graph_lowlevel.dot\n</code></pre>\n<p>There is also a utility called xdot which allows you to view the dot file\ndirectly without converting it first.</p>\n<p>The macro is only active if gstreamer is configured with\n\"--gst-enable-gst-debug\" and the environment variable\nGST_DEBUG_DUMP_DOT_DIR is set to a basepath (e.g. /tmp).</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters3\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the top-level pipeline that should be analyzed</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>details to show in the graph, e.g. <a href=\"gstdebugutils.html#GST_DEBUG_GRAPH_SHOW_ALL\">GST_DEBUG_GRAPH_SHOW_ALL</a> or\none or more other <a href=\"gstdebugutils.html#GstDebugGraphDetails\">GstDebugGraphDetails</a> flags.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>file_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>output base filename (e.g. \"myplayer\")</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS\">\n\t\t\n<h4 id=\"gst_debug_bin_to_dot_file_with_ts2\">\n\t<span><code>GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS(bin, details, file_name)\n</pre>\n\n<p>This works like <a href=\"gstdebugutils.html#GST_DEBUG_BIN_TO_DOT_FILE\">GST_DEBUG_BIN_TO_DOT_FILE</a>, but adds the current timestamp\nto the filename, so that it can be used to take multiple snapshots.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters4\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the top-level pipeline that should be analyzed</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>details to show in the graph, e.g. <a href=\"gstdebugutils.html#GST_DEBUG_GRAPH_SHOW_ALL\">GST_DEBUG_GRAPH_SHOW_ALL</a> or\none or more other <a href=\"gstdebugutils.html#GstDebugGraphDetails\">GstDebugGraphDetails</a> flags.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>file_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>output base filename (e.g. \"myplayer\")</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Enumerations\">Enumerations</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstDebugGraphDetails\">\n\t\t\n<h4 id=\"enum-gstdebuggraphdetails\">\n\t\tenum GstDebugGraphDetails\n\t</h4>\n\n\t\t<p>Available details for pipeline graphs produced by <a href=\"gstdebugutils.html#GST_DEBUG_BIN_TO_DOT_FILE\">GST_DEBUG_BIN_TO_DOT_FILE</a>\nand <a href=\"gstdebugutils.html#GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS\">GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS</a>.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_MEDIA_TYPE\"></a>\n\t\tGST_DEBUG_GRAPH_SHOW_MEDIA_TYPE\n\t\t</p>\n\t</td>\n\t<td><p>show caps-name on edges</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_CAPS_DETAILS\"></a>\n\t\tGST_DEBUG_GRAPH_SHOW_CAPS_DETAILS\n\t\t</p>\n\t</td>\n\t<td><p>show caps-details on edges</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_NON_DEFAULT_PARAMS\"></a>\n\t\tGST_DEBUG_GRAPH_SHOW_NON_DEFAULT_PARAMS\n\t\t</p>\n\t</td>\n\t<td><p>show modified parameters on\nelements</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_STATES\"></a>\n\t\tGST_DEBUG_GRAPH_SHOW_STATES\n\t\t</p>\n\t</td>\n\t<td><p>show element states</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 8</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_FULL_PARAMS\"></a>\n\t\tGST_DEBUG_GRAPH_SHOW_FULL_PARAMS\n\t\t</p>\n\t</td>\n\t<td><p>show full element parameter values even\nif they are very long</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 16</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_ALL\"></a>\n\t\tGST_DEBUG_GRAPH_SHOW_ALL\n\t\t</p>\n\t</td>\n\t<td><p>show all the typical details that one might want</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 15</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_VERBOSE\"></a>\n\t\tGST_DEBUG_GRAPH_SHOW_VERBOSE\n\t\t</p>\n\t</td>\n\t<td><p>show all details regardless of how large or\nverbose they make the resulting output</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: -1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n    </div>\n\n\n        "});