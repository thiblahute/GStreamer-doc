fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gst.html#gst_init", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_init\">\n\t\t\n<h3 id=\"gst_init1\">\n\t<span><code>gst_init</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_init (int* argc,\n          char* argv)</pre>\n\n<p>Initializes the GStreamer library, setting up internal path lists,\nregistering built-in elements, and loading standard plugins.</p>\n<p>Unless the plugin registry is disabled at compile time, the registry will be\nloaded. By default this will also check if the registry cache needs to be\nupdated and rescan all plugins if needed. See <a href=\"gstregistry.html#gst_update_registry\">gst_update_registry</a> for\ndetails and section</p>\n <link linkend=\"gst-running\">Running GStreamer Applications\n for how to disable automatic registry updates.\n<blockquote>\n<p>This function will terminate your program if it was unable to initialize\nGStreamer for some reason.  If you want your program to fall back,\nuse <a href=\"gst.html#gst_init_check\">gst_init_check</a> instead.</p>\n</blockquote>\n<p>WARNING: This function does not work in the same way as corresponding\nfunctions in other glib-style libraries, such as gtk_init(). In\nparticular, unknown command line options cause this function to\nabort program execution.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>argc:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to application's argc</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for input and for returning results\"><span class=\"acronym\">inout</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>argv:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to application's argv</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for input and for returning results\"><span class=\"acronym\">inout</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"Parameter points to an array of items\"><span class=\"acronym\">array</span></abbr> length=argc]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});