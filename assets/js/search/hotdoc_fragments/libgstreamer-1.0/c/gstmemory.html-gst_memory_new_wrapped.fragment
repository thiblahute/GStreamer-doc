fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstmemory.html#gst_memory_new_wrapped", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_memory_new_wrapped\">\n\t\t<h3 id=\"gst_memory_new_wrapped1\">\n\t<span><code>gst_memory_new_wrapped</code></span>\n</h3>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstMemory\" href=\"gstmemory.html#GstMemory\">GstMemory</a> *\ngst_memory_new_wrapped (<a title=\"GstMemoryFlags\" href=\"gstmemory.html#GstMemoryFlags\">GstMemoryFlags</a> flags,\n                        <a title=\"guint8\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint8\">guint8</a> * data,\n                        <a title=\"gsize\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gsize\">gsize</a> maxsize,\n                        <a title=\"gsize\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gsize\">gsize</a> offset,\n                        <a title=\"gsize\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gsize\">gsize</a> size,\n                        <a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> user_data,\n                        <a title=\"GDestroyNotify\" href=\"https://developer.gnome.org/glib/unstable/glib-Datasets.html#GDestroyNotify\">GDestroyNotify</a> notify)</pre>\n\n<p>Allocate a new memory block that wraps the given <em>data</em>.</p>\n<p>The prefix/padding must be filled with 0 if <em>flags</em> contains\n<a href=\"gstmemory.html#GST_MEMORY_FLAG_ZERO_PREFIXED\">GST_MEMORY_FLAG_ZERO_PREFIXED</a> and <a href=\"gstmemory.html#GST_MEMORY_FLAG_ZERO_PADDED\">GST_MEMORY_FLAG_ZERO_PADDED</a> respectively.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>flags:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p><a href=\"gstmemory.html#GstMemoryFlags\">GstMemoryFlags</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>data to\nwrap</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter points to an array of items\"><span class=\"acronym\">array</span></abbr> length=size]</span>\n<span class=\"annotation\">[<abbr title=\"Generic and defining element of containers and arrays\"><span class=\"acronym\">element-type</span></abbr> guint8]</span>\n<span class=\"annotation\">[<abbr title=\"Don't free data after the code is done\"><span class=\"acronym\">transfer: none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>maxsize:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>allocated size of <em>data</em></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>offset:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>offset in <em>data</em></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>size:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>size of valid data</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>user_data</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>notify:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>called with <em>user_data</em> when the memory is freed</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"The callback is valid until first called\"><span class=\"acronym\">scope async</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"This parameter is a closure for callbacks, many bindings can pass NULL to user_data\"><span class=\"acronym\">closure</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstmemory.html#GstMemory\">GstMemory</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstMemory\" href=\"gstmemory.html#GstMemory\">GstMemory</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});