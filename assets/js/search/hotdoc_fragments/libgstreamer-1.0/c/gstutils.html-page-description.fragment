fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstutils.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstutils.h\">\n        <h1 id=\"gstutils\">GstUtils</h1>\n        \n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.12;\" id=\"gst_calculate_linear_regression\">\n\t\t\n<h4 id=\"gst_calculate_linear_regression1\">\n\t<span><code>gst_calculate_linear_regression</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_calculate_linear_regression (const <a title=\"GstClockTime\" href=\"gstclock.html#GstClockTime\">GstClockTime</a> * xy,\n                                 <a title=\"GstClockTime\" href=\"gstclock.html#GstClockTime\">GstClockTime</a> * temp,\n                                 <a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> n,\n                                 <a title=\"GstClockTime\" href=\"gstclock.html#GstClockTime\">GstClockTime</a> * m_num,\n                                 <a title=\"GstClockTime\" href=\"gstclock.html#GstClockTime\">GstClockTime</a> * m_denom,\n                                 <a title=\"GstClockTime\" href=\"gstclock.html#GstClockTime\">GstClockTime</a> * b,\n                                 <a title=\"GstClockTime\" href=\"gstclock.html#GstClockTime\">GstClockTime</a> * xbase,\n                                 <a title=\"gdouble\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> * r_squared)</pre>\n\n<p>Calculates the linear regression of the values <em>xy</em> and places the\nresult in <em>m_num</em>, <em>m_denom</em>, <em>b</em> and <em>xbase</em>, representing the function\ny(x) = m_num/m_denom * (x - xbase) + b\nthat has the least-square distance from all points <em>x</em> and <em>y</em>.</p>\n<p><em>r_squared</em> will contain the remaining error.</p>\n<p>If <em>temp</em> is not <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a>, it will be used as temporary space for the function,\nin which case the function works without any allocation at all. If <em>temp</em> is\n<a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a>, an allocation will take place. <em>temp</em> should have at least the same\namount of memory allocated as <em>xy</em>, i.e. 2<em>n</em>sizeof(GstClockTime).</p>\n<blockquote>\n<p>This function assumes (x,y) values with reasonable large differences\nbetween them. It will not calculate the exact results if the differences\nbetween neighbouring values are too small due to not being able to\nrepresent sub-integer values during the calculations.</p>\n</blockquote>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>xy:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Pairs of (x,y) values</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>temp:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Temporary scratch space used by the function</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>number of (x,y) pairs</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>m_num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>numerator of calculated slope</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>m_denom:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>denominator of calculated slope</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Offset at Y-axis</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>xbase:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Offset at X-axis</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>r_squared:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>R-squared</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if the linear regression was successfully calculated</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.12\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_parse_bin_from_description\">\n\t\t\n<h4 id=\"gst_parse_bin_from_description1\">\n\t<span><code>gst_parse_bin_from_description</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstElement\" href=\"gstelement.html#GstElement\">GstElement</a> *\ngst_parse_bin_from_description (const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * bin_description,\n                                <a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a> ghost_unlinked_pads)</pre>\n\n<p>This is a convenience wrapper around <a href=\"gstparse.html#gst_parse_launch\">gst_parse_launch</a> to create a\n<a href=\"gstbin.html#GstBin\">GstBin</a> from a gst-launch-style pipeline description. See\n<a href=\"gstparse.html#gst_parse_launch\">gst_parse_launch</a> and the gst-launch man page for details about the\nsyntax. Ghost pads on the bin for unlinked source or sink pads\nwithin the bin can automatically be created (but only a maximum of\none ghost pad for each direction will be created; if you expect\nmultiple unlinked source pads or multiple unlinked sink pads\nand want them all ghosted, you will have to create the ghost pads\nyourself).</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin_description:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>command line describing the bin</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ghost_unlinked_pads:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>whether to automatically create ghost pads\nfor unlinked source or sink pads within the bin</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns1\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a\nnewly-created bin, or <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> if an error occurred.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstElement\" href=\"gstelement.html#GstElement\">GstElement</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Alias for transfer none, used for objects with floating refs\"><span class=\"acronym\">transfer: floating</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"Override the parsed C type with given type\"><span class=\"acronym\">type</span></abbr> Gst.Bin]</span>\n<span class=\"annotation\">[<abbr title=\"NULL may be passed to the value\"><span class=\"acronym\">nullable</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_parse_bin_from_description_full\">\n\t\t\n<h4 id=\"gst_parse_bin_from_description_full1\">\n\t<span><code>gst_parse_bin_from_description_full</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstElement\" href=\"gstelement.html#GstElement\">GstElement</a> *\ngst_parse_bin_from_description_full (const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * bin_description,\n                                     <a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a> ghost_unlinked_pads,\n                                     <a title=\"GstParseContext\" href=\"gstparse.html#GstParseContext\">GstParseContext</a> * context,\n                                     <a title=\"GstParseFlags\" href=\"gstparse.html#GstParseFlags\">GstParseFlags</a> flags)</pre>\n\n<p>This is a convenience wrapper around <a href=\"gstparse.html#gst_parse_launch\">gst_parse_launch</a> to create a\n<a href=\"gstbin.html#GstBin\">GstBin</a> from a gst-launch-style pipeline description. See\n<a href=\"gstparse.html#gst_parse_launch\">gst_parse_launch</a> and the gst-launch man page for details about the\nsyntax. Ghost pads on the bin for unlinked source or sink pads\nwithin the bin can automatically be created (but only a maximum of\none ghost pad for each direction will be created; if you expect\nmultiple unlinked source pads or multiple unlinked sink pads\nand want them all ghosted, you will have to create the ghost pads\nyourself).</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters2\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin_description:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>command line describing the bin</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>ghost_unlinked_pads:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>whether to automatically create ghost pads\nfor unlinked source or sink pads within the bin</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>context:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a parse context allocated with\n<a href=\"gstparse.html#gst_parse_context_new\">gst_parse_context_new</a>, or <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a></p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Don't free data after the code is done\"><span class=\"acronym\">transfer: none</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>flags:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>parsing options, or <a href=\"gstparse.html#GST_PARSE_FLAG_NONE\">GST_PARSE_FLAG_NONE</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns2\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a newly-created\nelement, which is guaranteed to be a bin unless\nGST_FLAG_NO_SINGLE_ELEMENT_BINS was passed, or <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> if an error\noccurred.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstElement\" href=\"gstelement.html#GstElement\">GstElement</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Alias for transfer none, used for objects with floating refs\"><span class=\"acronym\">transfer: floating</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"Override the parsed C type with given type\"><span class=\"acronym\">type</span></abbr> Gst.Element]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_array_binary_search\">\n\t\t\n<h4 id=\"gst_util_array_binary_search1\">\n\t<span><code>gst_util_array_binary_search</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a>\ngst_util_array_binary_search (<a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> array,\n                              <a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> num_elements,\n                              <a title=\"gsize\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gsize\">gsize</a> element_size,\n                              <a title=\"GCompareDataFunc\" href=\"https://developer.gnome.org/glib/unstable/glib-Doubly-Linked-Lists.html#GCompareDataFunc\">GCompareDataFunc</a> search_func,\n                              <a title=\"GstSearchMode\" href=\"gstutils.html#GstSearchMode\">GstSearchMode</a> mode,\n                              <a title=\"gconstpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gconstpointer\">gconstpointer</a> search_data,\n                              <a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> user_data)</pre>\n\n<p>Searches inside <em>array</em> for <em>search_data</em> by using the comparison function\n<em>search_func</em>. <em>array</em> must be sorted ascending.</p>\n<p>As <em>search_data</em> is always passed as second argument to <em>search_func</em> it's\nnot required that <em>search_data</em> has the same type as the array elements.</p>\n<p>The complexity of this search function is O(log (num_elements)).</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters3\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>array:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the sorted input array</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num_elements:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>number of elements in the array</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>element_size:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>size of every element in bytes</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>search_func:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>function to compare two elements, <em>search_data</em> will always be passed as second argument</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"The callback is valid only during the call to the method\"><span class=\"acronym\">scope call</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>mode:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>search mode that should be used</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>search_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>element that should be found</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>data to pass to <em>search_func</em></p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"This parameter is a closure for callbacks, many bindings can pass NULL here\"><span class=\"acronym\">closure</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns3\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>The address of the found\nelement or <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> if nothing was found</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a>\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Don't free data after the code is done\"><span class=\"acronym\">transfer: none</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"NULL may be passed to the value\"><span class=\"acronym\">nullable</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_double_to_fraction\">\n\t\t\n<h4 id=\"gst_util_double_to_fraction1\">\n\t<span><code>gst_util_double_to_fraction</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_util_double_to_fraction (<a title=\"gdouble\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> src,\n                             <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> * dest_n,\n                             <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> * dest_d)</pre>\n\n<p>Transforms a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> to a fraction and simplifies\nthe result.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters4\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>src:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p><a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> to transform</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>dest_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> to hold the result numerator</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>dest_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> to hold the result denominator</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_dump_mem\">\n\t\t\n<h4 id=\"gst_util_dump_mem1\">\n\t<span><code>gst_util_dump_mem</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_util_dump_mem (const <a title=\"guchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guchar\">guchar</a> * mem,\n                   <a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> size)</pre>\n\n<p>Dumps the memory block into a hex representation. Useful for debugging.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters5\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>mem:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer to the memory to dump</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>size:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the size of the memory block to dump</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_fraction_add\">\n\t\t\n<h4 id=\"gst_util_fraction_add1\">\n\t<span><code>gst_util_fraction_add</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_util_fraction_add (<a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> a_n,\n                       <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> a_d,\n                       <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> b_n,\n                       <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> b_d,\n                       <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> * res_n,\n                       <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> * res_d)</pre>\n\n<p>Adds the fractions <em>a_n</em>/@a_d and <em>b_n</em>/@b_d and stores\nthe result in <em>res_n</em> and <em>res_d</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters6\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Numerator of first value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Denominator of first value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Numerator of second value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Denominator of second value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>res_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Pointer to <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> to hold the result numerator</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>res_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Pointer to <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> to hold the result denominator</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns4\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> on overflow, <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> otherwise.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_fraction_compare\">\n\t\t\n<h4 id=\"gst_util_fraction_compare1\">\n\t<span><code>gst_util_fraction_compare</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a>\ngst_util_fraction_compare (<a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> a_n,\n                           <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> a_d,\n                           <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> b_n,\n                           <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> b_d)</pre>\n\n<p>Compares the fractions <em>a_n</em>/@a_d and <em>b_n</em>/@b_d and returns\n-1 if a &lt; b, 0 if a = b and 1 if a &gt; b.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters7\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Numerator of first value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Denominator of first value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Numerator of second value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Denominator of second value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns5\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>-1 if a &lt; b; 0 if a = b; 1 if a &gt; b.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_fraction_multiply\">\n\t\t\n<h4 id=\"gst_util_fraction_multiply1\">\n\t<span><code>gst_util_fraction_multiply</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_util_fraction_multiply (<a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> a_n,\n                            <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> a_d,\n                            <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> b_n,\n                            <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> b_d,\n                            <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> * res_n,\n                            <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> * res_d)</pre>\n\n<p>Multiplies the fractions <em>a_n</em>/@a_d and <em>b_n</em>/@b_d and stores\nthe result in <em>res_n</em> and <em>res_d</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters8\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Numerator of first value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Denominator of first value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Numerator of second value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Denominator of second value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>res_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Pointer to <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> to hold the result numerator</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>res_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Pointer to <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> to hold the result denominator</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns6\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> on overflow, <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> otherwise.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_fraction_to_double\">\n\t\t\n<h4 id=\"gst_util_fraction_to_double1\">\n\t<span><code>gst_util_fraction_to_double</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_util_fraction_to_double (<a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> src_n,\n                             <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> src_d,\n                             <a title=\"gdouble\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> * dest)</pre>\n\n<p>Transforms a fraction to a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters9\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>src_n:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Fraction numerator as <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>src_d:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Fraction denominator <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>dest:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> for the result</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.12;\" id=\"gst_util_get_object_array\">\n\t\t\n<h4 id=\"gst_util_get_object_array1\">\n\t<span><code>gst_util_get_object_array</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_util_get_object_array (<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a> * object,\n                           const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * name,\n                           <a title=\"GValueArray\" href=\"https://developer.gnome.org/gobject/unstable/gobject-Value-arrays.html#GValueArray\">GValueArray</a> ** array)</pre>\n\n<p>Get a property of type <a href=\"gstvalue.html#GST_TYPE_ARRAY\">GST_TYPE_ARRAY</a> and transform it into a\n<a href=\"https://developer.gnome.org/gobject/unstable/gobject-Value-arrays.html#GValueArray\">GValueArray</a>. This allow language bindings to get GST_TYPE_ARRAY\nproperties which are otherwise not an accessible type.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters10\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>object:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the object to set the array to</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the name of the property to set</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>array:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a return <a href=\"https://developer.gnome.org/gobject/unstable/gobject-Value-arrays.html#GValueArray\">GValueArray</a></p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns7\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.12\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_get_timestamp\">\n\t\t\n<h4 id=\"gst_util_get_timestamp1\">\n\t<span><code>gst_util_get_timestamp</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstClockTime\" href=\"gstclock.html#GstClockTime\">GstClockTime</a>\ngst_util_get_timestamp ()</pre>\n\n<p>Get a timestamp as GstClockTime to be used for interval measurements.\nThe timestamp should not be interpreted in any other way.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns8\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the timestamp</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstClockTime\" href=\"gstclock.html#GstClockTime\">GstClockTime</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_greatest_common_divisor\">\n\t\t\n<h4 id=\"gst_util_greatest_common_divisor1\">\n\t<span><code>gst_util_greatest_common_divisor</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a>\ngst_util_greatest_common_divisor (<a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> a,\n                                  <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> b)</pre>\n\n<p>Calculates the greatest common divisor of <em>a</em>\nand <em>b</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters11\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>First value as <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Second value as <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns9\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>Greatest common divisor of <em>a</em> and <em>b</em></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_greatest_common_divisor_int64\">\n\t\t\n<h4 id=\"gst_util_greatest_common_divisor_int641\">\n\t<span><code>gst_util_greatest_common_divisor_int64</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a>\ngst_util_greatest_common_divisor_int64 (<a title=\"gint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> a,\n                                        <a title=\"gint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a> b)</pre>\n\n<p>Calculates the greatest common divisor of <em>a</em>\nand <em>b</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters12\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>a:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>First value as <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>b:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Second value as <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns10\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>Greatest common divisor of <em>a</em> and <em>b</em></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint64\">gint64</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_group_id_next\">\n\t\t\n<h4 id=\"gst_util_group_id_next1\">\n\t<span><code>gst_util_group_id_next</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a>\ngst_util_group_id_next ()</pre>\n\n<p>Return a constantly incrementing group id.</p>\n<p>This function is used to generate a new group-id for the\nstream-start event.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns11\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>A constantly incrementing unsigned integer, which might\noverflow back to 0 at some point.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_seqnum_compare\">\n\t\t\n<h4 id=\"gst_util_seqnum_compare1\">\n\t<span><code>gst_util_seqnum_compare</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gint32\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint32\">gint32</a>\ngst_util_seqnum_compare (<a title=\"guint32\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint32\">guint32</a> s1,\n                         <a title=\"guint32\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint32\">guint32</a> s2)</pre>\n\n<p>Compare two sequence numbers, handling wraparound.</p>\n<p>The current implementation just returns (gint32)(@s1 - <em>s2</em>).</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters13\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>s1:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A sequence number.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>s2:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Another sequence number.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns12\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>A negative number if <em>s1</em> is before <em>s2</em>, 0 if they are equal, or a\npositive number if <em>s1</em> is after <em>s2</em>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gint32\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint32\">gint32</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_seqnum_next\">\n\t\t\n<h4 id=\"gst_util_seqnum_next1\">\n\t<span><code>gst_util_seqnum_next</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint32\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint32\">guint32</a>\ngst_util_seqnum_next ()</pre>\n\n<p>Return a constantly incrementing sequence number.</p>\n<p>This function is used internally to GStreamer to be able to determine which\nevents and messages are \"the same\". For example, elements may set the seqnum\non a segment-done message to be the same as that of the last seek event, to\nindicate that event and the message correspond to the same segment.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns13\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>A constantly incrementing 32-bit unsigned integer, which might\noverflow back to 0 at some point. Use <a href=\"gstutils.html#gst_util_seqnum_compare\">gst_util_seqnum_compare</a> to make sure\nyou handle wraparound correctly.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint32\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint32\">guint32</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_set_object_arg\">\n\t\t\n<h4 id=\"gst_util_set_object_arg1\">\n\t<span><code>gst_util_set_object_arg</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_util_set_object_arg (<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a> * object,\n                         const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * name,\n                         const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * value)</pre>\n\n<p>Converts the string value to the type of the objects argument and\nsets the argument with it.</p>\n<p>Note that this function silently returns if <em>object</em> has no property named\n<em>name</em> or when <em>value</em> cannot be converted to the type of the property.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters14\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>object:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the object to set the argument of</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the name of the argument to set</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>value:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the string value to set</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.12;\" id=\"gst_util_set_object_array\">\n\t\t\n<h4 id=\"gst_util_set_object_array1\">\n\t<span><code>gst_util_set_object_array</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_util_set_object_array (<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a> * object,\n                           const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * name,\n                           const <a title=\"GValueArray\" href=\"https://developer.gnome.org/gobject/unstable/gobject-Value-arrays.html#GValueArray\">GValueArray</a> * array)</pre>\n\n<p>Transfer a <a href=\"https://developer.gnome.org/gobject/unstable/gobject-Value-arrays.html#GValueArray\">GValueArray</a> to <a href=\"gstvalue.html#GST_TYPE_ARRAY\">GST_TYPE_ARRAY</a> and set this value on the\nspecified property name. This allow language bindings to set GST_TYPE_ARRAY\nproperties which are otherwise not an accessible type.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters15\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>object:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the object to set the array to</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the name of the property to set</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>array:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"https://developer.gnome.org/gobject/unstable/gobject-Value-arrays.html#GValueArray\">GValueArray</a> containing the values</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns14\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.12\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_set_value_from_string\">\n\t\t\n<h4 id=\"gst_util_set_value_from_string1\">\n\t<span><code>gst_util_set_value_from_string</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_util_set_value_from_string (<a title=\"GValue\" href=\"https://developer.gnome.org/gobject/unstable/gobject-Generic-values.html#GValue\">GValue</a> * value,\n                                const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * value_str)</pre>\n\n<p>Converts the string to the type of the value and\nsets the value with it.</p>\n<p>Note that this function is dangerous as it does not return any indication\nif the conversion worked or not.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters16\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>value:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the value to set</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>value_str:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the string to get the value from</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_uint64_scale\">\n\t\t\n<h4 id=\"gst_util_uint64_scale1\">\n\t<span><code>gst_util_uint64_scale</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\ngst_util_uint64_scale (<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> val,\n                       <a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> num,\n                       <a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> denom)</pre>\n\n<p>Scale <em>val</em> by the rational number <em>num</em> / <em>denom</em>, avoiding overflows and\nunderflows and without loss of precision.</p>\n<p>This function can potentially be very slow if val and num are both\ngreater than G_MAXUINT32.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters17\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the number to scale</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the numerator of the scale ratio</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>denom:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the denominator of the scale ratio</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns15\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><em>val</em> * <em>num</em> / <em>denom</em>.  In the case of an overflow, this\nfunction returns G_MAXUINT64.  If the result is not exactly\nrepresentable as an integer it is truncated.  See also\n<a href=\"gstutils.html#gst_util_uint64_scale_round\">gst_util_uint64_scale_round</a>, <a href=\"gstutils.html#gst_util_uint64_scale_ceil\">gst_util_uint64_scale_ceil</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_int\">gst_util_uint64_scale_int</a>, <a href=\"gstutils.html#gst_util_uint64_scale_int_round\">gst_util_uint64_scale_int_round</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_int_ceil\">gst_util_uint64_scale_int_ceil</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_uint64_scale_ceil\">\n\t\t\n<h4 id=\"gst_util_uint64_scale_ceil1\">\n\t<span><code>gst_util_uint64_scale_ceil</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\ngst_util_uint64_scale_ceil (<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> val,\n                            <a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> num,\n                            <a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> denom)</pre>\n\n<p>Scale <em>val</em> by the rational number <em>num</em> / <em>denom</em>, avoiding overflows and\nunderflows and without loss of precision.</p>\n<p>This function can potentially be very slow if val and num are both\ngreater than G_MAXUINT32.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters18\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the number to scale</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the numerator of the scale ratio</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>denom:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the denominator of the scale ratio</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns16\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><em>val</em> * <em>num</em> / <em>denom</em>.  In the case of an overflow, this\nfunction returns G_MAXUINT64.  If the result is not exactly\nrepresentable as an integer, it is rounded up.  See also\n<a href=\"gstutils.html#gst_util_uint64_scale\">gst_util_uint64_scale</a>, <a href=\"gstutils.html#gst_util_uint64_scale_round\">gst_util_uint64_scale_round</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_int\">gst_util_uint64_scale_int</a>, <a href=\"gstutils.html#gst_util_uint64_scale_int_round\">gst_util_uint64_scale_int_round</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_int_ceil\">gst_util_uint64_scale_int_ceil</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_uint64_scale_int\">\n\t\t\n<h4 id=\"gst_util_uint64_scale_int1\">\n\t<span><code>gst_util_uint64_scale_int</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\ngst_util_uint64_scale_int (<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> val,\n                           <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> num,\n                           <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> denom)</pre>\n\n<p>Scale <em>val</em> by the rational number <em>num</em> / <em>denom</em>, avoiding overflows and\nunderflows and without loss of precision.  <em>num</em> must be non-negative and\n<em>denom</em> must be positive.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters19\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>guint64 (such as a <a href=\"gstclock.html#GstClockTime\">GstClockTime</a>) to scale.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>numerator of the scale factor.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>denom:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>denominator of the scale factor.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns17\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><em>val</em> * <em>num</em> / <em>denom</em>.  In the case of an overflow, this\nfunction returns G_MAXUINT64.  If the result is not exactly\nrepresentable as an integer, it is truncated.  See also\n<a href=\"gstutils.html#gst_util_uint64_scale_int_round\">gst_util_uint64_scale_int_round</a>, <a href=\"gstutils.html#gst_util_uint64_scale_int_ceil\">gst_util_uint64_scale_int_ceil</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale\">gst_util_uint64_scale</a>, <a href=\"gstutils.html#gst_util_uint64_scale_round\">gst_util_uint64_scale_round</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_ceil\">gst_util_uint64_scale_ceil</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_uint64_scale_int_ceil\">\n\t\t\n<h4 id=\"gst_util_uint64_scale_int_ceil1\">\n\t<span><code>gst_util_uint64_scale_int_ceil</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\ngst_util_uint64_scale_int_ceil (<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> val,\n                                <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> num,\n                                <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> denom)</pre>\n\n<p>Scale <em>val</em> by the rational number <em>num</em> / <em>denom</em>, avoiding overflows and\nunderflows and without loss of precision.  <em>num</em> must be non-negative and\n<em>denom</em> must be positive.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters20\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>guint64 (such as a <a href=\"gstclock.html#GstClockTime\">GstClockTime</a>) to scale.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>numerator of the scale factor.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>denom:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>denominator of the scale factor.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns18\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><em>val</em> * <em>num</em> / <em>denom</em>.  In the case of an overflow, this\nfunction returns G_MAXUINT64.  If the result is not exactly\nrepresentable as an integer, it is rounded up.  See also\n<a href=\"gstutils.html#gst_util_uint64_scale_int\">gst_util_uint64_scale_int</a>, <a href=\"gstutils.html#gst_util_uint64_scale_int_round\">gst_util_uint64_scale_int_round</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale\">gst_util_uint64_scale</a>, <a href=\"gstutils.html#gst_util_uint64_scale_round\">gst_util_uint64_scale_round</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_ceil\">gst_util_uint64_scale_ceil</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_uint64_scale_int_round\">\n\t\t\n<h4 id=\"gst_util_uint64_scale_int_round1\">\n\t<span><code>gst_util_uint64_scale_int_round</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\ngst_util_uint64_scale_int_round (<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> val,\n                                 <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> num,\n                                 <a title=\"gint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gint\">gint</a> denom)</pre>\n\n<p>Scale <em>val</em> by the rational number <em>num</em> / <em>denom</em>, avoiding overflows and\nunderflows and without loss of precision.  <em>num</em> must be non-negative and\n<em>denom</em> must be positive.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters21\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>guint64 (such as a <a href=\"gstclock.html#GstClockTime\">GstClockTime</a>) to scale.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>numerator of the scale factor.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>denom:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>denominator of the scale factor.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns19\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><em>val</em> * <em>num</em> / <em>denom</em>.  In the case of an overflow, this\nfunction returns G_MAXUINT64.  If the result is not exactly\nrepresentable as an integer, it is rounded to the nearest integer\n(half-way cases are rounded up).  See also <a href=\"gstutils.html#gst_util_uint64_scale_int\">gst_util_uint64_scale_int</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_int_ceil\">gst_util_uint64_scale_int_ceil</a>, <a href=\"gstutils.html#gst_util_uint64_scale\">gst_util_uint64_scale</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_round\">gst_util_uint64_scale_round</a>, <a href=\"gstutils.html#gst_util_uint64_scale_ceil\">gst_util_uint64_scale_ceil</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_util_uint64_scale_round\">\n\t\t\n<h4 id=\"gst_util_uint64_scale_round1\">\n\t<span><code>gst_util_uint64_scale_round</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\ngst_util_uint64_scale_round (<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> val,\n                             <a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> num,\n                             <a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> denom)</pre>\n\n<p>Scale <em>val</em> by the rational number <em>num</em> / <em>denom</em>, avoiding overflows and\nunderflows and without loss of precision.</p>\n<p>This function can potentially be very slow if val and num are both\ngreater than G_MAXUINT32.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters22\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the number to scale</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the numerator of the scale ratio</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>denom:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the denominator of the scale ratio</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns20\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><em>val</em> * <em>num</em> / <em>denom</em>.  In the case of an overflow, this\nfunction returns G_MAXUINT64.  If the result is not exactly\nrepresentable as an integer, it is rounded to the nearest integer\n(half-way cases are rounded up).  See also <a href=\"gstutils.html#gst_util_uint64_scale\">gst_util_uint64_scale</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_ceil\">gst_util_uint64_scale_ceil</a>, <a href=\"gstutils.html#gst_util_uint64_scale_int\">gst_util_uint64_scale_int</a>,\n<a href=\"gstutils.html#gst_util_uint64_scale_int_round\">gst_util_uint64_scale_int_round</a>, <a href=\"gstutils.html#gst_util_uint64_scale_int_ceil\">gst_util_uint64_scale_int_ceil</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Function_Macros\">Function Macros</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_gdouble_to_guint64\">\n\t\t\n<h4 id=\"gst_gdouble_to_guint641\">\n\t<span><code>gst_gdouble_to_guint64</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define gst_gdouble_to_guint64(value)   ((guint64) (value))\n</pre>\n\n<p>Convert <em>value</em> to a guint64.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters23\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>value:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a> value to convert</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns21\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><em>value</em> converted to a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a>.</p>\n\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_guint64_to_gdouble\">\n\t\t\n<h4 id=\"gst_guint64_to_gdouble1\">\n\t<span><code>gst_guint64_to_gdouble</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define gst_guint64_to_gdouble(value)   ((gdouble) (value))\n</pre>\n\n<p>Convert <em>value</em> to a gdouble.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters24\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>value:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> value to convert</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns22\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><em>value</em> converted to a <a href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gdouble\">gdouble</a>.</p>\n\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_CALL_PARENT\">\n\t\t\n<h4 id=\"gst_call_parent\">\n\t<span><code>GST_CALL_PARENT</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_CALL_PARENT(parent_class_cast, name, args)                  \\\n        ((parent_class_cast(parent_class)-&gt;name != NULL) ?              \\\n         parent_class_cast(parent_class)-&gt;name args : (void) 0)\n</pre>\n\n<p>Just call the parent handler.  This assumes that there is a variable\nnamed parent_class that points to the (duh!) parent class.  Note that\nthis macro is not to be used with things that return something, use\nthe _WITH_DEFAULT version for that</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters25\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>parent_class_cast:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the name of the class cast macro for the parent type</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>name of the function to call</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>args:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>arguments enclosed in '( )'</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_CALL_PARENT_WITH_DEFAULT\">\n\t\t\n<h4 id=\"gst_call_parent_with_default\">\n\t<span><code>GST_CALL_PARENT_WITH_DEFAULT</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_CALL_PARENT_WITH_DEFAULT(parent_class_cast, name, args, def_return)\\\n        ((parent_class_cast(parent_class)-&gt;name != NULL) ?              \\\n         parent_class_cast(parent_class)-&gt;name args : def_return)\n</pre>\n\n<p>Same as <a href=\"gstutils.html#GST_CALL_PARENT\">GST_CALL_PARENT</a>, but in case there is no implementation, it\nevaluates to <em>def_return</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters26\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>parent_class_cast:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the name of the class cast macro for the parent type</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>name of the function to call</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>args:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>arguments enclosed in '( )'</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>def_return:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>default result</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_GET\">\n\t\t\n<h4 id=\"_gst_get\">\n\t<span><code>_GST_GET</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_GET(__data, __idx, __size, __shift) \\\n    (((guint##__size) (((const guint8 *) (__data))[__idx])) &lt;&lt; (__shift))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_PUT\">\n\t\t\n<h4 id=\"_gst_put\">\n\t<span><code>_GST_PUT</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_PUT(__data, __idx, __size, __shift, __num) \\\n    (((guint8 *) (__data))[__idx] = (((guint##__size) (__num)) &gt;&gt; (__shift)) &amp; 0xff)\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_FAST_READ\">\n\t\t\n<h4 id=\"_gst_fast_read\">\n\t<span><code>_GST_FAST_READ</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_FAST_READ(s, d) __gst_fast_read##s((const guint8 *)(d))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_FAST_READ_SWAP\">\n\t\t\n<h4 id=\"_gst_fast_read_swap\">\n\t<span><code>_GST_FAST_READ_SWAP</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_FAST_READ_SWAP(s, d) __gst_fast_read_swap##s((const guint8 *)(d))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_FAST_WRITE\">\n\t\t\n<h4 id=\"_gst_fast_write\">\n\t<span><code>_GST_FAST_WRITE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_FAST_WRITE(s, d, v) __gst_fast_write##s((guint8 *)(d), (v))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_FAST_WRITE_SWAP\">\n\t\t\n<h4 id=\"_gst_fast_write_swap\">\n\t<span><code>_GST_FAST_WRITE_SWAP</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_FAST_WRITE_SWAP(s, d, v) __gst_fast_write_swap##s((guint8 *)(d), (v))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_READ_UINT64_BE\">\n\t\t\n<h4 id=\"gst_read_uint64_be\">\n\t<span><code>GST_READ_UINT64_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_READ_UINT64_BE(data) __gst_slow_read64_be((const guint8 *)(data))\n</pre>\n\n<p>Read a 64 bit unsigned integer value in big endian format from the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters27\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_READ_UINT64_LE\">\n\t\t\n<h4 id=\"gst_read_uint64_le\">\n\t<span><code>GST_READ_UINT64_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_READ_UINT64_LE(data) __gst_slow_read64_le((const guint8 *)(data))\n</pre>\n\n<p>Read a 64 bit unsigned integer value in little endian format from the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters28\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_READ_UINT64_BE\">\n\t\t\n<h4 id=\"_gst_read_uint64_be\">\n\t<span><code>_GST_READ_UINT64_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_READ_UINT64_BE(data)\t(_GST_GET (data, 0, 64, 56) | \\\n\t\t\t\t\t _GST_GET (data, 1, 64, 48) | \\\n\t\t\t\t\t _GST_GET (data, 2, 64, 40) | \\\n\t\t\t\t\t _GST_GET (data, 3, 64, 32) | \\\n\t\t\t\t\t _GST_GET (data, 4, 64, 24) | \\\n\t\t\t\t\t _GST_GET (data, 5, 64, 16) | \\\n\t\t\t\t\t _GST_GET (data, 6, 64,  8) | \\\n\t\t\t\t\t _GST_GET (data, 7, 64,  0))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_READ_UINT64_LE\">\n\t\t\n<h4 id=\"_gst_read_uint64_le\">\n\t<span><code>_GST_READ_UINT64_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_READ_UINT64_LE(data)\t(_GST_GET (data, 7, 64, 56) | \\\n\t\t\t\t\t _GST_GET (data, 6, 64, 48) | \\\n\t\t\t\t\t _GST_GET (data, 5, 64, 40) | \\\n\t\t\t\t\t _GST_GET (data, 4, 64, 32) | \\\n\t\t\t\t\t _GST_GET (data, 3, 64, 24) | \\\n\t\t\t\t\t _GST_GET (data, 2, 64, 16) | \\\n\t\t\t\t\t _GST_GET (data, 1, 64,  8) | \\\n\t\t\t\t\t _GST_GET (data, 0, 64,  0))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_READ_UINT32_BE\">\n\t\t\n<h4 id=\"gst_read_uint32_be\">\n\t<span><code>GST_READ_UINT32_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_READ_UINT32_BE(data) __gst_slow_read32_be((const guint8 *)(data))\n</pre>\n\n<p>Read a 32 bit unsigned integer value in big endian format from the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters29\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_READ_UINT32_LE\">\n\t\t\n<h4 id=\"gst_read_uint32_le\">\n\t<span><code>GST_READ_UINT32_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_READ_UINT32_LE(data) __gst_slow_read32_le((const guint8 *)(data))\n</pre>\n\n<p>Read a 32 bit unsigned integer value in little endian format from the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters30\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_READ_UINT32_BE\">\n\t\t\n<h4 id=\"_gst_read_uint32_be\">\n\t<span><code>_GST_READ_UINT32_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_READ_UINT32_BE(data)\t(_GST_GET (data, 0, 32, 24) | \\\n\t\t\t\t\t _GST_GET (data, 1, 32, 16) | \\\n\t\t\t\t\t _GST_GET (data, 2, 32,  8) | \\\n\t\t\t\t\t _GST_GET (data, 3, 32,  0))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_READ_UINT32_LE\">\n\t\t\n<h4 id=\"_gst_read_uint32_le\">\n\t<span><code>_GST_READ_UINT32_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_READ_UINT32_LE(data)\t(_GST_GET (data, 3, 32, 24) | \\\n\t\t\t\t\t _GST_GET (data, 2, 32, 16) | \\\n\t\t\t\t\t _GST_GET (data, 1, 32,  8) | \\\n\t\t\t\t\t _GST_GET (data, 0, 32,  0))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_READ_UINT24_BE\">\n\t\t\n<h4 id=\"_gst_read_uint24_be\">\n\t<span><code>_GST_READ_UINT24_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_READ_UINT24_BE(data)       (_GST_GET (data, 0, 32, 16) | \\\n                                         _GST_GET (data, 1, 32,  8) | \\\n                                         _GST_GET (data, 2, 32,  0))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_READ_UINT24_BE\">\n\t\t\n<h4 id=\"gst_read_uint24_be\">\n\t<span><code>GST_READ_UINT24_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_READ_UINT24_BE(data) __gst_slow_read24_be((const guint8 *)(data))\n</pre>\n\n<p>Read a 24 bit unsigned integer value in big endian format from the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters31\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_READ_UINT24_LE\">\n\t\t\n<h4 id=\"_gst_read_uint24_le\">\n\t<span><code>_GST_READ_UINT24_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_READ_UINT24_LE(data)       (_GST_GET (data, 2, 32, 16) | \\\n                                         _GST_GET (data, 1, 32,  8) | \\\n                                         _GST_GET (data, 0, 32,  0))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_READ_UINT24_LE\">\n\t\t\n<h4 id=\"gst_read_uint24_le\">\n\t<span><code>GST_READ_UINT24_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_READ_UINT24_LE(data) __gst_slow_read24_le((const guint8 *)(data))\n</pre>\n\n<p>Read a 24 bit unsigned integer value in little endian format from the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters32\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_READ_UINT16_BE\">\n\t\t\n<h4 id=\"gst_read_uint16_be\">\n\t<span><code>GST_READ_UINT16_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_READ_UINT16_BE(data) __gst_slow_read16_be((const guint8 *)(data))\n</pre>\n\n<p>Read a 16 bit unsigned integer value in big endian format from the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters33\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_READ_UINT16_LE\">\n\t\t\n<h4 id=\"gst_read_uint16_le\">\n\t<span><code>GST_READ_UINT16_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_READ_UINT16_LE(data) __gst_slow_read16_le((const guint8 *)(data))\n</pre>\n\n<p>Read a 16 bit unsigned integer value in little endian format from the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters34\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_READ_UINT16_BE\">\n\t\t\n<h4 id=\"_gst_read_uint16_be\">\n\t<span><code>_GST_READ_UINT16_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_READ_UINT16_BE(data)\t(_GST_GET (data, 0, 16,  8) | \\\n\t\t\t\t\t _GST_GET (data, 1, 16,  0))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"_GST_READ_UINT16_LE\">\n\t\t\n<h4 id=\"_gst_read_uint16_le\">\n\t<span><code>_GST_READ_UINT16_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define _GST_READ_UINT16_LE(data)\t(_GST_GET (data, 1, 16,  8) | \\\n\t\t\t\t\t _GST_GET (data, 0, 16,  0))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_READ_UINT8\">\n\t\t\n<h4 id=\"gst_read_uint8\">\n\t<span><code>GST_READ_UINT8</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_READ_UINT8(data)            (_GST_GET (data, 0,  8,  0))\n</pre>\n\n<p>Read an 8 bit unsigned integer value from the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters35\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_WRITE_UINT64_BE\">\n\t\t\n<h4 id=\"gst_write_uint64_be\">\n\t<span><code>GST_WRITE_UINT64_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_WRITE_UINT64_BE(data,val)   do { \\\n                                          gpointer __put_data = data; \\\n                                          guint64 __put_val = val; \\\n                                          _GST_PUT (__put_data, 0, 64, 56, __put_val); \\\n                                          _GST_PUT (__put_data, 1, 64, 48, __put_val); \\\n                                          _GST_PUT (__put_data, 2, 64, 40, __put_val); \\\n                                          _GST_PUT (__put_data, 3, 64, 32, __put_val); \\\n                                          _GST_PUT (__put_data, 4, 64, 24, __put_val); \\\n                                          _GST_PUT (__put_data, 5, 64, 16, __put_val); \\\n                                          _GST_PUT (__put_data, 6, 64,  8, __put_val); \\\n                                          _GST_PUT (__put_data, 7, 64,  0, __put_val); \\\n                                        } while (0)\n</pre>\n\n<p>Store a 64 bit unsigned integer value in big endian format into the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters36\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value to store</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_WRITE_UINT64_LE\">\n\t\t\n<h4 id=\"gst_write_uint64_le\">\n\t<span><code>GST_WRITE_UINT64_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_WRITE_UINT64_LE(data,val)   do { \\\n                                          gpointer __put_data = data; \\\n                                          guint64 __put_val = val; \\\n                                          _GST_PUT (__put_data, 0, 64,  0, __put_val); \\\n                                          _GST_PUT (__put_data, 1, 64,  8, __put_val); \\\n                                          _GST_PUT (__put_data, 2, 64, 16, __put_val); \\\n                                          _GST_PUT (__put_data, 3, 64, 24, __put_val); \\\n                                          _GST_PUT (__put_data, 4, 64, 32, __put_val); \\\n                                          _GST_PUT (__put_data, 5, 64, 40, __put_val); \\\n                                          _GST_PUT (__put_data, 6, 64, 48, __put_val); \\\n                                          _GST_PUT (__put_data, 7, 64, 56, __put_val); \\\n                                        } while (0)\n</pre>\n\n<p>Store a 64 bit unsigned integer value in little endian format into the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters37\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value to store</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_WRITE_UINT32_BE\">\n\t\t\n<h4 id=\"gst_write_uint32_be\">\n\t<span><code>GST_WRITE_UINT32_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_WRITE_UINT32_BE(data,val)   do { \\\n                                          gpointer __put_data = data; \\\n                                          guint32 __put_val = val; \\\n                                          _GST_PUT (__put_data, 0, 32, 24, __put_val); \\\n                                          _GST_PUT (__put_data, 1, 32, 16, __put_val); \\\n                                          _GST_PUT (__put_data, 2, 32,  8, __put_val); \\\n                                          _GST_PUT (__put_data, 3, 32,  0, __put_val); \\\n                                        } while (0)\n</pre>\n\n<p>Store a 32 bit unsigned integer value in big endian format into the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters38\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value to store</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_WRITE_UINT32_LE\">\n\t\t\n<h4 id=\"gst_write_uint32_le\">\n\t<span><code>GST_WRITE_UINT32_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_WRITE_UINT32_LE(data,val)   do { \\\n                                          gpointer __put_data = data; \\\n                                          guint32 __put_val = val; \\\n                                          _GST_PUT (__put_data, 0, 32,  0, __put_val); \\\n                                          _GST_PUT (__put_data, 1, 32,  8, __put_val); \\\n                                          _GST_PUT (__put_data, 2, 32, 16, __put_val); \\\n                                          _GST_PUT (__put_data, 3, 32, 24, __put_val); \\\n                                        } while (0)\n</pre>\n\n<p>Store a 32 bit unsigned integer value in little endian format into the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters39\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value to store</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_WRITE_UINT24_BE\">\n\t\t\n<h4 id=\"gst_write_uint24_be\">\n\t<span><code>GST_WRITE_UINT24_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_WRITE_UINT24_BE(data, num)  do { \\\n                                          gpointer __put_data = data; \\\n                                          guint32 __put_val = num; \\\n                                          _GST_PUT (__put_data, 0, 32,  16, __put_val); \\\n                                          _GST_PUT (__put_data, 1, 32,  8, __put_val); \\\n                                          _GST_PUT (__put_data, 2, 32,  0, __put_val); \\\n                                        } while (0)\n</pre>\n\n<p>Store a 24 bit unsigned integer value in big endian format into the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters40\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value to store</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_WRITE_UINT24_LE\">\n\t\t\n<h4 id=\"gst_write_uint24_le\">\n\t<span><code>GST_WRITE_UINT24_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_WRITE_UINT24_LE(data, num)  do { \\\n                                          gpointer __put_data = data; \\\n                                          guint32 __put_val = num; \\\n                                          _GST_PUT (__put_data, 0, 32,  0, __put_val); \\\n                                          _GST_PUT (__put_data, 1, 32,  8, __put_val); \\\n                                          _GST_PUT (__put_data, 2, 32,  16, __put_val); \\\n                                        } while (0)\n</pre>\n\n<p>Store a 24 bit unsigned integer value in little endian format into the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters41\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value to store</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_WRITE_UINT16_BE\">\n\t\t\n<h4 id=\"gst_write_uint16_be\">\n\t<span><code>GST_WRITE_UINT16_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_WRITE_UINT16_BE(data,val)   do { \\\n                                          gpointer __put_data = data; \\\n                                          guint16 __put_val = val; \\\n                                          _GST_PUT (__put_data, 0, 16,  8, __put_val); \\\n                                          _GST_PUT (__put_data, 1, 16,  0, __put_val); \\\n                                        } while (0)\n</pre>\n\n<p>Store a 16 bit unsigned integer value in big endian format into the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters42\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value to store</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_WRITE_UINT16_LE\">\n\t\t\n<h4 id=\"gst_write_uint16_le\">\n\t<span><code>GST_WRITE_UINT16_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_WRITE_UINT16_LE(data,val)   do { \\\n                                          gpointer __put_data = data; \\\n                                          guint16 __put_val = val; \\\n                                          _GST_PUT (__put_data, 0, 16,  0, __put_val); \\\n                                          _GST_PUT (__put_data, 1, 16,  8, __put_val); \\\n                                        } while (0)\n</pre>\n\n<p>Store a 16 bit unsigned integer value in little endian format into the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters43\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value to store</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_WRITE_UINT8\">\n\t\t\n<h4 id=\"gst_write_uint8\">\n\t<span><code>GST_WRITE_UINT8</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_WRITE_UINT8(data, num)      do { \\\n                                          _GST_PUT (data, 0,  8,  0, num); \\\n                                        } while (0)\n</pre>\n\n<p>Store an 8 bit unsigned integer value into the memory buffer.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters44\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>memory location</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value to store</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GFLOAT_TO_LE\">\n\t\t\n<h4 id=\"gfloat_to_le\">\n\t<span><code>GFLOAT_TO_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GFLOAT_TO_LE(val)    (GFLOAT_SWAP_LE_BE (val))\n</pre>\n\n<p>Convert 32-bit floating point value (float) from native byte order into\nlittle endian byte order.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters45\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GFLOAT_TO_BE\">\n\t\t\n<h4 id=\"gfloat_to_be\">\n\t<span><code>GFLOAT_TO_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GFLOAT_TO_BE(val)    ((gfloat) (val))\n</pre>\n\n<p>Convert 32-bit floating point value (float) from native byte order into\nbig endian byte order.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters46\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GDOUBLE_TO_LE\">\n\t\t\n<h4 id=\"gdouble_to_le\">\n\t<span><code>GDOUBLE_TO_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GDOUBLE_TO_LE(val)   (GDOUBLE_SWAP_LE_BE (val))\n</pre>\n\n<p>Convert 64-bit floating point value (double) from native byte order into\nlittle endian byte order.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters47\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GDOUBLE_TO_BE\">\n\t\t\n<h4 id=\"gdouble_to_be\">\n\t<span><code>GDOUBLE_TO_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GDOUBLE_TO_BE(val)   ((gdouble) (val))\n</pre>\n\n<p>Convert 64-bit floating point value (double) from native byte order into\nbig endian byte order.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters48\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GFLOAT_FROM_LE\">\n\t\t\n<h4 id=\"gfloat_from_le\">\n\t<span><code>GFLOAT_FROM_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GFLOAT_FROM_LE(val)  (GFLOAT_TO_LE (val))\n</pre>\n\n<p>Convert 32-bit floating point value (float) from little endian byte order\ninto native byte order.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters49\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GFLOAT_FROM_BE\">\n\t\t\n<h4 id=\"gfloat_from_be\">\n\t<span><code>GFLOAT_FROM_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GFLOAT_FROM_BE(val)  (GFLOAT_TO_BE (val))\n</pre>\n\n<p>Convert 32-bit floating point value (float) from big endian byte order\ninto native byte order.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters50\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GDOUBLE_FROM_LE\">\n\t\t\n<h4 id=\"gdouble_from_le\">\n\t<span><code>GDOUBLE_FROM_LE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GDOUBLE_FROM_LE(val) (GDOUBLE_TO_LE (val))\n</pre>\n\n<p>Convert 64-bit floating point value (double) from little endian byte order\ninto native byte order.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters51\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GDOUBLE_FROM_BE\">\n\t\t\n<h4 id=\"gdouble_from_be\">\n\t<span><code>GDOUBLE_FROM_BE</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GDOUBLE_FROM_BE(val) (GDOUBLE_TO_BE (val))\n</pre>\n\n<p>Convert 64-bit floating point value (double) from big endian byte order\ninto native byte order.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters52\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>val:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>value</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_UP_2\">\n\t\t\n<h4 id=\"gst_round_up_2\">\n\t<span><code>GST_ROUND_UP_2</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_UP_2(num)  (((num)+1)&amp;~1)\n</pre>\n\n<p>Rounds an integer value up to the next multiple of 2.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters53\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round up</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_UP_4\">\n\t\t\n<h4 id=\"gst_round_up_4\">\n\t<span><code>GST_ROUND_UP_4</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_UP_4(num)  (((num)+3)&amp;~3)\n</pre>\n\n<p>Rounds an integer value up to the next multiple of 4.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters54\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round up</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_UP_8\">\n\t\t\n<h4 id=\"gst_round_up_8\">\n\t<span><code>GST_ROUND_UP_8</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_UP_8(num)  (((num)+7)&amp;~7)\n</pre>\n\n<p>Rounds an integer value up to the next multiple of 8.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters55\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round up</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_UP_16\">\n\t\t\n<h4 id=\"gst_round_up_16\">\n\t<span><code>GST_ROUND_UP_16</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_UP_16(num) (((num)+15)&amp;~15)\n</pre>\n\n<p>Rounds an integer value up to the next multiple of 16.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters56\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round up</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_UP_32\">\n\t\t\n<h4 id=\"gst_round_up_32\">\n\t<span><code>GST_ROUND_UP_32</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_UP_32(num) (((num)+31)&amp;~31)\n</pre>\n\n<p>Rounds an integer value up to the next multiple of 32.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters57\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round up</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_UP_64\">\n\t\t\n<h4 id=\"gst_round_up_64\">\n\t<span><code>GST_ROUND_UP_64</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_UP_64(num) (((num)+63)&amp;~63)\n</pre>\n\n<p>Rounds an integer value up to the next multiple of 64.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters58\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round up</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"GST_ROUND_UP_128\">\n\t\t\n<h4 id=\"gst_round_up_128\">\n\t<span><code>GST_ROUND_UP_128</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_UP_128(num) (((num)+127)&amp;~127)\n</pre>\n\n<p>Rounds an integer value up to the next multiple of 128.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters59\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round up</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_UP_N\">\n\t\t\n<h4 id=\"gst_round_up_n\">\n\t<span><code>GST_ROUND_UP_N</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_UP_N(num,align) ((((num) + ((align) - 1)) &amp; ~((align) - 1)))\n</pre>\n\n<p>Rounds an integer value up to the next multiple of <em>align</em>. <em>align</em> MUST be a\npower of two.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters60\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integrer value to round up</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>align:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a power of two to round up to</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_DOWN_2\">\n\t\t\n<h4 id=\"gst_round_down_2\">\n\t<span><code>GST_ROUND_DOWN_2</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_DOWN_2(num)  ((num)&amp;(~1))\n</pre>\n\n<p>Rounds an integer value down to the next multiple of 2.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters61\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round down</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_DOWN_4\">\n\t\t\n<h4 id=\"gst_round_down_4\">\n\t<span><code>GST_ROUND_DOWN_4</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_DOWN_4(num)  ((num)&amp;(~3))\n</pre>\n\n<p>Rounds an integer value down to the next multiple of 4.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters62\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round down</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_DOWN_8\">\n\t\t\n<h4 id=\"gst_round_down_8\">\n\t<span><code>GST_ROUND_DOWN_8</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_DOWN_8(num)  ((num)&amp;(~7))\n</pre>\n\n<p>Rounds an integer value down to the next multiple of 8.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters63\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round down</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_DOWN_16\">\n\t\t\n<h4 id=\"gst_round_down_16\">\n\t<span><code>GST_ROUND_DOWN_16</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_DOWN_16(num) ((num)&amp;(~15))\n</pre>\n\n<p>Rounds an integer value down to the next multiple of 16.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters64\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round down</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_DOWN_32\">\n\t\t\n<h4 id=\"gst_round_down_32\">\n\t<span><code>GST_ROUND_DOWN_32</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_DOWN_32(num) ((num)&amp;(~31))\n</pre>\n\n<p>Rounds an integer value down to the next multiple of 32.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters65\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round down</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_DOWN_64\">\n\t\t\n<h4 id=\"gst_round_down_64\">\n\t<span><code>GST_ROUND_DOWN_64</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_DOWN_64(num) ((num)&amp;(~63))\n</pre>\n\n<p>Rounds an integer value down to the next multiple of 64.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters66\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round down</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"GST_ROUND_DOWN_128\">\n\t\t\n<h4 id=\"gst_round_down_128\">\n\t<span><code>GST_ROUND_DOWN_128</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_DOWN_128(num) ((num)&amp;(~127))\n</pre>\n\n<p>Rounds an integer value down to the next multiple of 128.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters67\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integer value to round down</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_ROUND_DOWN_N\">\n\t\t\n<h4 id=\"gst_round_down_n\">\n\t<span><code>GST_ROUND_DOWN_N</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_ROUND_DOWN_N(num,align) (((num) &amp; ~((align) - 1)))\n</pre>\n\n<p>Rounds an integer value down to the next multiple of <em>align</em>. <em>align</em> MUST be a\npower of two.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters68\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>num:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>integrer value to round down</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>align:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a power of two to round down to</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Enumerations\">Enumerations</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstSearchMode\">\n\t\t\n<h4 id=\"enum-gstsearchmode\">\n\t\tenum GstSearchMode\n\t</h4>\n\n\t\t<p>The different search modes.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_SEARCH_MODE_EXACT\"></a>\n\t\tGST_SEARCH_MODE_EXACT\n\t\t</p>\n\t</td>\n\t<td><p>Only search for exact matches.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_SEARCH_MODE_BEFORE\"></a>\n\t\tGST_SEARCH_MODE_BEFORE\n\t\t</p>\n\t</td>\n\t<td><p>Search for an exact match or the element just before.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_SEARCH_MODE_AFTER\"></a>\n\t\tGST_SEARCH_MODE_AFTER\n\t\t</p>\n\t</td>\n\t<td><p>Search for an exact match or the element just after.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n    </div>\n\n\n        "});