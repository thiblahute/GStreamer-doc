fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstbus.html#gst_bus_poll", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_poll\">\n\t\t\n<h4 id=\"gst_bus_poll1\">\n\t<span><code>gst_bus_poll</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstMessage\" href=\"gstmessage.html#GstMessage\">GstMessage</a> *\ngst_bus_poll (<a title=\"GstBus\" href=\"gstbus.html#GstBus\">GstBus</a> * bus,\n              <a title=\"GstMessageType\" href=\"gstmessage.html#GstMessageType\">GstMessageType</a> events,\n              <a title=\"GstClockTime\" href=\"gstclock.html#GstClockTime\">GstClockTime</a> timeout)</pre>\n\n<p>Poll the bus for messages. Will block while waiting for messages to come.\nYou can specify a maximum time to poll with the <em>timeout</em> parameter. If\n<em>timeout</em> is negative, this function will block indefinitely.</p>\n<p>All messages not in <em>events</em> will be popped off the bus and will be ignored.\nIt is not possible to use message enums beyond <a href=\"gstmessage.html#GST_MESSAGE_EXTENDED\">GST_MESSAGE_EXTENDED</a> in the\n<em>events</em> mask</p>\n<p>Because poll is implemented using the \"message\" signal enabled by\n<a href=\"gstbus.html#gst_bus_add_signal_watch\">gst_bus_add_signal_watch</a>, calling <a href=\"gstbus.html#gst_bus_poll\">gst_bus_poll</a> will cause the \"message\"\nsignal to be emitted for every message that poll sees. Thus a \"message\"\nsignal handler will see the same messages that this function sees -- neither\nwill steal messages from the other.</p>\n<p>This function will run a main loop from the default main context when\npolling.</p>\n<p>You should never use this function, since it is pure evil. This is\nespecially true for GUI applications based on Gtk+ or Qt, but also for any\nother non-trivial application that uses the GLib main loop. As this function\nruns a GLib main loop, any callback attached to the default GLib main\ncontext may be invoked. This could be timeouts, GUI events, I/O events etc.;\neven if <a href=\"gstbus.html#gst_bus_poll\">gst_bus_poll</a> is called with a 0 timeout. Any of these callbacks\nmay do things you do not expect, e.g. destroy the main application window or\nsome other resource; change other application state; display a dialog and\nrun another main loop until the user clicks it away. In short, using this\nfunction may add a lot of complexity to your code through unexpected\nre-entrancy and unexpected changes to your application's state.</p>\n<p>For 0 timeouts use <a href=\"gstbus.html#gst_bus_pop_filtered\">gst_bus_pop_filtered</a> instead of this function; for\nother short timeouts use <a href=\"gstbus.html#gst_bus_timed_pop_filtered\">gst_bus_timed_pop_filtered</a>; everything else is\nbetter handled by setting up an asynchronous bus watch and doing things\nfrom there.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters10\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">GstBus</a></p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>events:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a mask of <a href=\"gstmessage.html#GstMessageType\">GstMessageType</a>, representing the set of message types to\npoll for (note special handling of extended message types below)</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timeout:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the poll timeout, as a <a href=\"gstclock.html#GstClockTime\">GstClockTime</a>, or <a href=\"gstclock.html#GST_CLOCK_TIME_NONE\">GST_CLOCK_TIME_NONE</a> to poll\nindefinitely.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h5 id=\"returns7\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the message that was received,\nor <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> if the poll timed out. The message is taken from the\nbus and needs to be unreffed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstMessage.html#gst-message-unref\">gst_message_unref</a> after\nusage.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstMessage\" href=\"gstmessage.html#GstMessage\">GstMessage</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"NULL may be passed to the value\"><span class=\"acronym\">nullable</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});