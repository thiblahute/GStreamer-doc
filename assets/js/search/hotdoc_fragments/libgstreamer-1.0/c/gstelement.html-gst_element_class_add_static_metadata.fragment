fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstelement.html#gst_element_class_add_static_metadata", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_element_class_add_static_metadata\">\n\t\t\n<h4 id=\"gst_element_class_add_static_metadata1\">\n\t<span><code>gst_element_class_add_static_metadata</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_element_class_add_static_metadata (<a title=\"GstElementClass\" href=\"gstelement.html#GstElementClass\">GstElementClass</a> * klass,\n                                       const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * key,\n                                       const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * value)</pre>\n\n<p>Set <em>key</em> with <em>value</em> as metadata in <em>klass</em>.</p>\n<p>Same as <a href=\"gstelement.html#gst_element_class_add_metadata\">gst_element_class_add_metadata</a>, but <em>value</em> must be a static string\nor an inlined string, as it will not be copied. (GStreamer plugins will\nbe made resident once loaded, so this function can be used even from\ndynamically loaded plugins.)</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters83\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>klass:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>class to set metadata for</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>key:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the key to set</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>value:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the value to set</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});