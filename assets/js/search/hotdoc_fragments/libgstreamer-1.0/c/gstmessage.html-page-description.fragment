fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstmessage.html#page-description", "fragment": "Create a clock provide message. This message is posted whenever an element is ready to provide a clock or lost its ability to provide a clock maybe because it paused or became EOS \nThis message is mainly used internally to manage the clock selection. \nCreates a new device removed message. The device removed message is produced by GstDeviceProvider or a GstDeviceMonitor. They announce the disappearance of monitored devices. \nCreate a new duration changed message. This message is posted by elements that know the duration of a stream when the duration changes. This message is received by bins and is used to calculate the total duration of a pipeline. \nCreate a new error message. The message will copy error and debug. This message is posted by element when a fatal event occurred. The pipeline will probably partially stop. The application receiving this message should stop the pipeline. \nCreate a new info message. The message will make copies of error and debug. \nThis message can be posted by elements when they want to have their state changed. A typical use case would be an audio server that wants to pause the pipeline because a higher priority stream is being played. \nCreate a new segment message. This message is posted by elements that start playback of a segment as a result of a segment seek. This message is not received by the application but is used for maintenance reasons in container elements. \nCreate a state change message. This message is posted whenever an element changed its state. \nCreates a new stream collection message. The message is used to announce new GstStreamCollection \nCreate a new stream status message. This message is posted when a streaming thread is created destroyed or when the state changed. \nCreates a new steams selected message. The message is used to announce that an array of streams has been selected. This is generally in response to a GST_EVENT_SELECT_STREAMS event or when an element such as decodebin3 makes an initial selection of streams. \nThe message also contains the GstStreamCollection to which the various streams belong to. \nUsers of gst_message_new_streams_selected can add the selected streams with gst_message_streams_selected_add. \nCreate a new structure change message. This message is posted when the structure of a pipeline is in the process of being changed for example when pads are linked or unlinked. \nsrc should be the sinkpad that unlinked or linked. \nCreate a new warning message. The message will make copies of error and debug. \nCreates and appends a new entry. \nThe specified location string is copied. However ownership over the tag list and structure are transferred to the message. \nExtracts the object managing the streaming thread from message. \nExtracts the buffering stats values from message. \nExtracts the clock and ready flag from the GstMessage. The clock object returned remains valid until the message is freed. \nMT safe. \nParse a context type from an existing GST_MESSAGE_NEED_CONTEXT message. \nParses a device added message. The device added message is produced by GstDeviceProvider or a GstDeviceMonitor. It announces the appearance of monitored devices. \nParses a device removed message. The device removed message is produced by GstDeviceProvider or a GstDeviceMonitor. It announces the disappearance of monitored devices. \nReturns the optional details structure may be NULL if none. The returned structure must not be freed. \nExtract the context from the HAVE_CONTEXT message. \nMT safe. \nReturns the optional details structure may be NULL if none The returned structure must not be freed. \nParses a property notify message. These will be posted on the bus only when set up with gst_element_add_property_notify_watch or gst_element_add_property_deep_notify_watch. \nParses the location and or structure from the entry with the given index. The index must be between and gst_message_get_num_redirect_entries Returned pointers are valid for as long as this message exists. \nExtract the requested state from the request_state message. \nMT safe. \nExtracts the position and format from the segment done message. \nMT safe. \nExtracts the position and format from the segment start message. \nMT safe. \nExtracts the old and new states from the GstMessage. \nTypical usage of this function might be \nMT safe. \nParses a stream collection message. \nExtracts the stream status type and owner the GstMessage. The returned owner remains valid for as long as the reference to message is valid and should thus not be unreffed. \nMT safe. \nParses a streams selected message. \nExtracts the change type and completion status from the GstMessage. \nMT safe. \nReturns the optional details structure may be NULL if none The returned structure must not be freed. \nConfigures the buffering stats values in message. \nConfigures the object handling the streaming thread. This is usually a GstTask object but other objects might be added in the future. \nAdds the stream to the message. \nReturns the number of streams contained in the message. \nRetrieves the GstStream with index index from the message. \na thread is destroyed \nGST_STREAM_STATUS_TYPE_START \nPad linking is starting or done. \nGST_STRUCTURE_CHANGE_TYPE_PAD_UNLINK \nPad unlinking is starting or done. \n"});