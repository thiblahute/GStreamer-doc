fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstplugin.html#page-description", "fragment": "The opaque plugin object \nRegisters a static plugin ie. a plugin which is private to an application or library and contained within the application or library as opposed to being shipped as a separate module file with a GstPluginInitFullFunc which allows user data to be passed to the callback function useful for bindings \nYou must make sure that GStreamer has been initialised with gst_init or via gst_init_get_option_group before calling this function. \nMake GStreamer aware of external dependencies which affect the feature set of this plugin ie. the elements or typefinders associated with it \nGStreamer will re inspect plugins with external dependencies whenever any of the external dependencies change. This is useful for plugins which wrap other plugin systems e.g. a plugin which wraps a plugin based visualisation library and makes visualisations available as GStreamer elements or a codec loader which exposes elements and or caps dependent on what external codec libraries are currently installed. \nConvenience wrapper function for gst_plugin_add_dependency which takes simple strings as arguments instead of string arrays with multiple arguments separated by predefined delimiters see above \nGet the release date and possibly time in form of a string if available. \nFor normal GStreamer plugin releases this will usually just be a date in the form of YYYY MM DD while pre releases and builds from git may contain a time component after the date as well in which case the string will be formatted like YYYY MM DDTHH MMZ e.g. T09 Z \nThere may be plugins that do not have a valid release date set on them. \ngpointer _gst_reserved \nno special flags \nGST_PLUGIN_DEPENDENCY_FLAG_RECURSE \nrecurse into subdirectories \nGST_PLUGIN_DEPENDENCY_FLAG_PATHS_ARE_DEFAULT_ONLY \nuse paths argument only if none of the environment variables is set \nGST_PLUGIN_DEPENDENCY_FLAG_FILE_NAME_IS_SUFFIX \ninterpret filename argument as filter suffix and check all matching files in the directory \nGST_PLUGIN_DEPENDENCY_FLAG_FILE_NAME_IS_PREFIX \ninterpret filename argument as filter prefix and check all matching files in the directory. Since \nThe plugin has already be loaded from a different file \n"});