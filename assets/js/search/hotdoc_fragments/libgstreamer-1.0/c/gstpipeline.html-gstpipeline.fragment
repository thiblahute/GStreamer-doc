fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstpipeline.html#gstpipeline", "fragment": "GstPipeline \nA GstPipeline is a special GstBin used as the toplevel container for the filter graph. The GstPipeline will manage the selection and distribution of a global GstClock as well as provide a GstBus to the application. \ngst_pipeline_new is used to create a pipeline. when you are done with the pipeline use gst_object_unref to free its resources including all added GstElement objects if not otherwise referenced \nElements are added and removed from the pipeline using the GstBin methods like gst_bin_add and gst_bin_remove see GstBin \nBefore changing the state of the GstPipeline see GstElement a GstBus can be retrieved with gst_pipeline_get_bus. This bus can then be used to receive GstMessage from the elements in the pipeline. \nBy default a GstPipeline will automatically flush the pending GstBus messages when going to the NULL state to ensure that no circular references exist when no messages are read from the GstBus. This behaviour can be changed with gst_pipeline_set_auto_flush_bus. \nWhen the GstPipeline performs the PAUSED to PLAYING state change it will select a clock for the elements. The clock selection algorithm will by default select a clock provided by an element that is most upstream closest to the source For live pipelines ones that return GST_STATE_CHANGE_NO_PREROLL from the gst_element_set_state call this will select the clock provided by the live source. For normal pipelines this will select a clock provided by the sinks most likely the audio sink If no element provides a clock a default GstSystemClock is used. \nThe clock selection can be controlled with the gst_pipeline_use_clock method which will enforce a given clock on the pipeline. With gst_pipeline_auto_clock the default clock selection algorithm can be restored. \nA GstPipeline maintains a running time for the elements. The running time is defined as the difference between the current clock time and the base time. When the pipeline goes to READY or a flushing seek is performed on it the running time is reset to When the pipeline is set from PLAYING to PAUSED the current clock time is sampled and used to configure the base time for the elements when the pipeline is set to PLAYING again. The effect is that the running time as the difference between the clock time and the base time will count how much time was spent in the PLAYING state. This default behaviour can be changed with the gst_element_set_start_time method. \n"});