fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstevent.html#gst_event_new_eos", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_eos\">\n\t\t\n<h4 id=\"gst_event_new_eos1\">\n\t<span><code>gst_event_new_eos</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GstEvent\" href=\"gstevent.html#GstEvent\">GstEvent</a> *\ngst_event_new_eos ()</pre>\n\n<p>Create a new EOS event. The eos event can only travel downstream\nsynchronized with the buffer flow. Elements that receive the EOS\nevent on a pad can return <a href=\"gstpad.html#GST_FLOW_EOS\">GST_FLOW_EOS</a> as a <a href=\"../../c/gst-plugins-bad-plugins-1.0/element-errorignore.html#GstFlowReturn\">GstFlowReturn</a>\nwhen data after the EOS event arrives.</p>\n<p>The EOS event will travel down to the sink elements in the pipeline\nwhich will then post the <a href=\"gstmessage.html#GST_MESSAGE_EOS\">GST_MESSAGE_EOS</a> on the bus after they have\nfinished playing any buffered data.</p>\n<p>When all sinks have posted an EOS message, an EOS message is\nforwarded to the application.</p>\n<p>The EOS event itself will not cause any state transitions of the pipeline.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h5 id=\"returns3\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new EOS event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GstEvent\" href=\"gstevent.html#GstEvent\">GstEvent</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});