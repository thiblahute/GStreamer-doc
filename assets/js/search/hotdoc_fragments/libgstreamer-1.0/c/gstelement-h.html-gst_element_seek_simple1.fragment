fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstelement-h.html#gst_element_seek_simple1", "fragment": "gst_element_seek_simple \nSimple API to perform a seek on the given element meaning it just seeks to the given position relative to the start of the stream. For more complex operations like segment seeks e.g. for looping or changing the playback rate or seeking relative to the last configured playback segment you should use gst_element_seek. \nIn a completely prerolled PAUSED or PLAYING pipeline seeking is always guaranteed to return TRUE on a seekable media type or FALSE when the media type is certainly not seekable such as a live stream \nSome elements allow for seeking in the READY state in this case they will store the seek event and execute it when they are put to PAUSED. If the element supports seek in READY it will always return TRUE when it receives the event in the READY state. \nParameters \na GstElement to seek on \na GstFormat to execute the seek in such as GST_FORMAT_TIME \nseek options playback applications will usually want to use GST_SEEK_FLAG_FLUSH GST_SEEK_FLAG_KEY_UNIT here \nposition to seek to relative to the start if you are doing a seek in GST_FORMAT_TIME this value is in nanoseconds multiply with GST_SECOND to convert seconds to nanoseconds or with GST_MSECOND to convert milliseconds to nanoseconds. \nTRUE if the seek operation succeeded. Flushing seeks will trigger a preroll which will emit GST_MESSAGE_ASYNC_DONE. \n"});