fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gst.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gst.h\">\n        <h1 id=\"gstreamer\">GStreamer</h1><p>GStreamer is a framework for constructing graphs of various filters\n(termed elements here) that will handle streaming media.  Any discrete\n(packetizable) media type is supported, with provisions for automatically\ndetermining source type.  Formatting/framing information is provided with\na powerful negotiation framework.  Plugins are heavily used to provide for\nall elements, allowing one to construct plugins outside of the GST\nlibrary, even released binary-only if license require (please don't).\nGStreamer covers a wide range of use cases including: playback, recording,\nediting, serving streams, voice over ip and video calls.</p>\n<p>The <application>GStreamer</application> library should be initialized with\n<a href=\"gst.html#gst_init\">gst_init</a> before it can be used. You should pass pointers to the main argc\nand argv variables so that GStreamer can process its own command line\noptions, as shown in the following example.</p>\n<h2 id=\"initializing-the-gstreamer-library\">Initializing the gstreamer library</h2>\n<pre><code class=\"language-[\"> int\n main (int argc, char *argv[])\n {\n   // initialize the GStreamer library\n   gst_init (&amp;amp;argc, &amp;amp;argv);\n   ...\n }\n</code></pre>\n<p>It's allowed to pass two <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#NULL:CAPS\">NULL</a> pointers to <a href=\"gst.html#gst_init\">gst_init</a> in case you don't want\nto pass the command line args to GStreamer.</p>\n<p>You can also use GOption to initialize your own parameters as shown in\nthe next code fragment:</p>\n<h2 id=\"initializing-own-parameters-when-initializing-gstreamer\">Initializing own parameters when initializing gstreamer</h2>\n<pre><code class=\"language-[\"> static gboolean stats = FALSE;\n ...\n int\n main (int argc, char *argv[])\n {\n  GOptionEntry options[] = {\n   {\"tags\", 't', 0, G_OPTION_ARG_NONE, &amp;amp;tags,\n       N_(\"Output tags (also known as metadata)\"), NULL},\n   {NULL}\n  };\n  ctx = g_option_context_new (\"[ADDITIONAL ARGUMENTS]\");\n  g_option_context_add_main_entries (ctx, options, GETTEXT_PACKAGE);\n  g_option_context_add_group (ctx, gst_init_get_option_group ());\n  if (!g_option_context_parse (ctx, &amp;amp;argc, &amp;amp;argv, &amp;amp;err)) {\n    g_print (\"Error initializing: &amp;percnt;s\\n\", GST_STR_NULL (err-&gt;message));\n    exit (1);\n  }\n  g_option_context_free (ctx);\n ...\n }\n</code></pre>\n<p>Use <a href=\"gst.html#gst_version\">gst_version</a> to query the library version at runtime or use the\nGST_VERSION_* macros to find the version at compile time. Optionally\n<a href=\"gst.html#gst_version_string\">gst_version_string</a> returns a printable string.</p>\n<p>The <a href=\"gst.html#gst_deinit\">gst_deinit</a> call is used to clean up all internal resources used\nby GStreamer. It is mostly used in unit tests to check for leaks.</p>\n\n        \n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_deinit\">\n\t\t\n<h4 id=\"gst_deinit1\">\n\t<span><code>gst_deinit</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_deinit ()</pre>\n\n<p>Clean up any resources created by GStreamer in <a href=\"gst.html#gst_init\">gst_init</a>.</p>\n<p>It is normally not needed to call this function in a normal application\nas the resources will automatically be freed when the program terminates.\nThis function is therefore mostly used by testsuites and other memory\nprofiling tools.</p>\n<p>After this call GStreamer (including this method) should not be used anymore.</p>\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_init\">\n\t\t\n<h4 id=\"gst_init1\">\n\t<span><code>gst_init</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_init (int* argc,\n          char* argv)</pre>\n\n<p>Initializes the GStreamer library, setting up internal path lists,\nregistering built-in elements, and loading standard plugins.</p>\n<p>Unless the plugin registry is disabled at compile time, the registry will be\nloaded. By default this will also check if the registry cache needs to be\nupdated and rescan all plugins if needed. See <a href=\"gstregistry.html#gst_update_registry\">gst_update_registry</a> for\ndetails and section</p>\n <link linkend=\"gst-running\">Running GStreamer Applications\n for how to disable automatic registry updates.\n<blockquote>\n<p>This function will terminate your program if it was unable to initialize\nGStreamer for some reason.  If you want your program to fall back,\nuse <a href=\"gst.html#gst_init_check\">gst_init_check</a> instead.</p>\n</blockquote>\n<p>WARNING: This function does not work in the same way as corresponding\nfunctions in other glib-style libraries, such as gtk_init(). In\nparticular, unknown command line options cause this function to\nabort program execution.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>argc:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to application's argc</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for input and for returning results\"><span class=\"acronym\">inout</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>argv:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to application's argv</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for input and for returning results\"><span class=\"acronym\">inout</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"Parameter points to an array of items\"><span class=\"acronym\">array</span></abbr> length=argc]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_init_check\">\n\t\t\n<h4 id=\"gst_init_check1\">\n\t<span><code>gst_init_check</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_init_check (int* argc,\n                char* argv)</pre>\n\n<p>Initializes the GStreamer library, setting up internal path lists,\nregistering built-in elements, and loading standard plugins.</p>\n<p>This function will return <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> if GStreamer could not be initialized\nfor some reason.  If you want your program to fail fatally,\nuse <a href=\"gst.html#gst_init\">gst_init</a> instead.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>argc:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to application's argc</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for input and for returning results\"><span class=\"acronym\">inout</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>argv:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to application's argv</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for input and for returning results\"><span class=\"acronym\">inout</span></abbr>]</span>\n<span class=\"annotation\">[<abbr title=\"Parameter points to an array of items\"><span class=\"acronym\">array</span></abbr> length=argc]</span>\n<span class=\"annotation\">[<abbr title=\"NULL is OK, both for passing and returning\"><span class=\"acronym\">allow-none</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if GStreamer could be initialized.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_init_get_option_group\">\n\t\t\n<h4 id=\"gst_init_get_option_group1\">\n\t<span><code>gst_init_get_option_group</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GOptionGroup\" href=\"https://developer.gnome.org/glib/unstable/glib-Commandline-option-parser.html#GOptionGroup\">GOptionGroup</a> *\ngst_init_get_option_group ()</pre>\n\n<p>Returns a <a href=\"https://developer.gnome.org/glib/unstable/glib-Commandline-option-parser.html#GOptionGroup\">GOptionGroup</a> with GStreamer's argument specifications. The\ngroup is set up to use standard GOption callbacks, so when using this\ngroup in combination with GOption parsing methods, all argument parsing\nand initialization is automated.</p>\n<p>This function is useful if you want to integrate GStreamer with other\nlibraries that use GOption (see <a href=\"https://developer.gnome.org/glib/unstable/glib-Commandline-option-parser.html#g-option-context-add-group\">g_option_context_add_group</a> ).</p>\n<p>If you use this function, you should make sure you initialise the GLib\nthreading system as one of the very first things in your program\n(see the example at the beginning of this section).</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns1\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a pointer to GStreamer's option group.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GOptionGroup\" href=\"https://developer.gnome.org/glib/unstable/glib-Commandline-option-parser.html#GOptionGroup\">GOptionGroup</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_is_initialized\">\n\t\t\n<h4 id=\"gst_is_initialized1\">\n\t<span><code>gst_is_initialized</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_is_initialized ()</pre>\n\n<p>Use this function to check if GStreamer has been initialized with <a href=\"gst.html#gst_init\">gst_init</a>\nor <a href=\"gst.html#gst_init_check\">gst_init_check</a>.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns2\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if initialization has been done, <a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#FALSE:CAPS\">FALSE</a> otherwise.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_segtrap_is_enabled\">\n\t\t\n<h4 id=\"gst_segtrap_is_enabled1\">\n\t<span><code>gst_segtrap_is_enabled</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\ngst_segtrap_is_enabled ()</pre>\n\n<p>Some functions in the GStreamer core might install a custom SIGSEGV handler\nto better catch and report errors to the application. Currently this feature\nis enabled by default when loading plugins.</p>\n<p>Applications might want to disable this behaviour with the\n<a href=\"gst.html#gst_segtrap_set_enabled\">gst_segtrap_set_enabled</a> function. This is typically done if the application\nwants to install its own handler without GStreamer interfering.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns3\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://developer.gnome.org/glib/unstable/glib-Standard-Macros.html#TRUE:CAPS\">TRUE</a> if GStreamer is allowed to install a custom SIGSEGV handler.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_segtrap_set_enabled\">\n\t\t\n<h4 id=\"gst_segtrap_set_enabled1\">\n\t<span><code>gst_segtrap_set_enabled</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_segtrap_set_enabled (<a title=\"gboolean\" href=\"https://developer.gnome.org/camel/unstable/CamelIMAPXServer.html#gboolean\">gboolean</a> enabled)</pre>\n\n<p>Applications might want to disable/enable the SIGSEGV handling of\nthe GStreamer core. See <a href=\"gst.html#gst_segtrap_is_enabled\">gst_segtrap_is_enabled</a> for more information.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters2\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>enabled:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>whether a custom SIGSEGV handler should be installed.</p>\n</td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_version\">\n\t\t\n<h4 id=\"gst_version1\">\n\t<span><code>gst_version</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\nvoid\ngst_version (<a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> * major,\n             <a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> * minor,\n             <a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> * micro,\n             <a title=\"guint\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint\">guint</a> * nano)</pre>\n\n<p>Gets the version number of the GStreamer library.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters3\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>major:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a guint to store the major version number</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>minor:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a guint to store the minor version number</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>micro:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a guint to store the micro version number</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>nano:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to a guint to store the nano version number</p>\n</td>\n<td>\n\n<span class=\"annotation\">[<abbr title=\"Parameter for returning results\"><span class=\"acronym\">out</span></abbr>]</span>\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_version_string\">\n\t\t\n<h4 id=\"gst_version_string1\">\n\t<span><code>gst_version_string</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> *\ngst_version_string ()</pre>\n\n<p>This function returns a string that is useful for describing this version\nof GStreamer to the outside world: user agent strings, logging, ...</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns4\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a newly allocated string describing this version\nof GStreamer.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> *\n\t</td>\n\t\t\t\t<td>\n\t\n<span class=\"annotation\">[<abbr title=\"Free data after the code is done\"><span class=\"acronym\">transfer: full</span></abbr>]</span>\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n    </div>\n\n\n        "});