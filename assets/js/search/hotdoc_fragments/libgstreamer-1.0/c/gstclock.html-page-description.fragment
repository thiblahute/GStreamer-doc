fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstclock.html#page-description", "fragment": "GstClock base structure. The values of this structure are protected for subclasses use the methods to use the GstClock. \nAdd a clock observation to the internal slaving algorithm the same as gst_clock_add_observation and return the result of the master clock estimation without updating the internal calibration. \nThe caller can then take the results and call gst_clock_set_calibration with the values or some modified version of them. \nConverts the given internal_target clock time to the external time using the passed calibration parameters. This function performs the same calculation as gst_clock_adjust_unlocked when called using the current calibration parameters but doesn t ensure a monotonically increasing result as gst_clock_adjust_unlocked does. \nNote The clock parameter is unused and can be NULL \nReinitializes the provided single shot id to the provided time. Does not modify the reference count. \nConverts the given external_target clock time to the internal time using the passed calibration parameters. This function performs the same calculation as gst_clock_unadjust_unlocked when called using the current calibration parameters. \nNote The clock parameter is unused and can be NULL \nclock can do a single sync timeout request \nGST_CLOCK_FLAG_CAN_DO_SINGLE_ASYNC \nclock can do a single async timeout request \nGST_CLOCK_FLAG_CAN_DO_PERIODIC_SYNC \nclock can do sync periodic timeout requests \nGST_CLOCK_FLAG_CAN_DO_PERIODIC_ASYNC \nclock can do async periodic timeout callbacks \nGST_CLOCK_FLAG_CAN_SET_RESOLUTION \nclock s resolution can be changed \nGST_CLOCK_FLAG_CAN_SET_MASTER \nclock needs to be synced before it can be used Since \nGST_CLOCK_FLAG_LAST \n"});