fragment_downloaded_cb({"url": "libgstreamer-1.0/c/gstdynamictypefactory.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstdynamictypefactory.h\">\n        <h1 id=\"gstdynamictypefactory\">GstDynamicTypeFactory</h1><p><a href=\"gstdynamictypefactory.html#GstDynamicTypeFactory\">GstDynamicTypeFactory</a> is used to represent a type that can be\nautomatically loaded the first time it is used. For example,\na non-standard type for use in caps fields.</p>\n<p>In general, applications and plugins don't need to use the factory\nbeyond registering the type in a plugin init function. Once that is\ndone, the type is stored in the registry, and ready as soon as the\nregistry is loaded.</p>\n<h2 id=\"registering-a-type-for-dynamic-loading\">Registering a type for dynamic loading</h2>\n<pre><code class=\"language-[&lt;!--\">\n static gboolean\n plugin_init (GstPlugin * plugin)\n {\n   return gst_dynamic_type_register (plugin, GST_TYPE_CUSTOM_CAPS_FIELD);\n }\n</code></pre>\n\n        \n\n        <h2 class=\"symbols_section\" id=\"GstDynamicTypeFactory\" data-hotdoc-by-parent=\"true\">GstDynamicTypeFactory</h2>\n        \n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstDynamicTypeFactory\">\n\t\t\t\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstPluginFeature\" href=\"gstpluginfeature.html#GstPluginFeature\">GstPluginFeature</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span>GstDynamicTypeFactory\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>The opaque <a href=\"gstdynamictypefactory.html#GstDynamicTypeFactory\">GstDynamicTypeFactory</a> data structure.</p>\n\n</div>\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_dynamic_type_factory_load\">\n\t\t\n<h4 id=\"gst_dynamic_type_factory_load1\">\n\t<span><code>gst_dynamic_type_factory_load</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"GType\" href=\"https://developer.gnome.org/gobject/unstable/gobject-Type-Information.html#GType\">GType</a>\ngst_dynamic_type_factory_load (const <a title=\"gchar\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gchar\">gchar</a> * factoryname)</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>factoryname:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n\n\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"GType\" href=\"https://developer.gnome.org/gobject/unstable/gobject-Type-Information.html#GType\">GType</a>\n\t</td>\n\t\t\t\t<td>\n\t\n\n\t</td>\n\t\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Function_Macros\">Function Macros</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_DYNAMIC_TYPE_CLASS\">\n\t\t\n<h4 id=\"gst_dynamic_type_class\">\n\t<span><code>GST_DYNAMIC_TYPE_CLASS</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_DYNAMIC_TYPE_CLASS(klass)           (G_TYPE_CHECK_CLASS_CAST((klass),GST_TYPE_DYNAMIC_TYPE_FACTORY,\\\n                                                 GstDynamicTypeFactoryClass))\n</pre>\n\n\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_DYNAMIC_TYPE_FACTORY_CAST\">\n\t\t\n<h4 id=\"gst_dynamic_type_factory_cast\">\n\t<span><code>GST_DYNAMIC_TYPE_FACTORY_CAST</code></span>\n</h4>\n\n\t\t<pre class=\"raw_code\">\n#define GST_DYNAMIC_TYPE_FACTORY_CAST(obj)      ((GstDynamicTypeFactory *)(obj))\n</pre>\n\n\n\n\n\n\n</div>\n\n\n\n    </div>\n\n\n        "});