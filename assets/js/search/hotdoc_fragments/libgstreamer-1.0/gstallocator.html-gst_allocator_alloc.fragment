fragment_downloaded_cb({"url": "libgstreamer-1.0/gstallocator.html#gst_allocator_alloc", "fragment": "gst_allocator_alloc \nGst.Allocator.alloc \nGst.Allocator.Alloc \nGst.prototype.alloc \nUse allocator to allocate a new memory block with memory that is at least size big. \nThe optional params can specify the prefix and padding for the memory. If NULL is passed no flags no extra prefix padding and a default alignment is used. \nThe prefix padding will be filled with if flags contains GST_MEMORY_FLAG_ZERO_PREFIXED and GST_MEMORY_FLAG_ZERO_PADDED respectively. \nWhen allocator is NULL the default allocator will be used. \nThe alignment in params is given as a bitmask so that align equals the amount of bytes to align to. For example to align to bytes use an alignment of \nParameters \na GstAllocator to use \nsize of the visible memory area \noptional parameters \na new GstMemory. \nUse allocator to allocate a new memory block with memory that is at least size big. \nThe optional params can specify the prefix and padding for the memory. If None is passed no flags no extra prefix padding and a default alignment is used. \nThe prefix padding will be filled with if flags contains Gst.MemoryFlags.ZERO_PREFIXED and Gst.MemoryFlags.ZERO_PADDED respectively. \nWhen allocator is None the default allocator will be used. \nThe alignment in params is given as a bitmask so that align equals the amount of bytes to align to. For example to align to bytes use an alignment of \nParameters \na Gst.Allocator to use \nsize of the visible memory area \noptional parameters \na new Gst.Memory. \nUse allocator to allocate a new memory block with memory that is at least size big. \nThe optional params can specify the prefix and padding for the memory. If null is passed no flags no extra prefix padding and a default alignment is used. \nThe prefix padding will be filled with if flags contains Gst.MemoryFlags.ZeroPrefixed and Gst.MemoryFlags.ZeroPadded respectively. \nWhen allocator is null the default allocator will be used. \nThe alignment in params is given as a bitmask so that align equals the amount of bytes to align to. For example to align to bytes use an alignment of \nParameters \nsize of the visible memory area \noptional parameters \na new Gst.Memory. \nUse allocator to allocate a new memory block with memory that is at least size big. \nThe optional params can specify the prefix and padding for the memory. If null is passed no flags no extra prefix padding and a default alignment is used. \nThe prefix padding will be filled with if flags contains Gst.MemoryFlags.ZERO_PREFIXED and Gst.MemoryFlags.ZERO_PADDED respectively. \nWhen allocator is null the default allocator will be used. \nThe alignment in params is given as a bitmask so that align equals the amount of bytes to align to. For example to align to bytes use an alignment of \nParameters \na Gst.Allocator to use \nsize of the visible memory area \noptional parameters \na new Gst.Memory. \n"});