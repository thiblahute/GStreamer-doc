fragment_downloaded_cb({"url": "libgstreamer-1.0/gstevent.html#gst_event_new_tag", "fragment": "gst_event_new_tag \nGst.Event.new_tag \nGst.Event \nGst.prototype.new_tag \nGenerates a metadata tag event from the given taglist. \nThe scope of the taglist specifies if the taglist applies to the complete medium or only to this specific stream. As the tag event is a sticky event elements should merge tags received from upstream with a given scope with their own tags with the same scope and create a new tag event from it. \nParameters \nmetadata list. The event will take ownership of the taglist. \na new GstEvent \nGenerates a metadata tag event from the given taglist. \nThe scope of the taglist specifies if the taglist applies to the complete medium or only to this specific stream. As the tag event is a sticky event elements should merge tags received from upstream with a given scope with their own tags with the same scope and create a new tag event from it. \nParameters \nmetadata list. The event will take ownership of the taglist. \na new Gst.Event \nGenerates a metadata tag event from the given taglist. \nThe scope of the taglist specifies if the taglist applies to the complete medium or only to this specific stream. As the tag event is a sticky event elements should merge tags received from upstream with a given scope with their own tags with the same scope and create a new tag event from it. \nParameters \nmetadata list. The event will take ownership of the taglist. \na new Gst.Event \nGenerates a metadata tag event from the given taglist. \nThe scope of the taglist specifies if the taglist applies to the complete medium or only to this specific stream. As the tag event is a sticky event elements should merge tags received from upstream with a given scope with their own tags with the same scope and create a new tag event from it. \nParameters \nmetadata list. The event will take ownership of the taglist. \na new Gst.Event \n"});