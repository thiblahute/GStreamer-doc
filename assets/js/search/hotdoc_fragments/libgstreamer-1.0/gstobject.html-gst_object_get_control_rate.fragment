fragment_downloaded_cb({"url": "libgstreamer-1.0/gstobject.html#gst_object_get_control_rate", "fragment": "gst_object_get_control_rate \nGst.Object.get_control_rate \nGst.prototype.get_control_rate \nObtain the control rate for this object. Audio processing GstElement objects will use this rate to sub divide their processing loop and call gst_object_sync_values inbetween. The length of the processing segment should be up to control rate nanoseconds. \nIf the object is not under property control this will return GST_CLOCK_TIME_NONE. This allows the element to avoid the sub dividing. \nThe control rate is not expected to change if the element is in GST_STATE_PAUSED or GST_STATE_PLAYING. \nParameters \nthe object that has controlled properties \nthe control rate in nanoseconds \nObtain the control rate for this object. Audio processing Gst.Element objects will use this rate to sub divide their processing loop and call Gst.Object.sync_values inbetween. The length of the processing segment should be up to control rate nanoseconds. \nIf the object is not under property control this will return Gst.CLOCK_TIME_NONE. This allows the element to avoid the sub dividing. \nThe control rate is not expected to change if the element is in Gst.State.PAUSED or Gst.State.PLAYING. \nParameters \nthe object that has controlled properties \nthe control rate in nanoseconds \nObtain the control rate for this object. Audio processing Gst.Element objects will use this rate to sub divide their processing loop and call Gst.prototype.sync_values inbetween. The length of the processing segment should be up to control rate nanoseconds. \nIf the object is not under property control this will return Gst.CLOCK_TIME_NONE. This allows the element to avoid the sub dividing. \nThe control rate is not expected to change if the element is in Gst.State.PAUSED or Gst.State.PLAYING. \nParameters \nthe object that has controlled properties \nthe control rate in nanoseconds \n"});