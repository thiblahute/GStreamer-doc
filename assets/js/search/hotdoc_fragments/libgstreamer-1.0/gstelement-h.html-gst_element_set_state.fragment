fragment_downloaded_cb({"url": "libgstreamer-1.0/gstelement-h.html#gst_element_set_state", "fragment": "Gst.prototype.set_state \nGst.Element.set_state \nGst.Element.SetState \ngst_element_set_state \nSets the state of the element. This function will try to set the requested state by going through all the intermediary states and calling the class s state change function for each. \nThis function can return Gst.StateChangeReturn.ASYNC in which case the element will perform the remainder of the state change asynchronously in another thread. An application can use Gst.prototype.get_state to wait for the completion of the state change or it can wait for a Gst.MessageType.ASYNC_DONE or Gst.MessageType.STATE_CHANGED on the bus. \nState changes to Gst.State.READY or Gst.State.NULL never return Gst.StateChangeReturn.ASYNC. \nParameters \na Gst.Element to change state of. \nthe element s new Gst.State. \nResult of the state change using Gst.StateChangeReturn. \nMT safe. \nSets the state of the element. This function will try to set the requested state by going through all the intermediary states and calling the class s state change function for each. \nThis function can return Gst.StateChangeReturn.ASYNC in which case the element will perform the remainder of the state change asynchronously in another thread. An application can use Gst.Element.get_state to wait for the completion of the state change or it can wait for a Gst.MessageType.ASYNC_DONE or Gst.MessageType.STATE_CHANGED on the bus. \nState changes to Gst.State.READY or Gst.State.NULL never return Gst.StateChangeReturn.ASYNC. \nParameters \na Gst.Element to change state of. \nthe element s new Gst.State. \nResult of the state change using Gst.StateChangeReturn. \nMT safe. \nSets the state of the element. This function will try to set the requested state by going through all the intermediary states and calling the class s state change function for each. \nThis function can return Gst.StateChangeReturn.Async in which case the element will perform the remainder of the state change asynchronously in another thread. An application can use Gst.Element.GetState to wait for the completion of the state change or it can wait for a Gst.MessageType.AsyncDone or Gst.MessageType.StateChanged on the bus. \nState changes to Gst.State.Ready or Gst.State.Null never return Gst.StateChangeReturn.Async. \nParameters \nthe element s new Gst.State. \nResult of the state change using Gst.StateChangeReturn. \nMT safe. \nSets the state of the element. This function will try to set the requested state by going through all the intermediary states and calling the class s state change function for each. \nThis function can return GST_STATE_CHANGE_ASYNC in which case the element will perform the remainder of the state change asynchronously in another thread. An application can use gst_element_get_state to wait for the completion of the state change or it can wait for a GST_MESSAGE_ASYNC_DONE or GST_MESSAGE_STATE_CHANGED on the bus. \nState changes to GST_STATE_READY or GST_STATE_NULL never return GST_STATE_CHANGE_ASYNC. \nParameters \na GstElement to change state of. \nthe element s new GstState. \nResult of the state change using GstStateChangeReturn. \nMT safe. \n"});