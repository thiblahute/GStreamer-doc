fragment_downloaded_cb({"url": "libgstreamer-1.0/gstminiobject.html#gst_mini_object_take", "fragment": "gst_mini_object_take \nGst.MiniObject.take \nGst.MiniObject.Take \nGst.prototype.take \nModifies a pointer to point to a new mini object. The modification is done atomically. This version is similar to gst_mini_object_replace except that it does not increase the refcount of newdata and thus takes ownership of newdata. \nEither newdata and the value pointed to by olddata may be NULL. \nParameters \npointer to a pointer to a mini object to be replaced \npointer to new mini object \nTRUE if newdata was different from olddata \nModifies a pointer to point to a new mini object. The modification is done atomically. This version is similar to Gst.MiniObject.replace except that it does not increase the refcount of newdata and thus takes ownership of newdata. \nEither newdata and the value pointed to by olddata may be None. \nParameters \npointer to a pointer to a mini object to be replaced \npointer to new mini object \nReturns a tuple made of \nTrue if newdata was different from olddata \nTrue if newdata was different from olddata \nModifies a pointer to point to a new mini object. The modification is done atomically. This version is similar to Gst.MiniObject.Replace except that it does not increase the refcount of newdata and thus takes ownership of newdata. \nEither newdata and the value pointed to by olddata may be null. \nParameters \npointer to a pointer to a mini object to be replaced \npointer to new mini object \ntrue if newdata was different from olddata \nModifies a pointer to point to a new mini object. The modification is done atomically. This version is similar to Gst.prototype.replace except that it does not increase the refcount of newdata and thus takes ownership of newdata. \nEither newdata and the value pointed to by olddata may be null. \nParameters \npointer to a pointer to a mini object to be replaced \npointer to new mini object \nReturns a tuple made of \ntrue if newdata was different from olddata \ntrue if newdata was different from olddata \n"});