fragment_downloaded_cb({"url": "libgstreamer-1.0/gststructure.html#page-description", "fragment": "A Gst.Structure is a collection of key value pairs. The keys are expressed as GQuarks and the values can be of any GType. \nIn addition to the key value pairs a Gst.Structure also has a name. The name starts with a letter and can be filled by letters numbers and any of _. \nGst.Structure is used by various GStreamer subsystems to store information in a flexible and extensible way. A Gst.Structure does not have a refcount because it usually is part of a higher level object such as Gst.Caps Gst.Message Gst.Event Gst.Query. It provides a means to enforce mutability using the refcount of the parent with the Gst.Structure.SetParentRefcount method. \nA Gst.Structure can be created with Gst.Structure or gst_structure_new not introspectable which both take a name and an optional set of key value pairs along with the types of the values. \nField values can be changed with Gst.Structure.SetValue or gst_structure_set not introspectable \nField values can be retrieved with Gst.Structure.GetValue or the more convenient gst_structure_get_ functions. \nFields can be removed with Gst.Structure.RemoveField or gst_structure_remove_fields not introspectable \nStrings in structures must be ASCII or UTF encoded. Other encodings are not allowed. Strings may be null however. \nBe aware that the current Gst.Caps Gst.Structure serialization into string has limited support for nested Gst.Caps Gst.Structure fields. It can only support one level of nesting. Using more levels will lead to unexpected behavior when using serialization features such as Gst.Caps.ToString or Gst.Value.ValueSerialize and their counterparts. \n"});