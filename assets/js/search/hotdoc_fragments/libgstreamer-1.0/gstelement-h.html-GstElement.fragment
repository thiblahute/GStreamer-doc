fragment_downloaded_cb({"url": "libgstreamer-1.0/gstelement-h.html#GstElement", "fragment": "GstElement \nMembers \nClass structure \nGstElementClass \nFields \nGst.ElementClass \nAttributes \nGst.ElementClass \nAttributes \nGstElement \nMembers \nGstElement \nMembers \nGStreamer element abstract base class. \nUsed to serialize execution of gst_element_set_state \nUsed to signal completion of a state change \nUsed to detect concurrent execution of gst_element_set_state and gst_element_get_state \nthe target state of an element as set by the application \nthe current state of an element \nthe next state of an element can be GST_STATE_VOID_PENDING if the element is in the correct state. \nthe final state the element should go to can be GST_STATE_VOID_PENDING if the element is in the correct state \nthe last return value of an element state change \nthe bus of the element. This bus is provided to the element by the parent element or the application. A GstPipeline has a bus of its own. \nthe clock of the element. This clock is usually provided to the element by the toplevel GstPipeline. \nthe time of the clock right before the element is set to PLAYING. Subtracting base_time from the current clock time in the PLAYING state will yield the running_time against the clock. \nthe running_time of the last PAUSED state \nnumber of pads of the element includes both source and sink pads. \nlist of pads \nnumber of source pads of the element. \nlist of source pads \nnumber of sink pads of the element. \nlist of sink pads \nupdated whenever the a pad is added or removed \nlist of contexts \nGStreamer element abstract base class. \nUsed to serialize execution of gst_element_set_state \nUsed to signal completion of a state change \nUsed to detect concurrent execution of gst_element_set_state and gst_element_get_state \nthe target state of an element as set by the application \nthe current state of an element \nthe next state of an element can be GST_STATE_VOID_PENDING if the element is in the correct state. \nthe final state the element should go to can be GST_STATE_VOID_PENDING if the element is in the correct state \nthe last return value of an element state change \nthe bus of the element. This bus is provided to the element by the parent element or the application. A GstPipeline has a bus of its own. \nthe clock of the element. This clock is usually provided to the element by the toplevel GstPipeline. \nthe time of the clock right before the element is set to PLAYING. Subtracting base_time from the current clock time in the PLAYING state will yield the running_time against the clock. \nthe running_time of the last PAUSED state \nnumber of pads of the element includes both source and sink pads. \nlist of pads \nnumber of source pads of the element. \nlist of source pads \nnumber of sink pads of the element. \nlist of sink pads \nupdated whenever the a pad is added or removed \nlist of contexts \nGStreamer element abstract base class. \nUsed to serialize execution of gst_element_set_state \nUsed to signal completion of a state change \nUsed to detect concurrent execution of gst_element_set_state and gst_element_get_state \nthe target state of an element as set by the application \nthe current state of an element \nthe next state of an element can be GST_STATE_VOID_PENDING if the element is in the correct state. \nthe final state the element should go to can be GST_STATE_VOID_PENDING if the element is in the correct state \nthe last return value of an element state change \nthe bus of the element. This bus is provided to the element by the parent element or the application. A GstPipeline has a bus of its own. \nthe clock of the element. This clock is usually provided to the element by the toplevel GstPipeline. \nthe time of the clock right before the element is set to PLAYING. Subtracting base_time from the current clock time in the PLAYING state will yield the running_time against the clock. \nthe running_time of the last PAUSED state \nnumber of pads of the element includes both source and sink pads. \nlist of pads \nnumber of source pads of the element. \nlist of source pads \nnumber of sink pads of the element. \nlist of sink pads \nupdated whenever the a pad is added or removed \nlist of contexts \n"});