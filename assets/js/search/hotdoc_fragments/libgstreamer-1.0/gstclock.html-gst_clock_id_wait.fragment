fragment_downloaded_cb({"url": "libgstreamer-1.0/gstclock.html#gst_clock_id_wait", "fragment": "Gst.prototype.id_wait \nGst.Clock.id_wait \nGst.Clock.IdWait \ngst_clock_id_wait \nPerform a blocking wait on id. id should have been created with Gst.prototype.new_single_shot_id or Gst.prototype.new_periodic_id and should not have been unscheduled with a call to Gst.prototype.id_unschedule. \nIf the jitter argument is not null and this function returns Gst.ClockReturn.OK or Gst.ClockReturn.EARLY it will contain the difference against the clock and the time of id when this method was called. Positive values indicate how late id was relative to the clock in which case this function will return Gst.ClockReturn.EARLY Negative values indicate how much time was spent waiting on the clock before this function returned. \nParameters \nThe Object to wait on \nReturns a tuple made of \nthe result of the blocking wait. Gst.ClockReturn.EARLY will be returned if the current clock time is past the time of id Gst.ClockReturn.OK if id was scheduled in time. Gst.ClockReturn.UNSCHEDULED if id was unscheduled with Gst.prototype.id_unschedule. \nMT safe. \nthe result of the blocking wait. Gst.ClockReturn.EARLY will be returned if the current clock time is past the time of id Gst.ClockReturn.OK if id was scheduled in time. Gst.ClockReturn.UNSCHEDULED if id was unscheduled with Gst.prototype.id_unschedule. \nMT safe. \nPerform a blocking wait on id. id should have been created with Gst.Clock.new_single_shot_id or Gst.Clock.new_periodic_id and should not have been unscheduled with a call to Gst.Clock.id_unschedule. \nIf the jitter argument is not None and this function returns Gst.ClockReturn.OK or Gst.ClockReturn.EARLY it will contain the difference against the clock and the time of id when this method was called. Positive values indicate how late id was relative to the clock in which case this function will return Gst.ClockReturn.EARLY Negative values indicate how much time was spent waiting on the clock before this function returned. \nParameters \nThe object to wait on \nReturns a tuple made of \nthe result of the blocking wait. Gst.ClockReturn.EARLY will be returned if the current clock time is past the time of id Gst.ClockReturn.OK if id was scheduled in time. Gst.ClockReturn.UNSCHEDULED if id was unscheduled with Gst.Clock.id_unschedule. \nMT safe. \nthe result of the blocking wait. Gst.ClockReturn.EARLY will be returned if the current clock time is past the time of id Gst.ClockReturn.OK if id was scheduled in time. Gst.ClockReturn.UNSCHEDULED if id was unscheduled with Gst.Clock.id_unschedule. \nMT safe. \nPerform a blocking wait on id. id should have been created with Gst.Clock.NewSingleShotId or Gst.Clock.NewPeriodicId and should not have been unscheduled with a call to Gst.Clock.IdUnschedule. \nIf the jitter argument is not null and this function returns Gst.ClockReturn.Ok or Gst.ClockReturn.Early it will contain the difference against the clock and the time of id when this method was called. Positive values indicate how late id was relative to the clock in which case this function will return Gst.ClockReturn.Early Negative values indicate how much time was spent waiting on the clock before this function returned. \nParameters \nThe Gst.ClockID to wait on \na pointer that will contain the jitter can be null. \nthe result of the blocking wait. Gst.ClockReturn.Early will be returned if the current clock time is past the time of id Gst.ClockReturn.Ok if id was scheduled in time. Gst.ClockReturn.Unscheduled if id was unscheduled with Gst.Clock.IdUnschedule. \nMT safe. \nPerform a blocking wait on id. id should have been created with gst_clock_new_single_shot_id or gst_clock_new_periodic_id and should not have been unscheduled with a call to gst_clock_id_unschedule. \nIf the jitter argument is not NULL and this function returns GST_CLOCK_OK or GST_CLOCK_EARLY it will contain the difference against the clock and the time of id when this method was called. Positive values indicate how late id was relative to the clock in which case this function will return GST_CLOCK_EARLY Negative values indicate how much time was spent waiting on the clock before this function returned. \nParameters \nThe GstClockID to wait on \na pointer that will contain the jitter can be NULL. \nthe result of the blocking wait. GST_CLOCK_EARLY will be returned if the current clock time is past the time of id GST_CLOCK_OK if id was scheduled in time. GST_CLOCK_UNSCHEDULED if id was unscheduled with gst_clock_id_unschedule. \nMT safe. \n"});