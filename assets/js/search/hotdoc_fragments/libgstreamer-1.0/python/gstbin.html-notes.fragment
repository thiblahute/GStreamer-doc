fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstbin.html#notes", "fragment": "Notes \nGstBin \nA Gst.Bin internally intercepts every Gst.Message posted by its children and implements the following default behaviour for each of them \nGST_MESSAGE_EOS This message is only posted by sinks in the PLAYING state. If all sinks posted the EOS message this bin will post and EOS message upwards. \nGST_MESSAGE_SEGMENT_START Just collected and never forwarded upwards. The messages are used to decide when all elements have completed playback of their segment. \nGST_MESSAGE_SEGMENT_DONE Is posted by Gst.Bin when all elements that posted a SEGMENT_START have posted a SEGMENT_DONE. \nGST_MESSAGE_DURATION_CHANGED Is posted by an element that detected a change in the stream duration. The default bin behaviour is to clear any cached duration values so that the next duration query will perform a full duration recalculation. The duration change is posted to the application so that it can refetch the new duration with a duration query. Note that these messages can be posted before the bin is prerolled in which case the duration query might fail. \nGST_MESSAGE_CLOCK_LOST This message is posted by an element when it can no longer provide a clock. The default bin behaviour is to check if the lost clock was the one provided by the bin. If so and the bin is currently in the PLAYING state the message is forwarded to the bin parent. This message is also generated when a clock provider is removed from the bin. If this message is received by the application it should PAUSE the pipeline and set it back to PLAYING to force a new clock distribution. \nGST_MESSAGE_CLOCK_PROVIDE This message is generated when an element can provide a clock. This mostly happens when a new clock provider is added to the bin. The default behaviour of the bin is to mark the currently selected clock as dirty which will perform a clock recalculation the next time the bin is asked to provide a clock. This message is never sent tot the application but is forwarded to the parent of the bin. \nOTHERS posted upwards. \nA Gst.Bin implements the following default behaviour for answering to a Gst.Query \nGST_QUERY_DURATION If the query has been asked before with the same format and the bin is a toplevel bin ie. has no parent use the cached previous value. If no previous value was cached the query is sent to all sink elements in the bin and the MAXIMUM of all values is returned. If the bin is a toplevel bin the value is cached. If no sinks are available in the bin the query fails. \nGST_QUERY_POSITION The query is sent to all sink elements in the bin and the MAXIMUM of all values is returned. If no sinks are available in the bin the query fails. \nOTHERS the query is forwarded to all sink elements the result of the first sink that answers the query successfully is returned. If no sink is in the bin the query fails. \nA Gst.Bin will by default forward any event sent to it to all sink GST_EVENT_TYPE_DOWNSTREAM or source GST_EVENT_TYPE_UPSTREAM elements depending on the event type. If all the elements return True the bin will also return True else False is returned. If no elements of the required type are in the bin the event handler will return True. \n"});