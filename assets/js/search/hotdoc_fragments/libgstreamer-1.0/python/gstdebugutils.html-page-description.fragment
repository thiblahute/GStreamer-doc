fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstdebugutils.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstdebugutils.h\">\n        \n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_debug_bin_to_dot_data\">\n\t\t\n<h4 id=\"gstdebug_bin_to_dot_data\">\n\t<span><code>Gst.debug_bin_to_dot_data</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.debug_bin_to_dot_data (bin, details):\n    #python wrapper for 'gst_debug_bin_to_dot_data'</pre>\n\n<p>To aid debugging applications one can use this method to obtain the whole\nnetwork of gstreamer elements that form the pipeline into an dot file.\nThis data can be processed with graphviz to get an image.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the top-level pipeline that should be analyzed</p>\n</td>\n<td>\n<a title=\"Gst.Bin\" href=\"gstbin.html#GstBin\">Gst.Bin</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.DebugGraphDetails\" href=\"gstdebugutils.html#GstDebugGraphDetails\">Gst.DebugGraphDetails</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a string containing the pipeline in graphviz\ndot format.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_debug_bin_to_dot_file\">\n\t\t\n<h4 id=\"gstdebug_bin_to_dot_file\">\n\t<span><code>Gst.debug_bin_to_dot_file</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.debug_bin_to_dot_file (bin, details, file_name):\n    #python wrapper for 'gst_debug_bin_to_dot_file'</pre>\n\n<p>To aid debugging applications one can use this method to write out the whole\nnetwork of gstreamer elements that form the pipeline into an dot file.\nThis file can be processed with graphviz to get an image.\n<informalexample><programlisting>\ndot -Tpng -oimage.png graph_lowlevel.dot\n</programlisting></informalexample></p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the top-level pipeline that should be analyzed</p>\n</td>\n<td>\n<a title=\"Gst.Bin\" href=\"gstbin.html#GstBin\">Gst.Bin</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.DebugGraphDetails\" href=\"gstdebugutils.html#GstDebugGraphDetails\">Gst.DebugGraphDetails</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>file_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>output base filename (e.g. \"myplayer\")</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_debug_bin_to_dot_file_with_ts\">\n\t\t\n<h4 id=\"gstdebug_bin_to_dot_file_with_ts\">\n\t<span><code>Gst.debug_bin_to_dot_file_with_ts</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.debug_bin_to_dot_file_with_ts (bin, details, file_name):\n    #python wrapper for 'gst_debug_bin_to_dot_file_with_ts'</pre>\n\n<p>This works like <a href=\"gstdebugutils.html#gst_debug_bin_to_dot_file\">Gst.debug_bin_to_dot_file</a>, but adds the current timestamp\nto the filename, so that it can be used to take multiple snapshots.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters2\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the top-level pipeline that should be analyzed</p>\n</td>\n<td>\n<a title=\"Gst.Bin\" href=\"gstbin.html#GstBin\">Gst.Bin</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>details:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.DebugGraphDetails\" href=\"gstdebugutils.html#GstDebugGraphDetails\">Gst.DebugGraphDetails</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>file_name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>output base filename (e.g. \"myplayer\")</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Enumerations\">Enumerations</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstDebugGraphDetails\">\n\t\t\n<h4 id=\"enum-gstdebuggraphdetails\">\n\t\tenum Gst.DebugGraphDetails\n\t</h4>\n\n\t\t<p>Available details for pipeline graphs produced by <a href=\"../c/gstdebugutils.html#GST_DEBUG_BIN_TO_DOT_FILE\">GST_DEBUG_BIN_TO_DOT_FILE (not introspectable)</a>\nand <a href=\"../c/gstdebugutils.html#GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS\">GST_DEBUG_BIN_TO_DOT_FILE_WITH_TS (not introspectable)</a>.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_MEDIA_TYPE\"></a>\n\t\tGst.DebugGraphDetails.media_type\n\t\t</p>\n\t</td>\n\t<td><p>show caps-name on edges</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_CAPS_DETAILS\"></a>\n\t\tGst.DebugGraphDetails.caps_details\n\t\t</p>\n\t</td>\n\t<td><p>show caps-details on edges</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_NON_DEFAULT_PARAMS\"></a>\n\t\tGst.DebugGraphDetails.non_default_params\n\t\t</p>\n\t</td>\n\t<td><p>show modified parameters on\nelements</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_STATES\"></a>\n\t\tGst.DebugGraphDetails.states\n\t\t</p>\n\t</td>\n\t<td><p>show element states</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 8</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_FULL_PARAMS\"></a>\n\t\tGst.DebugGraphDetails.full_params\n\t\t</p>\n\t</td>\n\t<td><p>show full element parameter values even\nif they are very long</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 16</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_ALL\"></a>\n\t\tGst.DebugGraphDetails.all\n\t\t</p>\n\t</td>\n\t<td><p>show all the typical details that one might want</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 15</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_DEBUG_GRAPH_SHOW_VERBOSE\"></a>\n\t\tGst.DebugGraphDetails.verbose\n\t\t</p>\n\t</td>\n\t<td><p>show all details regardless of how large or\nverbose they make the resulting output</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: -1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n\n    </div>\n\n\n        "});