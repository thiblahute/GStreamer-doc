fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstpad.html#gst_pad_get_allowed_caps", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_pad_get_allowed_caps\">\n\t\t<h3 id=\"gstpadget_allowed_caps\">\n\t<span><code>Gst.Pad.get_allowed_caps</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Pad.get_allowed_caps (self):\n    #python wrapper for 'gst_pad_get_allowed_caps'</pre>\n\n<p>Gets the capabilities of the allowed media types that can flow through\n<em>pad</em> and its peer.</p>\n<p>The allowed capabilities is calculated as the intersection of the results of\ncalling <a href=\"gstpad.html#gst_pad_query_caps\">Gst.Pad.query_caps</a> on <em>pad</em> and its peer. The caller owns a reference\non the resulting caps.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters14\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pad:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstpad.html#GstPad\">Gst.Pad</a>.</p>\n</td>\n<td>\n<a title=\"Gst.Pad\" href=\"gstpad.html#GstPad\">Gst.Pad</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns14\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the allowed <a href=\"gstcaps.html#GstCaps\">Gst.Caps</a> of the\npad link. Unref the caps when you no longer need it. This\nfunction returns <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> when <em>pad</em> has no peer.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Caps\" href=\"gstcaps.html#GstCaps\">Gst.Caps</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});