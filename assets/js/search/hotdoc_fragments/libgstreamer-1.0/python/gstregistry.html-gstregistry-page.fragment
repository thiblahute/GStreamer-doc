fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstregistry.html#gstregistry-page", "fragment": "GstRegistry \nOne registry holds the metadata of a set of plugins. \nDesign \nThe Gst.Registry object is a list of plugins and some functions for dealing with them. Each Gst.Plugin is matched with a file on disk and may or may not be loaded at a given time. \nThe primary source at all times of plugin information is each plugin file itself. Thus if an application wants information about a particular plugin or wants to search for a feature that satisfies given criteria the primary means of doing so is to load every plugin and look at the resulting information that is gathered in the default registry. Clearly this is a time consuming process so we cache information in the registry file. The format and location of the cache file is internal to gstreamer. \nOn startup plugins are searched for in the plugin search path. The following locations are checked in this order \nThe registry cache file is loaded from XDG_CACHE_HOME gstreamer GST_API_VERSION registry ARCH.bin where XDG_CACHE_HOME defaults to HOME cache or the file listed in the GST_REGISTRY env var. One reason to change the registry location is for testing. \nFor each plugin that is found in the plugin search path there could be possibilities for cached information \nIn the first two cases the plugin is loaded and the cache updated. In addition to these cases the cache may have entries for plugins that are not relevant to the current process. These are marked as not available to the current process. If the cache is updated for whatever reason it is marked dirty. \nA dirty cache is written out at the end of initialization. Each entry is checked to make sure the information is minimally valid. If not the entry is simply dropped. \n"});