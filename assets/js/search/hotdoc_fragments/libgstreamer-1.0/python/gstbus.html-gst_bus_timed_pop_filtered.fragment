fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstbus.html#gst_bus_timed_pop_filtered", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_timed_pop_filtered\">\n\t\t<h3 id=\"gstbustimed_pop_filtered\">\n\t<span><code>Gst.Bus.timed_pop_filtered</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.timed_pop_filtered (self, timeout, types):\n    #python wrapper for 'gst_bus_timed_pop_filtered'</pre>\n\n<p>Get a message from the bus whose type matches the message type mask <em>types</em>,\nwaiting up to the specified timeout (and discarding any messages that do not\nmatch the mask provided).</p>\n<p>If <em>timeout</em> is 0, this function behaves like <a href=\"gstbus.html#gst_bus_pop_filtered\">Gst.Bus.pop_filtered</a>. If\n<em>timeout</em> is <a href=\"gstclock.html#GST_CLOCK_TIME_NONE\">Gst.CLOCK_TIME_NONE</a>, this function will block forever until a\nmatching message was posted on the bus.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters19\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to pop from</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timeout:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a timeout in nanoseconds, or GST_CLOCK_TIME_NONE to wait forever</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>types:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>message types to take into account, GST_MESSAGE_ANY for any type</p>\n</td>\n<td>\n<a title=\"Gst.MessageType\" href=\"gstmessage.html#GstMessageType\">Gst.MessageType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns13\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> matching the\nfilter in <em>types</em>, or <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> if no matching message was found on\nthe bus until the timeout expired. The message is taken from\nthe bus and needs to be unreffed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstMessage.html#gst-message-unref\">gst_message_unref (not introspectable)</a> after\nusage.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n"});