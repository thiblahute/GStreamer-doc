fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstevent.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstevent.h\">\n        <h1 id=\"gstevent\">GstEvent</h1><p>The event class provides factory methods to construct events for sending\nand functions to query (parse) received events.</p>\n<p>Events are usually created with gst_event_new_*() which takes event-type\nspecific parameters as arguments.\nTo send an event application will usually use <a href=\"gstelement.html#gst_element_send_event\">Gst.Element.send_event</a> and\nelements will use <a href=\"gstpad.html#gst_pad_send_event\">Gst.Pad.send_event</a> or <a href=\"gstpad.html#gst_pad_push_event\">Gst.Pad.push_event</a>.\nThe event should be unreffed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstEvent.html#gst-event-unref\">gst_event_unref (not introspectable)</a> if it has not been sent.</p>\n<p>Events that have been received can be parsed with their respective\ngst_event_parse_*() functions. It is valid to pass <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> for unwanted details.</p>\n<p>Events are passed between elements in parallel to the data stream. Some events\nare serialized with buffers, others are not. Some events only travel downstream,\nothers only upstream. Some events can travel both upstream and downstream.</p>\n<p>The events are used to signal special conditions in the datastream such as\nEOS (end of stream) or the start of a new stream-segment.\nEvents are also used to flush the pipeline of any pending data.</p>\n<p>Most of the event API is used inside plugins. Applications usually only\nconstruct and use seek events.\nTo do that <a href=\"gstevent.html#gst_event_new_seek\">Gst.Event.new_seek</a> is used to create a seek event. It takes\nthe needed parameters to specify seeking time and mode.</p>\n<pre><code class=\"language-[&lt;!--\">   GstEvent *event;\n   gboolean result;\n   ...\n   // construct a seek event to play the media from second 2 to 5, flush\n   // the pipeline to decrease latency.\n   event = gst_event_new_seek (1.0,\n      GST_FORMAT_TIME,\n      GST_SEEK_FLAG_FLUSH,\n      GST_SEEK_TYPE_SET, 2 * GST_SECOND,\n      GST_SEEK_TYPE_SET, 5 * GST_SECOND);\n   ...\n   result = gst_element_send_event (pipeline, event);\n   if (!result)\n     g_warning (\"seek failed\");\n   ...\n</code></pre>\n\n        \n\n        <h2 class=\"symbols_section\" id=\"GstEvent\" data-hotdoc-by-parent=\"true\">GstEvent</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_buffer_size\">\n\t\t\n<h4 id=\"gsteventnew_buffer_size\">\n\t<span><code>Gst.Event.new_buffer_size</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_buffer_size (format, minsize, maxsize, async):\n    #python wrapper for 'gst_event_new_buffer_size'</pre>\n\n<p>Create a new buffersize event. The event is sent downstream and notifies\nelements that they should provide a buffer of the specified dimensions.</p>\n<p>When the <em>async</em> flag is set, a thread boundary is preferred.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>format:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>buffer format</p>\n</td>\n<td>\n<a title=\"Gst.Format\" href=\"../../python/GstFormat\">Gst.Format</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>minsize:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>minimum buffer size</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>maxsize:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>maximum buffer size</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>async:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>thread behavior</p>\n</td>\n<td>\n<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_caps\">\n\t\t\n<h4 id=\"gsteventnew_caps\">\n\t<span><code>Gst.Event.new_caps</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_caps (caps):\n    #python wrapper for 'gst_event_new_caps'</pre>\n\n<p>Create a new CAPS event for <em>caps</em>. The caps event can only travel downstream\nsynchronized with the buffer flow and contains the format of the buffers\nthat will follow after the event.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>caps:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstcaps.html#GstCaps\">Gst.Caps</a></p>\n</td>\n<td>\n<a title=\"Gst.Caps\" href=\"gstcaps.html#GstCaps\">Gst.Caps</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns1\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new CAPS event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_custom\">\n\t\t\n<h4 id=\"gsteventnew_custom\">\n\t<span><code>Gst.Event.new_custom</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_custom (type, structure):\n    #python wrapper for 'gst_event_new_custom'</pre>\n\n<p>Create a new custom-typed event. This can be used for anything not\nhandled by other event-specific functions to pass an event to another\nelement.</p>\n<p>Make sure to allocate an event type with the <a href=\"../c/gstevent.html#GST_EVENT_MAKE_TYPE\">GST_EVENT_MAKE_TYPE (not introspectable)</a> macro,\nassigning a free number and filling in the correct direction and\nserialization flags.</p>\n<p>New custom events can also be created by subclassing the event type if\nneeded.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters2\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>type:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The type of the new event</p>\n</td>\n<td>\n<a title=\"Gst.EventType\" href=\"gstevent.html#GstEventType\">Gst.EventType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>structure:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the structure for the event. The event will\ntake ownership of the structure.</p>\n</td>\n<td>\n<a title=\"Gst.Structure\" href=\"gststructure.html#GstStructure\">Gst.Structure</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns2\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new custom event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_eos\">\n\t\t\n<h4 id=\"gsteventnew_eos\">\n\t<span><code>Gst.Event.new_eos</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_eos ():\n    #python wrapper for 'gst_event_new_eos'</pre>\n\n<p>Create a new EOS event. The eos event can only travel downstream\nsynchronized with the buffer flow. Elements that receive the EOS\nevent on a pad can return <a href=\"gstpad.html#GST_FLOW_EOS\">Gst.FlowReturn.eos</a> as a <a href=\"../../python/gst-plugins-bad-plugins-1.0/element-errorignore.html#GstFlowReturn\">Gst.FlowReturn</a>\nwhen data after the EOS event arrives.</p>\n<p>The EOS event will travel down to the sink elements in the pipeline\nwhich will then post the <a href=\"gstmessage.html#GST_MESSAGE_EOS\">Gst.MessageType.eos</a> on the bus after they have\nfinished playing any buffered data.</p>\n<p>When all sinks have posted an EOS message, an EOS message is\nforwarded to the application.</p>\n<p>The EOS event itself will not cause any state transitions of the pipeline.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns3\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new EOS event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_flush_start\">\n\t\t\n<h4 id=\"gsteventnew_flush_start\">\n\t<span><code>Gst.Event.new_flush_start</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_flush_start ():\n    #python wrapper for 'gst_event_new_flush_start'</pre>\n\n<p>Allocate a new flush start event. The flush start event can be sent\nupstream and downstream and travels out-of-bounds with the dataflow.</p>\n<p>It marks pads as being flushing and will make them return\n<a href=\"gstpad.html#GST_FLOW_FLUSHING\">Gst.FlowReturn.flushing</a> when used for data flow with <a href=\"gstpad.html#gst_pad_push\">Gst.Pad.push</a>,\n<a href=\"gstpad.html#gst_pad_chain\">Gst.Pad.chain</a>, <a href=\"gstpad.html#gst_pad_get_range\">Gst.Pad.get_range</a> and <a href=\"gstpad.html#gst_pad_pull_range\">Gst.Pad.pull_range</a>.\nAny event (except a <a href=\"gstevent.html#GST_EVENT_FLUSH_STOP\">Gst.EventType.flush_stop</a>) received\non a flushing pad will return <a href=\"https://docs.python.org/2/library/constants.html#False\">False</a> immediately.</p>\n<p>Elements should unlock any blocking functions and exit their streaming\nfunctions as fast as possible when this event is received.</p>\n<p>This event is typically generated after a seek to flush out all queued data\nin the pipeline so that the new media is played as soon as possible.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns4\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new flush start event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_flush_stop\">\n\t\t\n<h4 id=\"gsteventnew_flush_stop\">\n\t<span><code>Gst.Event.new_flush_stop</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_flush_stop (reset_time):\n    #python wrapper for 'gst_event_new_flush_stop'</pre>\n\n<p>Allocate a new flush stop event. The flush stop event can be sent\nupstream and downstream and travels serialized with the dataflow.\nIt is typically sent after sending a FLUSH_START event to make the\npads accept data again.</p>\n<p>Elements can process this event synchronized with the dataflow since\nthe preceding FLUSH_START event stopped the dataflow.</p>\n<p>This event is typically generated to complete a seek and to resume\ndataflow.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters3\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>reset_time:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>if time should be reset</p>\n</td>\n<td>\n<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns5\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new flush stop event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_gap\">\n\t\t\n<h4 id=\"gsteventnew_gap\">\n\t<span><code>Gst.Event.new_gap</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_gap (timestamp, duration):\n    #python wrapper for 'gst_event_new_gap'</pre>\n\n<p>Create a new GAP event. A gap event can be thought of as conceptually\nequivalent to a buffer to signal that there is no data for a certain\namount of time. This is useful to signal a gap to downstream elements\nwhich may wait for data, such as muxers or mixers or overlays, especially\nfor sparse streams such as subtitle streams.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters4\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timestamp:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the start time (pts) of the gap</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>duration:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the duration of the gap</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns6\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new GAP event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_latency\">\n\t\t\n<h4 id=\"gsteventnew_latency\">\n\t<span><code>Gst.Event.new_latency</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_latency (latency):\n    #python wrapper for 'gst_event_new_latency'</pre>\n\n<p>Create a new latency event. The event is sent upstream from the sinks and\nnotifies elements that they should add an additional <em>latency</em> to the\nrunning time before synchronising against the clock.</p>\n<p>The latency is mostly used in live sinks and is always expressed in\nthe time format.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters5\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>latency:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the new latency value</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns7\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_navigation\">\n\t\t\n<h4 id=\"gsteventnew_navigation\">\n\t<span><code>Gst.Event.new_navigation</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_navigation (structure):\n    #python wrapper for 'gst_event_new_navigation'</pre>\n\n<p>Create a new navigation event from the given description.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters6\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>structure:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>description of the event. The event will take\nownership of the structure.</p>\n</td>\n<td>\n<a title=\"Gst.Structure\" href=\"gststructure.html#GstStructure\">Gst.Structure</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns8\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_event_new_protection\">\n\t\t\n<h4 id=\"gsteventnew_protection\">\n\t<span><code>Gst.Event.new_protection</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_protection (system_id, data, origin):\n    #python wrapper for 'gst_event_new_protection'</pre>\n\n<p>Creates a new event containing information specific to a particular\nprotection system (uniquely identified by <em>system_id</em>), by which that\nprotection system can acquire key(s) to decrypt a protected stream.</p>\n<p>In order for a decryption element to decrypt media\nprotected using a specific system, it first needs all the\nprotection system specific information necessary to acquire the decryption\nkey(s) for that stream. The functions defined here enable this information\nto be passed in events from elements that extract it\n(e.g., ISOBMFF demuxers, MPEG DASH demuxers) to protection decrypter\nelements that use it.</p>\n<p>Events containing protection system specific information are created using\n<a href=\"gstevent.html#gst_event_new_protection\">Gst.Event.new_protection</a>, and they can be parsed by downstream elements\nusing <a href=\"gstevent.html#gst_event_parse_protection\">Gst.Event.parse_protection</a>.</p>\n<p>In Common Encryption, protection system specific information may be located\nwithin ISOBMFF files, both in movie (moov) boxes and movie fragment (moof)\nboxes; it may also be contained in ContentProtection elements within MPEG\nDASH MPDs. The events created by <a href=\"gstevent.html#gst_event_new_protection\">Gst.Event.new_protection</a> contain data\nidentifying from which of these locations the encapsulated protection system\nspecific information originated. This origin information is required as\nsome protection systems use different encodings depending upon where the\ninformation originates.</p>\n<p>The events returned by <a href=\"gstevent.html#gst_event_new_protection\">Gst.Event.new_protection</a> are implemented\nin such a way as to ensure that the most recently-pushed protection info\nevent of a particular <em>origin</em> and <em>system_id</em> will\nbe stuck to the output pad of the sending element.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters7\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>system_id:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a string holding a UUID that uniquely\nidentifies a protection system.</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbuffer.html#GstBuffer\">Gst.Buffer</a> holding protection system specific\ninformation. The reference count of the buffer will be incremented by one.</p>\n</td>\n<td>\n<a title=\"Gst.Buffer\" href=\"gstbuffer.html#GstBuffer\">Gst.Buffer</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>origin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a string indicating where the protection\ninformation carried in the event was extracted from. The allowed values\nof this string will depend upon the protection scheme.</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns9\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"gstevent.html#GST_EVENT_PROTECTION\">Gst.EventType.protection</a> event, if successful; <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a>\nif unsuccessful.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_qos\">\n\t\t\n<h4 id=\"gsteventnew_qos\">\n\t<span><code>Gst.Event.new_qos</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_qos (type, proportion, diff, timestamp):\n    #python wrapper for 'gst_event_new_qos'</pre>\n\n<p>Allocate a new qos event with the given values.\nThe QOS event is generated in an element that wants an upstream\nelement to either reduce or increase its rate because of\nhigh/low CPU load or other resource usage such as network performance or\nthrottling. Typically sinks generate these events for each buffer\nthey receive.</p>\n<p><em>type</em> indicates the reason for the QoS event. <a href=\"gstevent.html#GST_QOS_TYPE_OVERFLOW\">Gst.QOSType.overflow</a> is\nused when a buffer arrived in time or when the sink cannot keep up with\nthe upstream datarate. <a href=\"gstevent.html#GST_QOS_TYPE_UNDERFLOW\">Gst.QOSType.underflow</a> is when the sink is not\nreceiving buffers fast enough and thus has to drop late buffers.\n<a href=\"gstevent.html#GST_QOS_TYPE_THROTTLE\">Gst.QOSType.throttle</a> is used when the datarate is artificially limited\nby the application, for example to reduce power consumption.</p>\n<p><em>proportion</em> indicates the real-time performance of the streaming in the\nelement that generated the QoS event (usually the sink). The value is\ngenerally computed based on more long term statistics about the streams\ntimestamps compared to the clock.\nA value &lt; 1.0 indicates that the upstream element is producing data faster\nthan real-time. A value &gt; 1.0 indicates that the upstream element is not\nproducing data fast enough. 1.0 is the ideal <em>proportion</em> value. The\nproportion value can safely be used to lower or increase the quality of\nthe element.</p>\n<p><em>diff</em> is the difference against the clock in running time of the last\nbuffer that caused the element to generate the QOS event. A negative value\nmeans that the buffer with <em>timestamp</em> arrived in time. A positive value\nindicates how late the buffer with <em>timestamp</em> was. When throttling is\nenabled, <em>diff</em> will be set to the requested throttling interval.</p>\n<p><em>timestamp</em> is the timestamp of the last buffer that cause the element\nto generate the QOS event. It is expressed in running time and thus an ever\nincreasing value.</p>\n<p>The upstream element can use the <em>diff</em> and <em>timestamp</em> values to decide\nwhether to process more buffers. For positive <em>diff</em>, all buffers with\ntimestamp &lt;= <em>timestamp</em> + <em>diff</em> will certainly arrive late in the sink\nas well. A (negative) <em>diff</em> value so that <em>timestamp</em> + <em>diff</em> would yield a\nresult smaller than 0 is not allowed.</p>\n<p>The application can use general event probes to intercept the QoS\nevent and implement custom application specific QoS handling.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters8\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>type:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the QoS type</p>\n</td>\n<td>\n<a title=\"Gst.QOSType\" href=\"gstevent.html#GstQOSType\">Gst.QOSType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>proportion:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the proportion of the qos message</p>\n</td>\n<td>\n<a title=\"float\" href=\"https://docs.python.org/2/library/functions.html#float\">float</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>diff:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The time difference of the last Clock sync</p>\n</td>\n<td>\n<a title=\"Gst.ClockTimeDiff\" href=\"gstclock.html#GstClockTimeDiff\">Gst.ClockTimeDiff</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timestamp:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The timestamp of the buffer</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns10\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new QOS event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_reconfigure\">\n\t\t\n<h4 id=\"gsteventnew_reconfigure\">\n\t<span><code>Gst.Event.new_reconfigure</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_reconfigure ():\n    #python wrapper for 'gst_event_new_reconfigure'</pre>\n\n<p>Create a new reconfigure event. The purpose of the reconfigure event is\nto travel upstream and make elements renegotiate their caps or reconfigure\ntheir buffer pools. This is useful when changing properties on elements\nor changing the topology of the pipeline.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns11\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_seek\">\n\t\t\n<h4 id=\"gsteventnew_seek\">\n\t<span><code>Gst.Event.new_seek</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_seek (rate, format, flags, start_type, start, stop_type, stop):\n    #python wrapper for 'gst_event_new_seek'</pre>\n\n<p>Allocate a new seek event with the given parameters.</p>\n<p>The seek event configures playback of the pipeline between <em>start</em> to <em>stop</em>\nat the speed given in <em>rate</em>, also called a playback segment.\nThe <em>start</em> and <em>stop</em> values are expressed in <em>format</em>.</p>\n<p>A <em>rate</em> of 1.0 means normal playback rate, 2.0 means double speed.\nNegatives values means backwards playback. A value of 0.0 for the\nrate is not allowed and should be accomplished instead by PAUSING the\npipeline.</p>\n<p>A pipeline has a default playback segment configured with a start\nposition of 0, a stop position of -1 and a rate of 1.0. The currently\nconfigured playback segment can be queried with <a href=\"gstquery.html#GST_QUERY_SEGMENT\">Gst.QueryType.segment</a>.</p>\n<p><em>start_type</em> and <em>stop_type</em> specify how to adjust the currently configured\nstart and stop fields in playback segment. Adjustments can be made relative\nor absolute to the last configured values. A type of <a href=\"gstsegment.html#GST_SEEK_TYPE_NONE\">Gst.SeekType.none</a>\nmeans that the position should not be updated.</p>\n<p>When the rate is positive and <em>start</em> has been updated, playback will start\nfrom the newly configured start position.</p>\n<p>For negative rates, playback will start from the newly configured stop\nposition (if any). If the stop position is updated, it must be different from\n-1 (#GST_CLOCK_TIME_NONE) for negative rates.</p>\n<p>It is not possible to seek relative to the current playback position, to do\nthis, PAUSE the pipeline, query the current playback position with\n<a href=\"gstquery.html#GST_QUERY_POSITION\">Gst.QueryType.position</a> and update the playback segment current position with a\n<a href=\"gstsegment.html#GST_SEEK_TYPE_SET\">Gst.SeekType.set</a> to the desired position.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters9\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>rate:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The new playback rate</p>\n</td>\n<td>\n<a title=\"float\" href=\"https://docs.python.org/2/library/functions.html#float\">float</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>format:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The format of the seek values</p>\n</td>\n<td>\n<a title=\"Gst.Format\" href=\"../../python/GstFormat\">Gst.Format</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>flags:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The optional seek flags</p>\n</td>\n<td>\n<a title=\"Gst.SeekFlags\" href=\"gstsegment.html#GstSeekFlags\">Gst.SeekFlags</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>start_type:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The type and flags for the new start position</p>\n</td>\n<td>\n<a title=\"Gst.SeekType\" href=\"gstsegment.html#GstSeekType\">Gst.SeekType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>start:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The value of the new start position</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>stop_type:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The type and flags for the new stop position</p>\n</td>\n<td>\n<a title=\"Gst.SeekType\" href=\"gstsegment.html#GstSeekType\">Gst.SeekType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>stop:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The value of the new stop position</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns12\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new seek event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_segment\">\n\t\t\n<h4 id=\"gsteventnew_segment\">\n\t<span><code>Gst.Event.new_segment</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_segment (segment):\n    #python wrapper for 'gst_event_new_segment'</pre>\n\n<p>Create a new SEGMENT event for <em>segment</em>. The segment event can only travel\ndownstream synchronized with the buffer flow and contains timing information\nand playback properties for the buffers that will follow.</p>\n<p>The segment event marks the range of buffers to be processed. All\ndata not within the segment range is not to be processed. This can be\nused intelligently by plugins to apply more efficient methods of skipping\nunneeded data. The valid range is expressed with the <em>start</em> and <em>stop</em>\nvalues.</p>\n<p>The time value of the segment is used in conjunction with the start\nvalue to convert the buffer timestamps into the stream time. This is\nusually done in sinks to report the current stream_time.\n<em>time</em> represents the stream_time of a buffer carrying a timestamp of\n<em>start</em>. <em>time</em> cannot be -1.</p>\n<p><em>start</em> cannot be -1, <em>stop</em> can be -1. If there\nis a valid <em>stop</em> given, it must be greater or equal the <em>start</em>, including\nwhen the indicated playback <em>rate</em> is &lt; 0.</p>\n<p>The <em>applied_rate</em> value provides information about any rate adjustment that\nhas already been made to the timestamps and content on the buffers of the\nstream. (@rate * <em>applied_rate</em>) should always equal the rate that has been\nrequested for playback. For example, if an element has an input segment\nwith intended playback <em>rate</em> of 2.0 and applied_rate of 1.0, it can adjust\nincoming timestamps and buffer content by half and output a segment event\nwith <em>rate</em> of 1.0 and <em>applied_rate</em> of 2.0</p>\n<p>After a segment event, the buffer stream time is calculated with:</p>\n<p>time + (TIMESTAMP(buf) - start) * ABS (rate * applied_rate)</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters10\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>segment:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstsegment.html#GstSegment\">Gst.Segment</a></p>\n</td>\n<td>\n<a title=\"Gst.Segment\" href=\"gstsegment.html#GstSegment\">Gst.Segment</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns13\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new SEGMENT event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_segment_done\">\n\t\t\n<h4 id=\"gsteventnew_segment_done\">\n\t<span><code>Gst.Event.new_segment_done</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_segment_done (format, position):\n    #python wrapper for 'gst_event_new_segment_done'</pre>\n\n<p>Create a new segment-done event. This event is sent by elements that\nfinish playback of a segment as a result of a segment seek.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters11\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>format:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The format of the position being done</p>\n</td>\n<td>\n<a title=\"Gst.Format\" href=\"../../python/GstFormat\">Gst.Format</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>position:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The position of the segment being done</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns14\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_event_new_select_streams\">\n\t\t\n<h4 id=\"gsteventnew_select_streams\">\n\t<span><code>Gst.Event.new_select_streams</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_select_streams (streams):\n    #python wrapper for 'gst_event_new_select_streams'</pre>\n\n<p>Allocate a new select-streams event.</p>\n<p>The select-streams event requests the specified <em>streams</em> to be activated.</p>\n<p>The list of <em>streams</em> corresponds to the \"Stream ID\" of each stream to be\nactivated. Those ID can be obtained via the <a href=\"gststreams.html#GstStream\">Gst.Stream</a> objects present\nin <a href=\"gstevent.html#GST_EVENT_STREAM_START\">Gst.EventType.stream_start</a>, <a href=\"gstevent.html#GST_EVENT_STREAM_COLLECTION\">Gst.EventType.stream_collection</a> or\nGST_MESSSAGE_STREAM_COLLECTION.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters12\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>streams:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the list of streams to\nactivate</p>\n</td>\n<td>\n<a title=\"GLib.List\" href=\"https://developer.gnome.org/glib/unstable/glib-Doubly-Linked-Lists.html#GList\">GLib.List</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns15\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new select-streams event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_sink_message\">\n\t\t\n<h4 id=\"gsteventnew_sink_message\">\n\t<span><code>Gst.Event.new_sink_message</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_sink_message (name, msg):\n    #python wrapper for 'gst_event_new_sink_message'</pre>\n\n<p>Create a new sink-message event. The purpose of the sink-message event is\nto instruct a sink to post the message contained in the event synchronized\nwith the stream.</p>\n<p><em>name</em> is used to store multiple sticky events on one pad.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters13\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a name for the event</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>msg:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> to be posted</p>\n</td>\n<td>\n<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns16\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_step\">\n\t\t\n<h4 id=\"gsteventnew_step\">\n\t<span><code>Gst.Event.new_step</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_step (format, amount, rate, flush, intermediate):\n    #python wrapper for 'gst_event_new_step'</pre>\n\n<p>Create a new step event. The purpose of the step event is to instruct a sink\nto skip <em>amount</em> (expressed in <em>format</em>) of media. It can be used to implement\nstepping through the video frame by frame or for doing fast trick modes.</p>\n<p>A rate of &lt;= 0.0 is not allowed. Pause the pipeline, for the effect of rate\n= 0.0 or first reverse the direction of playback using a seek event to get\nthe same effect as rate &lt; 0.0.</p>\n<p>The <em>flush</em> flag will clear any pending data in the pipeline before starting\nthe step operation.</p>\n<p>The <em>intermediate</em> flag instructs the pipeline that this step operation is\npart of a larger step operation.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters14\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>format:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the format of <em>amount</em></p>\n</td>\n<td>\n<a title=\"Gst.Format\" href=\"../../python/GstFormat\">Gst.Format</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>amount:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the amount of data to step</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>rate:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the step rate</p>\n</td>\n<td>\n<a title=\"float\" href=\"https://docs.python.org/2/library/functions.html#float\">float</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>flush:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>flushing steps</p>\n</td>\n<td>\n<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>intermediate:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>intermediate steps</p>\n</td>\n<td>\n<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns17\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_event_new_stream_collection\">\n\t\t\n<h4 id=\"gsteventnew_stream_collection\">\n\t<span><code>Gst.Event.new_stream_collection</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_stream_collection (collection):\n    #python wrapper for 'gst_event_new_stream_collection'</pre>\n\n<p>Create a new STREAM_COLLECTION event. The stream collection event can only\ntravel downstream synchronized with the buffer flow.</p>\n<p>Source elements, demuxers and other elements that manage collections\nof streams and post <a href=\"gststreamcollection.html#GstStreamCollection\">Gst.StreamCollection</a> messages on the bus also send\nthis event downstream on each pad involved in the collection, so that\nactivation of a new collection can be tracked through the downstream\ndata flow.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters15\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>collection:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Active collection for this data flow</p>\n</td>\n<td>\n<a title=\"Gst.StreamCollection\" href=\"gststreamcollection.html#GstStreamCollection\">Gst.StreamCollection</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns18\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new STREAM_COLLECTION event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_event_new_stream_group_done\">\n\t\t\n<h4 id=\"gsteventnew_stream_group_done\">\n\t<span><code>Gst.Event.new_stream_group_done</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_stream_group_done (group_id):\n    #python wrapper for 'gst_event_new_stream_group_done'</pre>\n\n<p>Create a new Stream Group Done event. The stream-group-done event can\nonly travel downstream synchronized with the buffer flow. Elements\nthat receive the event on a pad should handle it mostly like EOS,\nand emit any data or pending buffers that would depend on more data\narriving and unblock, since there won't be any more data.</p>\n<p>This event is followed by EOS at some point in the future, and is\ngenerally used when switching pads - to unblock downstream so that\nnew pads can be exposed before sending EOS on the existing pads.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters16\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>group_id:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the group id of the stream group which is ending</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns19\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new stream-group-done event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_stream_start\">\n\t\t\n<h4 id=\"gsteventnew_stream_start\">\n\t<span><code>Gst.Event.new_stream_start</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_stream_start (stream_id):\n    #python wrapper for 'gst_event_new_stream_start'</pre>\n\n<p>Create a new STREAM_START event. The stream start event can only\ntravel downstream synchronized with the buffer flow. It is expected\nto be the first event that is sent for a new stream.</p>\n<p>Source elements, demuxers and other elements that create new streams\nare supposed to send this event as the first event of a new stream. It\nshould not be sent after a flushing seek or in similar situations\nand is used to mark the beginning of a new logical stream. Elements\ncombining multiple streams must ensure that this event is only forwarded\ndownstream once and not for every single input stream.</p>\n<p>The <em>stream_id</em> should be a unique string that consists of the upstream\nstream-id, / as separator and a unique stream-id for this specific\nstream. A new stream-id should only be created for a stream if the upstream\nstream is split into (potentially) multiple new streams, e.g. in a demuxer,\nbut not for every single element in the pipeline.\n<a href=\"gstpad.html#gst_pad_create_stream_id\">Gst.Pad.create_stream_id</a> or <a href=\"../c/gstpad.html#gst_pad_create_stream_id_printf\">gst_pad_create_stream_id_printf (not introspectable)</a> can be\nused to create a stream-id.  There are no particular semantics for the\nstream-id, though it should be deterministic (to support stream matching)\nand it might be used to order streams (besides any information conveyed by\nstream flags).</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters17\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>stream_id:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>Identifier for this stream</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns20\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the new STREAM_START event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_tag\">\n\t\t\n<h4 id=\"gsteventnew_tag\">\n\t<span><code>Gst.Event.new_tag</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_tag (taglist):\n    #python wrapper for 'gst_event_new_tag'</pre>\n\n<p>Generates a metadata tag event from the given <em>taglist</em>.</p>\n<p>The scope of the taglist specifies if the taglist applies to the\ncomplete medium or only to this specific stream. As the tag event\nis a sticky event, elements should merge tags received from\nupstream with a given scope with their own tags with the same\nscope and create a new tag event from it.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters18\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>taglist:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>metadata list. The event will take ownership\nof the taglist.</p>\n</td>\n<td>\n<a title=\"Gst.TagList\" href=\"gsttaglist.html#GstTagList\">Gst.TagList</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns21\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_toc\">\n\t\t\n<h4 id=\"gsteventnew_toc\">\n\t<span><code>Gst.Event.new_toc</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_toc (toc, updated):\n    #python wrapper for 'gst_event_new_toc'</pre>\n\n<p>Generate a TOC event from the given <em>toc</em>. The purpose of the TOC event is to\ninform elements that some kind of the TOC was found.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters19\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>toc:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p><a href=\"gsttoc.html#GstToc\">Gst.Toc</a> structure.</p>\n</td>\n<td>\n<a title=\"Gst.Toc\" href=\"gsttoc.html#GstToc\">Gst.Toc</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>updated:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>whether <em>toc</em> was updated or not.</p>\n</td>\n<td>\n<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns22\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_toc_select\">\n\t\t\n<h4 id=\"gsteventnew_toc_select\">\n\t<span><code>Gst.Event.new_toc_select</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.new_toc_select (uid):\n    #python wrapper for 'gst_event_new_toc_select'</pre>\n\n<p>Generate a TOC select event with the given <em>uid</em>. The purpose of the\nTOC select event is to start playback based on the TOC's entry with the\ngiven <em>uid</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters20\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>uid:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>UID in the TOC to start playback from.</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns23\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_copy_segment\">\n\t\t\n<h4 id=\"gsteventcopy_segment\">\n\t<span><code>Gst.Event.copy_segment</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.copy_segment (self, segment):\n    #python wrapper for 'gst_event_copy_segment'</pre>\n\n<p>Parses a segment <em>event</em> and copies the <a href=\"gstsegment.html#GstSegment\">Gst.Segment</a> into the location\ngiven by <em>segment</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters21\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to parse</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>segment:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a pointer to a <a href=\"gstsegment.html#GstSegment\">Gst.Segment</a></p>\n</td>\n<td>\n<a title=\"Gst.Segment\" href=\"gstsegment.html#GstSegment\">Gst.Segment</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"gst_event_get_running_time_offset\">\n\t\t\n<h4 id=\"gsteventget_running_time_offset\">\n\t<span><code>Gst.Event.get_running_time_offset</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.get_running_time_offset (self):\n    #python wrapper for 'gst_event_get_running_time_offset'</pre>\n\n<p>Retrieve the accumulated running time offset of the event.</p>\n<p>Events passing through <a href=\"gstpad.html#GstPad\">Gst.Pad</a> that have a running time\noffset set via <a href=\"gstpad.html#gst_pad_set_offset\">Gst.Pad.set_offset</a> will get their offset\nadjusted according to the pad's offset.</p>\n<p>If the event contains any information that related to the\nrunning time, this information will need to be updated\nbefore usage with this offset.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters22\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns24\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>The event's running time offset</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.4\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_get_seqnum\">\n\t\t\n<h4 id=\"gsteventget_seqnum\">\n\t<span><code>Gst.Event.get_seqnum</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.get_seqnum (self):\n    #python wrapper for 'gst_event_get_seqnum'</pre>\n\n<p>Retrieve the sequence number of a event.</p>\n<p>Events have ever-incrementing sequence numbers, which may also be set\nexplicitly via <a href=\"gstevent.html#gst_event_set_seqnum\">Gst.Event.set_seqnum</a>. Sequence numbers are typically used to\nindicate that a event corresponds to some other set of events or messages,\nfor example an EOS event corresponding to a SEEK event. It is considered good\npractice to make this correspondence when possible, though it is not\nrequired.</p>\n<p>Note that events and messages share the same sequence number incrementor;\ntwo events or messages will never have the same sequence number unless\nthat correspondence was made explicitly.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters23\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns25\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>The event's sequence number.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_get_structure\">\n\t\t\n<h4 id=\"gsteventget_structure\">\n\t<span><code>Gst.Event.get_structure</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.get_structure (self):\n    #python wrapper for 'gst_event_get_structure'</pre>\n\n<p>Access the structure of the event.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters24\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns26\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>The structure of the event. The structure is still\nowned by the event, which means that you should not free it and\nthat the pointer becomes invalid when you free the event.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Structure\" href=\"gststructure.html#GstStructure\">Gst.Structure</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_has_name\">\n\t\t\n<h4 id=\"gsteventhas_name\">\n\t<span><code>Gst.Event.has_name</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.has_name (self, name):\n    #python wrapper for 'gst_event_has_name'</pre>\n\n<p>Checks if <em>event</em> has the given <em>name</em>. This function is usually used to\ncheck the name of a custom event.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters25\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>name:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>name to check</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns27\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a> if <em>name</em> matches the name of the event structure.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_buffer_size\">\n\t\t\n<h4 id=\"gsteventparse_buffer_size\">\n\t<span><code>Gst.Event.parse_buffer_size</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_buffer_size (self):\n    #python wrapper for 'gst_event_parse_buffer_size'</pre>\n\n<p>Get the format, minsize, maxsize and async-flag in the buffersize event.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters26\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to query</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns-a-tuple-made-of\">Returns a tuple made of</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>format:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Format\" href=\"../../python/GstFormat\">Gst.Format</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>minsize:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>maxsize:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>async:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_caps\">\n\t\t\n<h4 id=\"gsteventparse_caps\">\n\t<span><code>Gst.Event.parse_caps</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_caps (self):\n    #python wrapper for 'gst_event_parse_caps'</pre>\n\n<p>Get the caps from <em>event</em>. The caps remains valid as long as <em>event</em> remains\nvalid.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters27\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to parse</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns28\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>caps:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Caps\" href=\"gstcaps.html#GstCaps\">Gst.Caps</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_flush_stop\">\n\t\t\n<h4 id=\"gsteventparse_flush_stop\">\n\t<span><code>Gst.Event.parse_flush_stop</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_flush_stop (self):\n    #python wrapper for 'gst_event_parse_flush_stop'</pre>\n\n<p>Parse the FLUSH_STOP event and retrieve the <em>reset_time</em> member.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters28\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to parse</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns29\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>reset_time:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_gap\">\n\t\t\n<h4 id=\"gsteventparse_gap\">\n\t<span><code>Gst.Event.parse_gap</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_gap (self):\n    #python wrapper for 'gst_event_parse_gap'</pre>\n\n<p>Extract timestamp and duration from a new GAP event.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters29\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstevent.html#GstEvent\">Gst.Event</a> of type <a href=\"gstevent.html#GST_EVENT_GAP\">Gst.EventType.gap</a></p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns-a-tuple-made-of1\">Returns a tuple made of</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>timestamp:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>duration:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"gst_event_parse_group_id\">\n\t\t\n<h4 id=\"gsteventparse_group_id\">\n\t<span><code>Gst.Event.parse_group_id</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_group_id (self):\n    #python wrapper for 'gst_event_parse_group_id'</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters30\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a stream-start event</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns-a-tuple-made-of2\">Returns a tuple made of</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a> if a group id was set on the event and could be parsed,\n<a href=\"https://docs.python.org/2/library/constants.html#False\">False</a> otherwise.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>group_id:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a> if a group id was set on the event and could be parsed,\n<a href=\"https://docs.python.org/2/library/constants.html#False\">False</a> otherwise.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.2\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_latency\">\n\t\t\n<h4 id=\"gsteventparse_latency\">\n\t<span><code>Gst.Event.parse_latency</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_latency (self):\n    #python wrapper for 'gst_event_parse_latency'</pre>\n\n<p>Get the latency in the latency event.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters31\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to query</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns30\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>latency:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_event_parse_protection\">\n\t\t\n<h4 id=\"gsteventparse_protection\">\n\t<span><code>Gst.Event.parse_protection</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_protection (self, origin):\n    #python wrapper for 'gst_event_parse_protection'</pre>\n\n<p>Parses an event containing protection system specific information and stores\nthe results in <em>system_id</em>, <em>data</em> and <em>origin</em>. The data stored in <em>system_id</em>,\n<em>origin</em> and <em>data</em> are valid until <em>event</em> is released.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters32\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstevent.html#GST_EVENT_PROTECTION\">Gst.EventType.protection</a> event.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>origin:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>pointer to store a value that\nindicates where the protection information carried by <em>event</em> was extracted\nfrom.</p>\n</td>\n<td>\n<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns-a-tuple-made-of3\">Returns a tuple made of</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>system_id:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>data:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Buffer\" href=\"gstbuffer.html#GstBuffer\">Gst.Buffer</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_qos\">\n\t\t\n<h4 id=\"gsteventparse_qos\">\n\t<span><code>Gst.Event.parse_qos</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_qos (self):\n    #python wrapper for 'gst_event_parse_qos'</pre>\n\n<p>Get the type, proportion, diff and timestamp in the qos event. See\n<a href=\"gstevent.html#gst_event_new_qos\">Gst.Event.new_qos</a> for more information about the different QoS values.</p>\n<p><em>timestamp</em> will be adjusted for any pad offsets of pads it was passing through.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters33\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to query</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns-a-tuple-made-of4\">Returns a tuple made of</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>type:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.QOSType\" href=\"gstevent.html#GstQOSType\">Gst.QOSType</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>proportion:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"float\" href=\"https://docs.python.org/2/library/functions.html#float\">float</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>diff:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.ClockTimeDiff\" href=\"gstclock.html#GstClockTimeDiff\">Gst.ClockTimeDiff</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>timestamp:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_seek\">\n\t\t\n<h4 id=\"gsteventparse_seek\">\n\t<span><code>Gst.Event.parse_seek</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_seek (self):\n    #python wrapper for 'gst_event_parse_seek'</pre>\n\n<p>Parses a seek <em>event</em> and stores the results in the given result locations.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters34\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a seek event</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns-a-tuple-made-of5\">Returns a tuple made of</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>rate:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"float\" href=\"https://docs.python.org/2/library/functions.html#float\">float</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>format:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Format\" href=\"../../python/GstFormat\">Gst.Format</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>flags:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.SeekFlags\" href=\"gstsegment.html#GstSeekFlags\">Gst.SeekFlags</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>start_type:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.SeekType\" href=\"gstsegment.html#GstSeekType\">Gst.SeekType</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>start:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>stop_type:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.SeekType\" href=\"gstsegment.html#GstSeekType\">Gst.SeekType</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>stop:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_segment\">\n\t\t\n<h4 id=\"gsteventparse_segment\">\n\t<span><code>Gst.Event.parse_segment</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_segment (self):\n    #python wrapper for 'gst_event_parse_segment'</pre>\n\n<p>Parses a segment <em>event</em> and stores the result in the given <em>segment</em> location.\n<em>segment</em> remains valid only until the <em>event</em> is freed. Don't modify the segment\nand make a copy if you want to modify it or store it for later use.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters35\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to parse</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns31\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>segment:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Segment\" href=\"gstsegment.html#GstSegment\">Gst.Segment</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_segment_done\">\n\t\t\n<h4 id=\"gsteventparse_segment_done\">\n\t<span><code>Gst.Event.parse_segment_done</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_segment_done (self):\n    #python wrapper for 'gst_event_parse_segment_done'</pre>\n\n<p>Extracts the position and format from the segment done message.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters36\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A valid <a href=\"gstevent.html#GstEvent\">Gst.Event</a> of type GST_EVENT_SEGMENT_DONE.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns-a-tuple-made-of6\">Returns a tuple made of</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>format:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Format\" href=\"../../python/GstFormat\">Gst.Format</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>position:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_event_parse_select_streams\">\n\t\t\n<h4 id=\"gsteventparse_select_streams\">\n\t<span><code>Gst.Event.parse_select_streams</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_select_streams (self):\n    #python wrapper for 'gst_event_parse_select_streams'</pre>\n\n<p>Parse the SELECT_STREAMS event and retrieve the contained streams.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters37\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to parse</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns32\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>streams:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"GLib.List\" href=\"https://developer.gnome.org/glib/unstable/glib-Doubly-Linked-Lists.html#GList\">GLib.List</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_sink_message\">\n\t\t\n<h4 id=\"gsteventparse_sink_message\">\n\t<span><code>Gst.Event.parse_sink_message</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_sink_message (self):\n    #python wrapper for 'gst_event_parse_sink_message'</pre>\n\n<p>Parse the sink-message event. Unref <em>msg</em> after usage.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters38\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to query</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns33\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>msg:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_step\">\n\t\t\n<h4 id=\"gsteventparse_step\">\n\t<span><code>Gst.Event.parse_step</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_step (self):\n    #python wrapper for 'gst_event_parse_step'</pre>\n\n<p>Parse the step event.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters39\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The event to query</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns-a-tuple-made-of7\">Returns a tuple made of</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>format:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Format\" href=\"../../python/GstFormat\">Gst.Format</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>amount:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>rate:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"float\" href=\"https://docs.python.org/2/library/functions.html#float\">float</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>flush:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>intermediate:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_event_parse_stream\">\n\t\t\n<h4 id=\"gsteventparse_stream\">\n\t<span><code>Gst.Event.parse_stream</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_stream (self):\n    #python wrapper for 'gst_event_parse_stream'</pre>\n\n<p>Parse a stream-start <em>event</em> and extract the <a href=\"gststreams.html#GstStream\">Gst.Stream</a> from it.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters40\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a stream-start event</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns34\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>stream:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Stream\" href=\"gststreams.html#GstStream\">Gst.Stream</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_event_parse_stream_collection\">\n\t\t\n<h4 id=\"gsteventparse_stream_collection\">\n\t<span><code>Gst.Event.parse_stream_collection</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_stream_collection (self):\n    #python wrapper for 'gst_event_parse_stream_collection'</pre>\n\n<p>Retrieve new <a href=\"gststreamcollection.html#GstStreamCollection\">Gst.StreamCollection</a> from STREAM_COLLECTION event <em>event</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters41\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a stream-collection event</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns35\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>collection:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.StreamCollection\" href=\"gststreamcollection.html#GstStreamCollection\">Gst.StreamCollection</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"gst_event_parse_stream_flags\">\n\t\t\n<h4 id=\"gsteventparse_stream_flags\">\n\t<span><code>Gst.Event.parse_stream_flags</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_stream_flags (self):\n    #python wrapper for 'gst_event_parse_stream_flags'</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters42\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a stream-start event</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns36\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>flags:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.StreamFlags\" href=\"gstevent.html#GstStreamFlags\">Gst.StreamFlags</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.2\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_event_parse_stream_group_done\">\n\t\t\n<h4 id=\"gsteventparse_stream_group_done\">\n\t<span><code>Gst.Event.parse_stream_group_done</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_stream_group_done (self):\n    #python wrapper for 'gst_event_parse_stream_group_done'</pre>\n\n<p>Parse a stream-group-done <em>event</em> and store the result in the given\n<em>group_id</em> location.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters43\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a stream-group-done event.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns37\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>group_id:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_stream_start\">\n\t\t\n<h4 id=\"gsteventparse_stream_start\">\n\t<span><code>Gst.Event.parse_stream_start</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_stream_start (self):\n    #python wrapper for 'gst_event_parse_stream_start'</pre>\n\n<p>Parse a stream-id <em>event</em> and store the result in the given <em>stream_id</em>\nlocation. The string stored in <em>stream_id</em> must not be modified and will\nremain valid only until <em>event</em> gets freed. Make a copy if you want to\nmodify it or store it for later use.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters44\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a stream-start event.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns38\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>stream_id:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_tag\">\n\t\t\n<h4 id=\"gsteventparse_tag\">\n\t<span><code>Gst.Event.parse_tag</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_tag (self):\n    #python wrapper for 'gst_event_parse_tag'</pre>\n\n<p>Parses a tag <em>event</em> and stores the results in the given <em>taglist</em> location.\nNo reference to the taglist will be returned, it remains valid only until\nthe <em>event</em> is freed. Don't modify or free the taglist, make a copy if you\nwant to modify it or store it for later use.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters45\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a tag event</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns39\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>taglist:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.TagList\" href=\"gsttaglist.html#GstTagList\">Gst.TagList</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_toc\">\n\t\t\n<h4 id=\"gsteventparse_toc\">\n\t<span><code>Gst.Event.parse_toc</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_toc (self):\n    #python wrapper for 'gst_event_parse_toc'</pre>\n\n<p>Parse a TOC <em>event</em> and store the results in the given <em>toc</em> and <em>updated</em> locations.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters46\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a TOC event.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns-a-tuple-made-of8\">Returns a tuple made of</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>toc:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Toc\" href=\"gsttoc.html#GstToc\">Gst.Toc</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>updated:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_parse_toc_select\">\n\t\t\n<h4 id=\"gsteventparse_toc_select\">\n\t<span><code>Gst.Event.parse_toc_select</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.parse_toc_select (self):\n    #python wrapper for 'gst_event_parse_toc_select'</pre>\n\n<p>Parse a TOC select <em>event</em> and store the results in the given <em>uid</em> location.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters47\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a TOC select event.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns40\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t<i>uid:</i>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"gst_event_set_group_id\">\n\t\t\n<h4 id=\"gsteventset_group_id\">\n\t<span><code>Gst.Event.set_group_id</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.set_group_id (self, group_id):\n    #python wrapper for 'gst_event_set_group_id'</pre>\n\n<p>All streams that have the same group id are supposed to be played\ntogether, i.e. all streams inside a container file should have the\nsame group id but different stream ids. The group id should change\neach time the stream is started, resulting in different group ids\neach time a file is played for example.</p>\n<p>Use <a href=\"gstutils.html#gst_util_group_id_next\">Gst.util_group_id_next</a> to get a new group id.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters48\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a stream-start event</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>group_id:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the group id to set</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.2\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.4;\" id=\"gst_event_set_running_time_offset\">\n\t\t\n<h4 id=\"gsteventset_running_time_offset\">\n\t<span><code>Gst.Event.set_running_time_offset</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.set_running_time_offset (self, offset):\n    #python wrapper for 'gst_event_set_running_time_offset'</pre>\n\n<p>Set the running time offset of a event. See\n<a href=\"gstevent.html#gst_event_get_running_time_offset\">Gst.Event.get_running_time_offset</a> for more information.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters49\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>offset:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A the new running time offset</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.4\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_set_seqnum\">\n\t\t\n<h4 id=\"gsteventset_seqnum\">\n\t<span><code>Gst.Event.set_seqnum</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.set_seqnum (self, seqnum):\n    #python wrapper for 'gst_event_set_seqnum'</pre>\n\n<p>Set the sequence number of a event.</p>\n<p>This function might be called by the creator of a event to indicate that the\nevent relates to other events or messages. See <a href=\"gstevent.html#gst_event_get_seqnum\">Gst.Event.get_seqnum</a> for\nmore information.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters50\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>seqnum:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A sequence number.</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.10;\" id=\"gst_event_set_stream\">\n\t\t\n<h4 id=\"gsteventset_stream\">\n\t<span><code>Gst.Event.set_stream</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.set_stream (self, stream):\n    #python wrapper for 'gst_event_set_stream'</pre>\n\n<p>Set the <em>stream</em> on the stream-start <em>event</em></p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters51\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a stream-start event</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>stream:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the stream object to set</p>\n</td>\n<td>\n<a title=\"Gst.Stream\" href=\"gststreams.html#GstStream\">Gst.Stream</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.10\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"gst_event_set_stream_flags\">\n\t\t\n<h4 id=\"gsteventset_stream_flags\">\n\t<span><code>Gst.Event.set_stream_flags</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.set_stream_flags (self, flags):\n    #python wrapper for 'gst_event_set_stream_flags'</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters52\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a stream-start event</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>flags:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the stream flags to set</p>\n</td>\n<td>\n<a title=\"Gst.StreamFlags\" href=\"gstevent.html#GstStreamFlags\">Gst.StreamFlags</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.2\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_writable_structure\">\n\t\t\n<h4 id=\"gsteventwritable_structure\">\n\t<span><code>Gst.Event.writable_structure</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Event.writable_structure (self):\n    #python wrapper for 'gst_event_writable_structure'</pre>\n\n<p>Get a writable version of the structure.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters53\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>event:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n</td>\n<td>\n<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns41\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>The structure of the event. The structure\nis still owned by the event, which means that you should not free\nit and that the pointer becomes invalid when you free the event.\nThis function checks if <em>event</em> is writable and will never return\n<a href=\"https://docs.python.org/2/library/constants.html#None\">None</a>.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Structure\" href=\"gststructure.html#GstStructure\">Gst.Structure</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_type_get_flags\">\n\t\t\n<h4 id=\"gstevent_type_get_flags\">\n\t<span><code>Gst.event_type_get_flags</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.event_type_get_flags (type):\n    #python wrapper for 'gst_event_type_get_flags'</pre>\n\n<p>Gets the <a href=\"gstevent.html#GstEventTypeFlags\">Gst.EventTypeFlags</a> associated with <em>type</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters54\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>type:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstevent.html#GstEventType\">Gst.EventType</a></p>\n</td>\n<td>\n<a title=\"Gst.EventType\" href=\"gstevent.html#GstEventType\">Gst.EventType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns42\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"gstevent.html#GstEventTypeFlags\">Gst.EventTypeFlags</a>.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.EventTypeFlags\" href=\"gstevent.html#GstEventTypeFlags\">Gst.EventTypeFlags</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_type_get_name\">\n\t\t\n<h4 id=\"gstevent_type_get_name\">\n\t<span><code>Gst.event_type_get_name</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.event_type_get_name (type):\n    #python wrapper for 'gst_event_type_get_name'</pre>\n\n<p>Get a printable name for the given event type. Do not modify or free.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters55\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>type:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the event type</p>\n</td>\n<td>\n<a title=\"Gst.EventType\" href=\"gstevent.html#GstEventType\">Gst.EventType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns43\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a reference to the static name of the event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"unicode\" href=\"https://docs.python.org/2/library/functions.html#unicode\">unicode</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_type_to_quark\">\n\t\t\n<h4 id=\"gstevent_type_to_quark\">\n\t<span><code>Gst.event_type_to_quark</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.event_type_to_quark (type):\n    #python wrapper for 'gst_event_type_to_quark'</pre>\n\n<p>Get the unique quark for the given event type.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters56\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>type:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the event type</p>\n</td>\n<td>\n<a title=\"Gst.EventType\" href=\"gstevent.html#GstEventType\">Gst.EventType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns44\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the quark associated with the event type</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GLib.Quark\" href=\"https://developer.gnome.org/glib/unstable/glib-Quarks.html#GQuark\">GLib.Quark</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Structures\">Structures</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstEvent\">\n\t\t<h3 id=\"gstevent1\">\n\tGst.Event\n</h3>\n\n\t\t<p>A <a href=\"gstevent.html#GstEvent\">Gst.Event</a>.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"attributes\">Attributes</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstEvent.mini_object\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstMiniObject\" href=\"gstminiobject.html#GstMiniObject\">GstMiniObject</a> <em><code>mini_object</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the parent structure</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstEvent.type\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstEventType\" href=\"gstevent.html#GstEventType\">GstEventType</a> <em><code>type</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"gstevent.html#GstEventType\">GstEventType</a> of the event</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstEvent.timestamp\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"guint64\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint64\">guint64</a> <em><code>timestamp</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the timestamp of the event</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstEvent.seqnum\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"guint32\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#guint32\">guint32</a> <em><code>seqnum</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the sequence number of the event</p>\n</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Enumerations\">Enumerations</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstEventType\">\n\t\t\n<h4 id=\"enum-gsteventtype\">\n\t\tenum Gst.EventType\n\t</h4>\n\n\t\t<p><a href=\"gstevent.html#GstEventType\">Gst.EventType</a> lists the standard event types that can be sent in a pipeline.</p>\n<p>The custom event types can be used for private messages between elements\nthat can't be expressed using normal\nGStreamer buffer passing semantics. Custom events carry an arbitrary\n<a href=\"gststructure.html#GstStructure\">Gst.Structure</a>.\nSpecific custom events are distinguished by the name of the structure.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_UNKNOWN\"></a>\n\t\tGst.EventType.unknown\n\t\t</p>\n\t</td>\n\t<td><p>unknown event.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_FLUSH_START\"></a>\n\t\tGst.EventType.flush_start\n\t\t</p>\n\t</td>\n\t<td><p>Start a flush operation. This event clears all data\nfrom the pipeline and unblock all streaming threads.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2563</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_FLUSH_STOP\"></a>\n\t\tGst.EventType.flush_stop\n\t\t</p>\n\t</td>\n\t<td><p>Stop a flush operation. This event resets the\nrunning-time of the pipeline.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 5127</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_STREAM_START\"></a>\n\t\tGst.EventType.stream_start\n\t\t</p>\n\t</td>\n\t<td><p>Event to mark the start of a new stream. Sent before any\nother serialized event and only sent at the start of a new stream,\nnot after flushing seeks.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 10254</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CAPS\"></a>\n\t\tGst.EventType.caps\n\t\t</p>\n\t</td>\n\t<td><p><a href=\"gstcaps.html#GstCaps\">Gst.Caps</a> event. Notify the pad of a new media type.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 12814</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SEGMENT\"></a>\n\t\tGst.EventType.segment\n\t\t</p>\n\t</td>\n\t<td><p>A new media segment follows in the dataflow. The\nsegment events contains information for clipping buffers and\nconverting buffer timestamps to running-time and\nstream-time.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 17934</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_STREAM_COLLECTION\"></a>\n\t\tGst.EventType.stream_collection\n\t\t</p>\n\t</td>\n\t<td><p>A new <a href=\"gststreamcollection.html#GstStreamCollection\">Gst.StreamCollection</a> is available (Since 1.10)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 19230</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TAG\"></a>\n\t\tGst.EventType.tag\n\t\t</p>\n\t</td>\n\t<td><p>A new set of metadata tags has been found in the stream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 20510</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_BUFFERSIZE\"></a>\n\t\tGst.EventType.buffersize\n\t\t</p>\n\t</td>\n\t<td><p>Notification of buffering requirements. Currently not\nused yet.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 23054</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SINK_MESSAGE\"></a>\n\t\tGst.EventType.sink_message\n\t\t</p>\n\t</td>\n\t<td><p>An event that sinks turn into a message. Used to\nsend messages that should be emitted in sync with\nrendering.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 25630</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_STREAM_GROUP_DONE\"></a>\n\t\tGst.EventType.stream_group_done\n\t\t</p>\n\t</td>\n\t<td><p>Indicates that there is no more data for\nthe stream group ID in the message. Sent before EOS\nin some instances and should be handled mostly the same. (Since 1.10)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 26894</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_EOS\"></a>\n\t\tGst.EventType.eos\n\t\t</p>\n\t</td>\n\t<td><p>End-Of-Stream. No more data is to be expected to follow\nwithout either a STREAM_START event, or a FLUSH_STOP and a SEGMENT\nevent.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 28174</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TOC\"></a>\n\t\tGst.EventType.toc\n\t\t</p>\n\t</td>\n\t<td><p>An event which indicates that a new table of contents (TOC)\nwas found or updated.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 30750</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_PROTECTION\"></a>\n\t\tGst.EventType.protection\n\t\t</p>\n\t</td>\n\t<td><p>An event which indicates that new or updated\nencryption information has been found in the stream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 33310</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SEGMENT_DONE\"></a>\n\t\tGst.EventType.segment_done\n\t\t</p>\n\t</td>\n\t<td><p>Marks the end of a segment playback.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 38406</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_GAP\"></a>\n\t\tGst.EventType.gap\n\t\t</p>\n\t</td>\n\t<td><p>Marks a gap in the datastream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 40966</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_QOS\"></a>\n\t\tGst.EventType.qos\n\t\t</p>\n\t</td>\n\t<td><p>A quality message. Used to indicate to upstream elements\nthat the downstream elements should adjust their processing\nrate.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 48641</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SEEK\"></a>\n\t\tGst.EventType.seek\n\t\t</p>\n\t</td>\n\t<td><p>A request for a new playback position and rate.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 51201</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_NAVIGATION\"></a>\n\t\tGst.EventType.navigation\n\t\t</p>\n\t</td>\n\t<td><p>Navigation events are usually used for communicating\nuser requests, such as mouse or keyboard movements,\nto upstream elements.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 53761</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_LATENCY\"></a>\n\t\tGst.EventType.latency\n\t\t</p>\n\t</td>\n\t<td><p>Notification of new latency adjustment. Sinks will use\nthe latency information to adjust their synchronisation.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 56321</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_STEP\"></a>\n\t\tGst.EventType.step\n\t\t</p>\n\t</td>\n\t<td><p>A request for stepping through the media. Sinks will usually\nexecute the step operation.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 58881</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_RECONFIGURE\"></a>\n\t\tGst.EventType.reconfigure\n\t\t</p>\n\t</td>\n\t<td><p>A request for upstream renegotiating caps and reconfiguring.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 61441</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TOC_SELECT\"></a>\n\t\tGst.EventType.toc_select\n\t\t</p>\n\t</td>\n\t<td><p>A request for a new playback position based on TOC\nentry's UID.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 64001</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_SELECT_STREAMS\"></a>\n\t\tGst.EventType.select_streams\n\t\t</p>\n\t</td>\n\t<td><p>A request to select one or more streams (Since 1.10)</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 66561</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_UPSTREAM\"></a>\n\t\tGst.EventType.custom_upstream\n\t\t</p>\n\t</td>\n\t<td><p>Upstream custom event</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 69121</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_DOWNSTREAM\"></a>\n\t\tGst.EventType.custom_downstream\n\t\t</p>\n\t</td>\n\t<td><p>Downstream custom event that travels in the\ndata flow.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 71686</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_DOWNSTREAM_OOB\"></a>\n\t\tGst.EventType.custom_downstream_oob\n\t\t</p>\n\t</td>\n\t<td><p>Custom out-of-band downstream event.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 74242</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_DOWNSTREAM_STICKY\"></a>\n\t\tGst.EventType.custom_downstream_sticky\n\t\t</p>\n\t</td>\n\t<td><p>Custom sticky downstream event.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 76830</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_BOTH\"></a>\n\t\tGst.EventType.custom_both\n\t\t</p>\n\t</td>\n\t<td><p>Custom upstream or downstream event.\nIn-band when travelling downstream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 79367</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_CUSTOM_BOTH_OOB\"></a>\n\t\tGst.EventType.custom_both_oob\n\t\t</p>\n\t</td>\n\t<td><p>Custom upstream or downstream out-of-band event.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 81923</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstEventTypeFlags\">\n\t\t\n<h4 id=\"enum-gsteventtypeflags\">\n\t\tenum Gst.EventTypeFlags\n\t</h4>\n\n\t\t<p><a href=\"gstevent.html#GstEventTypeFlags\">Gst.EventTypeFlags</a> indicate the aspects of the different <a href=\"gstevent.html#GstEventType\">Gst.EventType</a>\nvalues. You can get the type flags of a <a href=\"gstevent.html#GstEventType\">Gst.EventType</a> with the\n<a href=\"gstevent.html#gst_event_type_get_flags\">Gst.event_type_get_flags</a> function.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members1\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TYPE_UPSTREAM\"></a>\n\t\tGst.EventTypeFlags.upstream\n\t\t</p>\n\t</td>\n\t<td><p>Set if the event can travel upstream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TYPE_DOWNSTREAM\"></a>\n\t\tGst.EventTypeFlags.downstream\n\t\t</p>\n\t</td>\n\t<td><p>Set if the event can travel downstream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TYPE_SERIALIZED\"></a>\n\t\tGst.EventTypeFlags.serialized\n\t\t</p>\n\t</td>\n\t<td><p>Set if the event should be serialized with data\nflow.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TYPE_STICKY\"></a>\n\t\tGst.EventTypeFlags.sticky\n\t\t</p>\n\t</td>\n\t<td><p>Set if the event is sticky on the pads.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 8</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_EVENT_TYPE_STICKY_MULTI\"></a>\n\t\tGst.EventTypeFlags.sticky_multi\n\t\t</p>\n\t</td>\n\t<td><p>Multiple sticky events can be on a pad, each\nidentified by the event name.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 16</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstQOSType\">\n\t\t\n<h4 id=\"enum-gstqostype\">\n\t\tenum Gst.QOSType\n\t</h4>\n\n\t\t<p>The different types of QoS events that can be given to the\n<a href=\"gstevent.html#gst_event_new_qos\">Gst.Event.new_qos</a> method.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members2\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_QOS_TYPE_OVERFLOW\"></a>\n\t\tGst.QOSType.overflow\n\t\t</p>\n\t</td>\n\t<td><p>The QoS event type that is produced when upstream\nelements are producing data too quickly and the element can't keep up\nprocessing the data. Upstream should reduce their production rate. This\ntype is also used when buffers arrive early or in time.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_QOS_TYPE_UNDERFLOW\"></a>\n\t\tGst.QOSType.underflow\n\t\t</p>\n\t</td>\n\t<td><p>The QoS event type that is produced when upstream\nelements are producing data too slowly and need to speed up their\nproduction rate.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_QOS_TYPE_THROTTLE\"></a>\n\t\tGst.QOSType.throttle\n\t\t</p>\n\t</td>\n\t<td><p>The QoS event type that is produced when the\napplication enabled throttling to limit the data rate.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.2;\" id=\"GstStreamFlags\">\n\t\t\n<h4 id=\"enum-gststreamflags\">\n\t\tenum Gst.StreamFlags\n\t</h4>\n\n\t\t\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members3\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_FLAG_NONE\"></a>\n\t\tGst.StreamFlags.none\n\t\t</p>\n\t</td>\n\t<td><p>This stream has no special attributes</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_FLAG_SPARSE\"></a>\n\t\tGst.StreamFlags.sparse\n\t\t</p>\n\t</td>\n\t<td><p>This stream is a sparse stream (e.g. a subtitle\nstream), data may flow only in irregular intervals with large gaps in\nbetween.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_FLAG_SELECT\"></a>\n\t\tGst.StreamFlags.select\n\t\t</p>\n\t</td>\n\t<td><p>This stream should be selected by default. This\nflag may be used by demuxers to signal that a stream should be selected\nby default in a playback scenario.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_FLAG_UNSELECT\"></a>\n\t\tGst.StreamFlags.unselect\n\t\t</p>\n\t</td>\n\t<td><p>This stream should not be selected by default.\nThis flag may be used by demuxers to signal that a stream should not\nbe selected by default in a playback scenario, but only if explicitly\nselected by the user (e.g. an audio track for the hard of hearing or\na director's commentary track).</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Constants\">Constants</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_EVENT_TYPE_BOTH\">\n\t\t\n<h4 class=\"constant\" id=\"gstevent_type_both\">\n\tGst.EVENT_TYPE_BOTH\n</h4>\n\n\t\t<p>The same thing as <a href=\"gstevent.html#GST_EVENT_TYPE_UPSTREAM\">Gst.EventTypeFlags.upstream</a> | <a href=\"gstevent.html#GST_EVENT_TYPE_DOWNSTREAM\">Gst.EventTypeFlags.downstream</a>.</p>\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GST_EVENT_NUM_SHIFT\">\n\t\t\n<h4 class=\"constant\" id=\"gstevent_num_shift\">\n\tGst.EVENT_NUM_SHIFT\n</h4>\n\n\t\t\n\n</div>\n\n\n\n    </div>\n\n\n        "});