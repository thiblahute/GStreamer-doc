fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstevent.html#gsteventnew_segment", "fragment": "Gst.Event.new_segment \nCreate a new SEGMENT event for segment. The segment event can only travel downstream synchronized with the buffer flow and contains timing information and playback properties for the buffers that will follow. \nThe segment event marks the range of buffers to be processed. All data not within the segment range is not to be processed. This can be used intelligently by plugins to apply more efficient methods of skipping unneeded data. The valid range is expressed with the start and stop values. \nThe time value of the segment is used in conjunction with the start value to convert the buffer timestamps into the stream time. This is usually done in sinks to report the current stream_time. time represents the stream_time of a buffer carrying a timestamp of start. time cannot be \nstart cannot be stop can be If there is a valid stop given it must be greater or equal the start including when the indicated playback rate is \nThe applied_rate value provides information about any rate adjustment that has already been made to the timestamps and content on the buffers of the stream. rate applied_rate should always equal the rate that has been requested for playback. For example if an element has an input segment with intended playback rate of and applied_rate of it can adjust incoming timestamps and buffer content by half and output a segment event with rate of and applied_rate of \nAfter a segment event the buffer stream time is calculated with \ntime TIMESTAMP buf start ABS rate applied_rate \nsegment \na Gst.Segment \n\nthe new SEGMENT event. \n"});