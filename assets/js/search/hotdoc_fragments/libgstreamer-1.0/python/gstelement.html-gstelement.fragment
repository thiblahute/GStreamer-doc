fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstelement.html#gstelement", "fragment": "GstElement \nGstElement \nGstElement is the abstract base class needed to construct an element that can be used in a GStreamer pipeline. Please refer to the plugin writers guide for more information on creating Gst.Element subclasses. \nThe name of a Gst.Element can be get with gst_element_get_name not introspectable and set with gst_element_set_name not introspectable For speed GST_ELEMENT_NAME not introspectable can be used in the core when using the appropriate locking. Do not use this in plug ins or applications in order to retain ABI compatibility. \nElements can have pads of the type Gst.Pad These pads link to pads on other elements. Gst.Buffer flow between these linked pads. A Gst.Element has a GLib.List of Gst.Pad structures for all their input or sink and output or source pads. Core and plug in writers can add and remove pads with Gst.Element.add_pad and Gst.Element.remove_pad. \nAn existing pad of an element can be retrieved by name with Gst.Element.get_static_pad. A new dynamic pad can be created using Gst.Element.request_pad with a Gst.PadTemplate. An iterator of all pads can be retrieved with Gst.Element.iterate_pads. \nElements can be linked through their pads. If the link is straightforward use the Gst.Element.link convenience function to link two elements or gst_element_link_many not introspectable for more elements in a row. Use Gst.Element.link_filtered to link two elements constrained by a specified set of Gst.Caps. For finer control use Gst.Element.link_pads and Gst.Element.link_pads_filtered to specify the pads to link on each element by name. \nEach element has a state see Gst.State You can get and set the state of an element with Gst.Element.get_state and Gst.Element.set_state. Setting a state triggers a Gst.StateChange. To get a string representation of a Gst.State use Gst.Element.state_get_name. \nYou can get and set a Gst.Clock on an element using Gst.Element.get_clock and Gst.Element.set_clock. Some elements can provide a clock for the pipeline if the Gst.ElementFlags.provide_clock flag is set. With the Gst.Element.provide_clock method one can retrieve the clock provided by such an element. Not all elements require a clock to operate correctly. If the Gst.ElementFlags.require_clock flag is set a clock should be set on the element with Gst.Element.set_clock. \nNote that clock selection and distribution is normally handled by the toplevel Gst.Pipeline so the clock functions are only to be used in very specific situations. \n"});