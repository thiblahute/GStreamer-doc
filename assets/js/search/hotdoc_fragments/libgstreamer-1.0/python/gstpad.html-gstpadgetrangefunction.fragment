fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstpad.html#gstpadgetrangefunction", "fragment": "Gst.PadGetRangeFunction \nThis function will be called on source pads when a peer element request a buffer at the specified offset and length. If this function returns Gst.FlowReturn.ok the result buffer will be stored in buffer. The contents of buffer is invalid for any other return value. \nThis function is installed on a source pad with gst_pad_set_getrange_function not introspectable and can only be called on source pads after they are successfully activated with Gst.Pad.activate_mode with the Gst.PadMode.pull. \noffset and length are always given in byte units. offset must normally be a value between and the length in bytes of the data available on pad. The length duration in bytes can be retrieved with a Gst.QueryType.duration or with a Gst.QueryType.seeking. \nAny offset larger or equal than the length will make the function return Gst.FlowReturn.eos which corresponds to EOS. In this case buffer does not contain a valid buffer. \nThe buffer size of buffer will only be smaller than length when offset is near the end of the stream. In all other cases the size of buffer must be exactly the requested size. \nIt is allowed to call this function with a length and valid offset in which case buffer will contain a sized buffer and the function returns Gst.FlowReturn.ok. \nWhen this function is called with a offset the sequentially next buffer of length length in the stream is returned. \nWhen this function is called with a length a buffer with a default optimal length is returned in buffer. The length might depend on the value of offset. \nParameters \nthe src Gst.Pad to perform the getrange on. \nthe parent of pad. If the Gst.PadFlags.need_parent flag is set parent is guaranteed to be not NULL and remain valid during the execution of this function. \nthe offset of the range \nthe length of the range \na memory location to hold the result buffer cannot be None. \nGst.FlowReturn.ok for success and a valid buffer in buffer. Any other return value leaves buffer undefined. \n"});