fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gsterror.html#GstStreamError", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstStreamError\">\n\t\t<h3 id=\"enum-gststreamerror\">\n\t\tenum Gst.StreamError\n\t</h3>\n\n\t\t<p>Stream errors are for anything related to the stream being processed:\nformat errors, media type errors, ...\nThey're typically used by decoders, demuxers, converters, ...</p>\n\n\n<div class=\"member_details\">\n\t<h4 id=\"members3\">Members</h4>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_FAILED\"></a>\n\t\tGst.StreamError.failed\n\t\t</p>\n\t</td>\n\t<td><p>a general error which doesn't fit in any other\ncategory.  Make sure you add a custom message to the error call.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_TOO_LAZY\"></a>\n\t\tGst.StreamError.too_lazy\n\t\t</p>\n\t</td>\n\t<td><p>do not use this except as a placeholder for\ndeciding where to go while developing code.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_NOT_IMPLEMENTED\"></a>\n\t\tGst.StreamError.not_implemented\n\t\t</p>\n\t</td>\n\t<td><p>use this when you do not want to implement\nthis functionality yet.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 3</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_TYPE_NOT_FOUND\"></a>\n\t\tGst.StreamError.type_not_found\n\t\t</p>\n\t</td>\n\t<td><p>used when the element doesn't know the\nstream's type.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 4</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_WRONG_TYPE\"></a>\n\t\tGst.StreamError.wrong_type\n\t\t</p>\n\t</td>\n\t<td><p>used when the element doesn't handle this type\nof stream.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 5</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_CODEC_NOT_FOUND\"></a>\n\t\tGst.StreamError.codec_not_found\n\t\t</p>\n\t</td>\n\t<td><p>used when there's no codec to handle the\nstream's type.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 6</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_DECODE\"></a>\n\t\tGst.StreamError.decode\n\t\t</p>\n\t</td>\n\t<td><p>used when decoding fails.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 7</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_ENCODE\"></a>\n\t\tGst.StreamError.encode\n\t\t</p>\n\t</td>\n\t<td><p>used when encoding fails.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 8</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_DEMUX\"></a>\n\t\tGst.StreamError.demux\n\t\t</p>\n\t</td>\n\t<td><p>used when demuxing fails.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 9</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_MUX\"></a>\n\t\tGst.StreamError.mux\n\t\t</p>\n\t</td>\n\t<td><p>used when muxing fails.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 10</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_FORMAT\"></a>\n\t\tGst.StreamError.format\n\t\t</p>\n\t</td>\n\t<td><p>used when the stream is of the wrong format\n(for example, wrong caps).</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 11</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_DECRYPT\"></a>\n\t\tGst.StreamError.decrypt\n\t\t</p>\n\t</td>\n\t<td><p>used when the stream is encrypted and can't be\ndecrypted because this is not supported by the element.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 12</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_DECRYPT_NOKEY\"></a>\n\t\tGst.StreamError.decrypt_nokey\n\t\t</p>\n\t</td>\n\t<td><p>used when the stream is encrypted and\ncan't be decrypted because no suitable key is available.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 13</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_STREAM_ERROR_NUM_ERRORS\"></a>\n\t\tGst.StreamError.num_errors\n\t\t</p>\n\t</td>\n\t<td><p>the number of stream error types.</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 14</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n"});