fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstbus.html#page-description", "fragment": "<div id=\"page-description\" data-hotdoc-source=\"gstbus.h\">\n        <h1 id=\"gstbus\">GstBus</h1><p>The <a href=\"gstbus.html#GstBus\">Gst.Bus</a> is an object responsible for delivering <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> packets in\na first-in first-out way from the streaming threads (see <a href=\"gsttask.html#GstTask\">Gst.Task</a>) to the\napplication.</p>\n<p>Since the application typically only wants to deal with delivery of these\nmessages from one thread, the GstBus will marshall the messages between\ndifferent threads. This is important since the actual streaming of media\nis done in another thread than the application.</p>\n<p>The GstBus provides support for <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#GSource\">GLib.Source</a> based notifications. This makes it\npossible to handle the delivery in the glib mainloop.</p>\n<p>The <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#GSource\">GLib.Source</a> callback function <a href=\"gstbus.html#gst_bus_async_signal_func\">Gst.Bus.async_signal_func</a> can be used to\nconvert all bus messages into signal emissions.</p>\n<p>A message is posted on the bus with the <a href=\"gstbus.html#gst_bus_post\">Gst.Bus.post</a> method. With the\n<a href=\"gstbus.html#gst_bus_peek\">Gst.Bus.peek</a> and <a href=\"gstbus.html#gst_bus_pop\">Gst.Bus.pop</a> methods one can look at or retrieve a\npreviously posted message.</p>\n<p>The bus can be polled with the <a href=\"gstbus.html#gst_bus_poll\">Gst.Bus.poll</a> method. This methods blocks\nup to the specified timeout value until one of the specified messages types\nis posted on the bus. The application can then <a href=\"gstbus.html#gst_bus_pop\">Gst.Bus.pop</a> the messages\nfrom the bus to handle them.\nAlternatively the application can register an asynchronous bus function\nusing <a href=\"gstbus.html#gst_bus_add_watch_full\">Gst.Bus.add_watch_full</a> or <a href=\"../c/gstbus.html#gst_bus_add_watch\">gst_bus_add_watch (not introspectable)</a>. This function will\ninstall a <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#GSource\">GLib.Source</a> in the default glib main loop and will deliver messages\na short while after they have been posted. Note that the main loop should\nbe running for the asynchronous callbacks.</p>\n<p>It is also possible to get messages from the bus without any thread\nmarshalling with the <a href=\"gstbus.html#gst_bus_set_sync_handler\">Gst.Bus.set_sync_handler</a> method. This makes it\npossible to react to a message in the same thread that posted the\nmessage on the bus. This should only be used if the application is able\nto deal with messages from different threads.</p>\n<p>Every <a href=\"gstpipeline.html#GstPipeline\">Gst.Pipeline</a> has one bus.</p>\n<p>Note that a <a href=\"gstpipeline.html#GstPipeline\">Gst.Pipeline</a> will set its bus into flushing state when changing\nfrom READY to NULL state.</p>\n\n        \n\n        <h2 class=\"symbols_section\" id=\"GstBus\" data-hotdoc-by-parent=\"true\">GstBus</h2>\n        \n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBus\">\n\t\t\t\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject.Object\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject.Object</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GObject.InitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GObject.InitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"Gst.Object\" href=\"gstobject.html#GstObject\">Gst.Object</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span>Gst.Bus\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>The opaque <a href=\"gstbus.html#GstBus\">Gst.Bus</a> data structure.</p>\n\n</div>\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstBus.object\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstObject\" href=\"gstobject.html#GstObject\">GstObject</a> <em><code>object</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBus.priv\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>GstBusPrivate* <em><code>priv</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBus._gst_reserved\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> <em><code>_gst_reserved</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Functions\">Functions</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_new\">\n\t\t\n<h4 id=\"gstbusnew\">\n\t<span><code>Gst.Bus.new</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.new ():\n    #python wrapper for 'gst_bus_new'</pre>\n\n<p>Creates a new <a href=\"gstbus.html#GstBus\">Gst.Bus</a> instance.</p>\n\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new <a href=\"gstbus.html#GstBus\">Gst.Bus</a> instance</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_add_signal_watch\">\n\t\t\n<h4 id=\"gstbusadd_signal_watch\">\n\t<span><code>Gst.Bus.add_signal_watch</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.add_signal_watch (self):\n    #python wrapper for 'gst_bus_add_signal_watch'</pre>\n\n<p>Adds a bus signal watch to the default main context with the default priority\n(%G_PRIORITY_DEFAULT). It is also possible to use a non-default\nmain context set up using <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#g-main-context-push-thread-default\">GLib.MainContext.push_thread_default</a> (before\none had to create a bus watch source and attach it to the desired main\ncontext 'manually').</p>\n<p>After calling this statement, the bus will emit the \"message\" signal for each\nmessage posted on the bus.</p>\n<p>This function may be called multiple times. To clean up, the caller is\nresponsible for calling <a href=\"gstbus.html#gst_bus_remove_signal_watch\">Gst.Bus.remove_signal_watch</a> as many times as this\nfunction is called.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> on which you want to receive the \"message\" signal</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_add_signal_watch_full\">\n\t\t\n<h4 id=\"gstbusadd_signal_watch_full\">\n\t<span><code>Gst.Bus.add_signal_watch_full</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.add_signal_watch_full (self, priority):\n    #python wrapper for 'gst_bus_add_signal_watch_full'</pre>\n\n<p>Adds a bus signal watch to the default main context with the given <em>priority</em>\n(e.g. <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS\">GLib.PRIORITY_DEFAULT</a>). It is also possible to use a non-default main\ncontext set up using <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#g-main-context-push-thread-default\">GLib.MainContext.push_thread_default</a>\n(before one had to create a bus watch source and attach it to the desired\nmain context 'manually').</p>\n<p>After calling this statement, the bus will emit the \"message\" signal for each\nmessage posted on the bus when the main loop is running.</p>\n<p>This function may be called multiple times. To clean up, the caller is\nresponsible for calling <a href=\"gstbus.html#gst_bus_remove_signal_watch\">Gst.Bus.remove_signal_watch</a> as many times as this\nfunction is called.</p>\n<p>There can only be a single bus watch per bus, you must remove any signal\nwatch before you can set another type of watch.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters1\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> on which you want to receive the \"message\" signal</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>priority:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The priority of the watch.</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_add_watch_full\">\n\t\t\n<h4 id=\"gstbusadd_watch_full\">\n\t<span><code>Gst.Bus.add_watch_full</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.add_watch_full (self, priority, func, user_data, notify):\n    #python wrapper for 'gst_bus_add_watch_full'</pre>\n\n<p>Adds a bus watch to the default main context with the given <em>priority</em> (e.g.\n<a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#G-PRIORITY-DEFAULT:CAPS\">GLib.PRIORITY_DEFAULT</a>). It is also possible to use a non-default  main\ncontext set up using <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#g-main-context-push-thread-default\">GLib.MainContext.push_thread_default</a> (before\none had to create a bus watch source and attach it to the desired main\ncontext 'manually').</p>\n<p>This function is used to receive asynchronous messages in the main loop.\nThere can only be a single bus watch per bus, you must remove it before you\ncan set a new one.</p>\n<p>The bus watch will only work if a GLib main loop is being run.</p>\n<p>When <em>func</em> is called, the message belongs to the caller; if you want to\nkeep a copy of it, call <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstMessage.html#gst-message-ref\">gst_message_ref (not introspectable)</a> before leaving <em>func</em>.</p>\n<p>The watch can be removed using <a href=\"gstbus.html#gst_bus_remove_watch\">Gst.Bus.remove_watch</a> or by returning <a href=\"https://docs.python.org/2/library/constants.html#False\">False</a>\nfrom <em>func</em>. If the watch was added to the default main context it is also\npossible to remove the watch using <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#g-source-remove\">GLib.source_remove</a>.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters2\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to create the watch for.</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>priority:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The priority of the watch.</p>\n</td>\n<td>\n<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>func:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>A function to call when a message is received.</p>\n</td>\n<td>\n<a title=\"Gst.BusFunc\" href=\"gstbus.html#GstBusFunc\">Gst.BusFunc</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>user data passed to <em>func</em>.</p>\n</td>\n<td>\n<a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>notify:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the function to call when the source is removed.</p>\n</td>\n<td>\n<a title=\"GLib.DestroyNotify\" href=\"https://developer.gnome.org/glib/unstable/glib-Datasets.html#GDestroyNotify\">GLib.DestroyNotify</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns1\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>The event source id or 0 if <em>bus</em> already got an event source.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"int\" href=\"https://docs.python.org/2/library/functions.html#int\">int</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_async_signal_func\">\n\t\t\n<h4 id=\"gstbusasync_signal_func\">\n\t<span><code>Gst.Bus.async_signal_func</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.async_signal_func (self, message, data):\n    #python wrapper for 'gst_bus_async_signal_func'</pre>\n\n<p>A helper <a href=\"gstbus.html#GstBusFunc\">Gst.BusFunc</a> that can be used to convert all asynchronous messages\ninto signals.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters3\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a></p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> received</p>\n</td>\n<td>\n<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>user data</p>\n</td>\n<td>\n<a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns2\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a></p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_create_watch\">\n\t\t\n<h4 id=\"gstbuscreate_watch\">\n\t<span><code>Gst.Bus.create_watch</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.create_watch (self):\n    #python wrapper for 'gst_bus_create_watch'</pre>\n\n<p>Create watch for this bus. The GSource will be dispatched whenever\na message is on the bus. After the GSource is dispatched, the\nmessage is popped off the bus and unreffed.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters4\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to create the watch for</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns3\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#GSource\">GLib.Source</a> that can be added to a mainloop.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"GLib.Source\" href=\"https://developer.gnome.org/glib/unstable/glib-The-Main-Event-Loop.html#GSource\">GLib.Source</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_disable_sync_message_emission\">\n\t\t\n<h4 id=\"gstbusdisable_sync_message_emission\">\n\t<span><code>Gst.Bus.disable_sync_message_emission</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.disable_sync_message_emission (self):\n    #python wrapper for 'gst_bus_disable_sync_message_emission'</pre>\n\n<p>Instructs GStreamer to stop emitting the \"sync-message\" signal for this bus.\nSee <a href=\"gstbus.html#gst_bus_enable_sync_message_emission\">Gst.Bus.enable_sync_message_emission</a> for more information.</p>\n<p>In the event that multiple pieces of code have called\n<a href=\"gstbus.html#gst_bus_enable_sync_message_emission\">Gst.Bus.enable_sync_message_emission</a>, the sync-message emissions will only\nbe stopped after all calls to <a href=\"gstbus.html#gst_bus_enable_sync_message_emission\">Gst.Bus.enable_sync_message_emission</a> were\n\"cancelled\" by calling this function. In this way the semantics are exactly\nthe same as <a href=\"gstobject.html#gst_object_ref\">Gst.Object.ref</a> that which calls enable should also call\ndisable.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters5\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> on which you previously called\n<a href=\"gstbus.html#gst_bus_enable_sync_message_emission\">Gst.Bus.enable_sync_message_emission</a></p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_enable_sync_message_emission\">\n\t\t\n<h4 id=\"gstbusenable_sync_message_emission\">\n\t<span><code>Gst.Bus.enable_sync_message_emission</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.enable_sync_message_emission (self):\n    #python wrapper for 'gst_bus_enable_sync_message_emission'</pre>\n\n<p>Instructs GStreamer to emit the \"sync-message\" signal after running the bus's\nsync handler. This function is here so that code can ensure that they can\nsynchronously receive messages without having to affect what the bin's sync\nhandler is.</p>\n<p>This function may be called multiple times. To clean up, the caller is\nresponsible for calling <a href=\"gstbus.html#gst_bus_disable_sync_message_emission\">Gst.Bus.disable_sync_message_emission</a> as many times\nas this function is called.</p>\n<p>While this function looks similar to <a href=\"gstbus.html#gst_bus_add_signal_watch\">Gst.Bus.add_signal_watch</a>, it is not\nexactly the same -- this function enables <emphasis>synchronous</emphasis> emission of\nsignals when messages arrive; <a href=\"gstbus.html#gst_bus_add_signal_watch\">Gst.Bus.add_signal_watch</a> adds an idle callback\nto pop messages off the bus <emphasis>asynchronously</emphasis>. The sync-message signal\ncomes from the thread of whatever object posted the message; the \"message\"\nsignal is marshalled to the main thread via the main loop.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters6\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> on which you want to receive the \"sync-message\" signal</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_have_pending\">\n\t\t\n<h4 id=\"gstbushave_pending\">\n\t<span><code>Gst.Bus.have_pending</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.have_pending (self):\n    #python wrapper for 'gst_bus_have_pending'</pre>\n\n<p>Check if there are pending messages on the bus that\nshould be handled.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters7\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to check</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns4\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a> if there are messages on the bus to be handled, <a href=\"https://docs.python.org/2/library/constants.html#False\">False</a>\notherwise.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_peek\">\n\t\t\n<h4 id=\"gstbuspeek\">\n\t<span><code>Gst.Bus.peek</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.peek (self):\n    #python wrapper for 'gst_bus_peek'</pre>\n\n<p>Peek the message on the top of the bus' queue. The message will remain\non the bus' message queue. A reference is returned, and needs to be unreffed\nby the caller.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters8\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a></p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns5\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> that is on the\nbus, or <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> if the bus is empty.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_poll\">\n\t\t\n<h4 id=\"gstbuspoll\">\n\t<span><code>Gst.Bus.poll</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.poll (self, events, timeout):\n    #python wrapper for 'gst_bus_poll'</pre>\n\n<p>Poll the bus for messages. Will block while waiting for messages to come.\nYou can specify a maximum time to poll with the <em>timeout</em> parameter. If\n<em>timeout</em> is negative, this function will block indefinitely.</p>\n<p>All messages not in <em>events</em> will be popped off the bus and will be ignored.\nIt is not possible to use message enums beyond <a href=\"gstmessage.html#GST_MESSAGE_EXTENDED\">Gst.MessageType.extended</a> in the\n<em>events</em> mask</p>\n<p>Because poll is implemented using the \"message\" signal enabled by\n<a href=\"gstbus.html#gst_bus_add_signal_watch\">Gst.Bus.add_signal_watch</a>, calling <a href=\"gstbus.html#gst_bus_poll\">Gst.Bus.poll</a> will cause the \"message\"\nsignal to be emitted for every message that poll sees. Thus a \"message\"\nsignal handler will see the same messages that this function sees -- neither\nwill steal messages from the other.</p>\n<p>This function will run a main loop from the default main context when\npolling.</p>\n<p>You should never use this function, since it is pure evil. This is\nespecially true for GUI applications based on Gtk+ or Qt, but also for any\nother non-trivial application that uses the GLib main loop. As this function\nruns a GLib main loop, any callback attached to the default GLib main\ncontext may be invoked. This could be timeouts, GUI events, I/O events etc.;\neven if <a href=\"gstbus.html#gst_bus_poll\">Gst.Bus.poll</a> is called with a 0 timeout. Any of these callbacks\nmay do things you do not expect, e.g. destroy the main application window or\nsome other resource; change other application state; display a dialog and\nrun another main loop until the user clicks it away. In short, using this\nfunction may add a lot of complexity to your code through unexpected\nre-entrancy and unexpected changes to your application's state.</p>\n<p>For 0 timeouts use <a href=\"gstbus.html#gst_bus_pop_filtered\">Gst.Bus.pop_filtered</a> instead of this function; for\nother short timeouts use <a href=\"gstbus.html#gst_bus_timed_pop_filtered\">Gst.Bus.timed_pop_filtered</a>; everything else is\nbetter handled by setting up an asynchronous bus watch and doing things\nfrom there.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters9\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a></p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>events:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a mask of <a href=\"gstmessage.html#GstMessageType\">Gst.MessageType</a>, representing the set of message types to\npoll for (note special handling of extended message types below)</p>\n</td>\n<td>\n<a title=\"Gst.MessageType\" href=\"gstmessage.html#GstMessageType\">Gst.MessageType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timeout:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the poll timeout, as a <a href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>, or <a href=\"gstclock.html#GST_CLOCK_TIME_NONE\">Gst.CLOCK_TIME_NONE</a> to poll\nindefinitely.</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns6\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the message that was received,\nor <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> if the poll timed out. The message is taken from the\nbus and needs to be unreffed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstMessage.html#gst-message-unref\">gst_message_unref (not introspectable)</a> after\nusage.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_pop\">\n\t\t\n<h4 id=\"gstbuspop\">\n\t<span><code>Gst.Bus.pop</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.pop (self):\n    #python wrapper for 'gst_bus_pop'</pre>\n\n<p>Get a message from the bus.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters10\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to pop</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns7\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> that is on the\nbus, or <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> if the bus is empty. The message is taken from\nthe bus and needs to be unreffed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstMessage.html#gst-message-unref\">gst_message_unref (not introspectable)</a> after\nusage.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_pop_filtered\">\n\t\t\n<h4 id=\"gstbuspop_filtered\">\n\t<span><code>Gst.Bus.pop_filtered</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.pop_filtered (self, types):\n    #python wrapper for 'gst_bus_pop_filtered'</pre>\n\n<p>Get a message matching <em>type</em> from the bus.  Will discard all messages on\nthe bus that do not match <em>type</em> and that have been posted before the first\nmessage that does match <em>type</em>.  If there is no message matching <em>type</em> on\nthe bus, all messages will be discarded. It is not possible to use message\nenums beyond <a href=\"gstmessage.html#GST_MESSAGE_EXTENDED\">Gst.MessageType.extended</a> in the <em>events</em> mask.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters11\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to pop</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>types:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>message types to take into account</p>\n</td>\n<td>\n<a title=\"Gst.MessageType\" href=\"gstmessage.html#GstMessageType\">Gst.MessageType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns8\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the next <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> matching\n<em>type</em> that is on the bus, or <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> if the bus is empty or there\nis no message matching <em>type</em>. The message is taken from the bus\nand needs to be unreffed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstMessage.html#gst-message-unref\">gst_message_unref (not introspectable)</a> after usage.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_post\">\n\t\t\n<h4 id=\"gstbuspost\">\n\t<span><code>Gst.Bus.post</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.post (self, message):\n    #python wrapper for 'gst_bus_post'</pre>\n\n<p>Post a message on the given bus. Ownership of the message\nis taken by the bus.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters12\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to post on</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> to post</p>\n</td>\n<td>\n<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns9\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a> if the message could be posted, <a href=\"https://docs.python.org/2/library/constants.html#False\">False</a> if the bus is flushing.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_remove_signal_watch\">\n\t\t\n<h4 id=\"gstbusremove_signal_watch\">\n\t<span><code>Gst.Bus.remove_signal_watch</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.remove_signal_watch (self):\n    #python wrapper for 'gst_bus_remove_signal_watch'</pre>\n\n<p>Removes a signal watch previously added with <a href=\"gstbus.html#gst_bus_add_signal_watch\">Gst.Bus.add_signal_watch</a>.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters13\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> you previously added a signal watch to</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"since:1.6;\" id=\"gst_bus_remove_watch\">\n\t\t\n<h4 id=\"gstbusremove_watch\">\n\t<span><code>Gst.Bus.remove_watch</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.remove_watch (self):\n    #python wrapper for 'gst_bus_remove_watch'</pre>\n\n<p>Removes an installed bus watch from <em>bus</em>.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters14\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to remove the watch from.</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns10\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#True\">True</a> on success or <a href=\"https://docs.python.org/2/library/constants.html#False\">False</a> if <em>bus</em> has no event source.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\t<p>\n\tSince\t\t\t: 1.6\n\t\t</p>\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_set_flushing\">\n\t\t\n<h4 id=\"gstbusset_flushing\">\n\t<span><code>Gst.Bus.set_flushing</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.set_flushing (self, flushing):\n    #python wrapper for 'gst_bus_set_flushing'</pre>\n\n<p>If <em>flushing</em>, flush out and unref any messages queued in the bus. Releases\nreferences to the message origin objects. Will flush future messages until\n<a href=\"gstbus.html#gst_bus_set_flushing\">Gst.Bus.set_flushing</a> sets <em>flushing</em> to <a href=\"https://docs.python.org/2/library/constants.html#False\">False</a>.</p>\n<p>MT safe.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters15\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a></p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>flushing:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>whether or not to flush the bus</p>\n</td>\n<td>\n<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_set_sync_handler\">\n\t\t\n<h4 id=\"gstbusset_sync_handler\">\n\t<span><code>Gst.Bus.set_sync_handler</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.set_sync_handler (self, func, user_data, notify):\n    #python wrapper for 'gst_bus_set_sync_handler'</pre>\n\n<p>Sets the synchronous handler on the bus. The function will be called\nevery time a new message is posted on the bus. Note that the function\nwill be called in the same thread context as the posting object. This\nfunction is usually only called by the creator of the bus. Applications\nshould handle messages asynchronously using the gst_bus watch and poll\nfunctions.</p>\n<p>You cannot replace an existing sync_handler. You can pass <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> to this\nfunction, which will clear the existing handler.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters16\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to install the handler on</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>func:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The handler function to install</p>\n</td>\n<td>\n<a title=\"Gst.BusSyncHandler\" href=\"gstbus.html#GstBusSyncHandler\">Gst.BusSyncHandler</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>User data that will be sent to the handler function.</p>\n</td>\n<td>\n<a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>notify:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>called when <em>user_data</em> becomes unused</p>\n</td>\n<td>\n<a title=\"GLib.DestroyNotify\" href=\"https://developer.gnome.org/glib/unstable/glib-Datasets.html#GDestroyNotify\">GLib.DestroyNotify</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_sync_signal_handler\">\n\t\t\n<h4 id=\"gstbussync_signal_handler\">\n\t<span><code>Gst.Bus.sync_signal_handler</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.sync_signal_handler (self, message, data):\n    #python wrapper for 'gst_bus_sync_signal_handler'</pre>\n\n<p>A helper GstBusSyncHandler that can be used to convert all synchronous\nmessages into signals.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters17\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a></p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> received</p>\n</td>\n<td>\n<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>user data</p>\n</td>\n<td>\n<a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns11\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>GST_BUS_PASS</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.BusSyncReply\" href=\"gstbus.html#GstBusSyncReply\">Gst.BusSyncReply</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_timed_pop\">\n\t\t\n<h4 id=\"gstbustimed_pop\">\n\t<span><code>Gst.Bus.timed_pop</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.timed_pop (self, timeout):\n    #python wrapper for 'gst_bus_timed_pop'</pre>\n\n<p>Get a message from the bus, waiting up to the specified timeout.</p>\n<p>If <em>timeout</em> is 0, this function behaves like <a href=\"gstbus.html#gst_bus_pop\">Gst.Bus.pop</a>. If <em>timeout</em> is\n<a href=\"gstclock.html#GST_CLOCK_TIME_NONE\">Gst.CLOCK_TIME_NONE</a>, this function will block forever until a message was\nposted on the bus.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters18\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to pop</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timeout:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a timeout</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns12\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>the <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> that is on the\nbus after the specified timeout or <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> if the bus is empty\nafter the timeout expired.  The message is taken from the bus\nand needs to be unreffed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstMessage.html#gst-message-unref\">gst_message_unref (not introspectable)</a> after usage.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_bus_timed_pop_filtered\">\n\t\t\n<h4 id=\"gstbustimed_pop_filtered\">\n\t<span><code>Gst.Bus.timed_pop_filtered</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef Gst.Bus.timed_pop_filtered (self, timeout, types):\n    #python wrapper for 'gst_bus_timed_pop_filtered'</pre>\n\n<p>Get a message from the bus whose type matches the message type mask <em>types</em>,\nwaiting up to the specified timeout (and discarding any messages that do not\nmatch the mask provided).</p>\n<p>If <em>timeout</em> is 0, this function behaves like <a href=\"gstbus.html#gst_bus_pop_filtered\">Gst.Bus.pop_filtered</a>. If\n<em>timeout</em> is <a href=\"gstclock.html#GST_CLOCK_TIME_NONE\">Gst.CLOCK_TIME_NONE</a>, this function will block forever until a\nmatching message was posted on the bus.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters19\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gstbus.html#GstBus\">Gst.Bus</a> to pop from</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timeout:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a timeout in nanoseconds, or GST_CLOCK_TIME_NONE to wait forever</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>types:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>message types to take into account, GST_MESSAGE_ANY for any type</p>\n</td>\n<td>\n<a title=\"Gst.MessageType\" href=\"gstmessage.html#GstMessageType\">Gst.MessageType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns13\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a <a href=\"gstmessage.html#GstMessage\">Gst.Message</a> matching the\nfilter in <em>types</em>, or <a href=\"https://docs.python.org/2/library/constants.html#None\">None</a> if no matching message was found on\nthe bus until the timeout expired. The message is taken from\nthe bus and needs to be unreffed with <a href=\"http://gstreamer.freedesktop.org/data/doc/gstreamer/head/gstreamer/html/GstMessage.html#gst-message-unref\">gst_message_unref (not introspectable)</a> after\nusage.</p>\n<p>MT safe.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Signals\">Signals</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBus::message\">\n\t\t\n<h4 id=\"message\">\n\t<span><code>message</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef message_callback (message):\n    #python callback for the 'message' signal</pre>\n\n<p>A message has been posted on the bus. This signal is emitted from a\nGSource added to the mainloop. this signal will only be emitted when\nthere is a mainloop running.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters20\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the message that has been posted asynchronously</p>\n</td>\n<td>\nMessage (not introspectable)\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\t<a href=\"https://developer.gnome.org/gobject/unstable/gobject-Signals.html#G-SIGNAL-RUN-LAST:CAPS\">Run Last</a>\n\t\t\t\n</p>\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBus::sync-message\">\n\t\t\n<h4 id=\"syncmessage\">\n\t<span><code>sync-message</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef sync_message_callback (message):\n    #python callback for the 'sync-message' signal</pre>\n\n<p>A message has been posted on the bus. This signal is emitted from the\nthread that posted the message so one has to be careful with locking.</p>\n<p>This signal will not be emitted by default, you have to call\n<a href=\"gstbus.html#gst_bus_enable_sync_message_emission\">Gst.Bus.enable_sync_message_emission</a> before.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters21\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the message that has been posted synchronously</p>\n</td>\n<td>\nMessage (not introspectable)\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\t<a href=\"https://developer.gnome.org/gobject/unstable/gobject-Signals.html#G-SIGNAL-RUN-LAST:CAPS\">Run Last</a>\n\t\t\t\n</p>\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Properties\">Properties</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBus:enable-async\">\n\t\t\n<h4 class=\"method\" id=\"enableasync\">\n\t<span><code>enable-async</code></span>\n</h4>\n\n\t\t<pre class=\"property_signature\">\n\u201cenable-async\u201d <span class=\"type\"><a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a></span>\n</pre>\n\n\n\n<p>\n\tFlags :\t\n\t\n\t\t\n\t\t\t\tRead\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tWrite\n\t\t\t\n\t\t\t\t/\t\t\n\t\t\t\tConstruct Only\n\t\t\t\n</p>\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Structures\">Structures</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBusClass\">\n\t\t<h3 id=\"gstbusclass\">\n\tGst.BusClass\n</h3>\n\n\t\t\n<div class=\"member_details\">\n\t\n\t<h5 id=\"attributes\">Attributes</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr id=\"GstBusClass.parent_class\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"GstObjectClass\" href=\"gstobject.html#GstObjectClass\">GstObjectClass</a> <em><code>parent_class</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t<tr id=\"GstBusClass._gst_reserved\">\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code><a title=\"gpointer\" href=\"https://developer.gnome.org/glib/unstable/glib-Basic-Types.html#gpointer\">gpointer</a> <em><code>_gst_reserved</code></em>:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Virtual_Methods\">Virtual Methods</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBus:::message\">\n\t\t\n<h4 id=\"message1\">\n\t<span><code>message</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef message (bus, message):\n    #python implementation of the 'message' virtual method</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters22\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBus:::sync_message\">\n\t\t\n<h4 id=\"sync_message\">\n\t<span><code>sync_message</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\ndef sync_message (bus, message):\n    #python implementation of the 'sync_message' virtual method</pre>\n\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters23\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n        <h2 class=\"symbols_section\" id=\"Other_symbols\" data-hotdoc-by-parent=\"true\">Other symbols</h2>\n        \n\n            <h3 class=\"symbol_section\" id=\"Enumerations\">Enumerations</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBusFlags\">\n\t\t\n<h4 id=\"enum-gstbusflags\">\n\t\tenum Gst.BusFlags\n\t</h4>\n\n\t\t<p>The standard flags that a bus may have.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members1\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUS_FLUSHING\"></a>\n\t\tGst.BusFlags.flushing\n\t\t</p>\n\t</td>\n\t<td><p>The bus is currently dropping all messages</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 16</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUS_FLAG_LAST\"></a>\n\t\tGst.BusFlags.flag_last\n\t\t</p>\n\t</td>\n\t<td><p>offset to define more flags</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 32</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBusSyncReply\">\n\t\t\n<h4 id=\"enum-gstbussyncreply\">\n\t\tenum Gst.BusSyncReply\n\t</h4>\n\n\t\t<p>The result values for a GstBusSyncHandler.</p>\n\n\n<div class=\"member_details\">\n\t\n\t<h5 id=\"members2\">Members</h5>\n\t<div class=\"member_container\">\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUS_DROP\"></a>\n\t\tGst.BusSyncReply.drop\n\t\t</p>\n\t</td>\n\t<td><p>drop the message</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 0</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUS_PASS\"></a>\n\t\tGst.BusSyncReply.pass\n\t\t</p>\n\t</td>\n\t<td><p>pass the message to the async queue</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 1</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t<a id=\"GST_BUS_ASYNC\"></a>\n\t\tGst.BusSyncReply.async\n\t\t</p>\n\t</td>\n\t<td><p>pass message to async queue, continue if message is handled</p>\n</td>\n\t<td>\n\t\t<span class=\"value\">Value: 2</span>\n\t</td>\n</tr>\n\n\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n</div>\n\n\n</div>\n\n\n            <h3 class=\"symbol_section\" id=\"Callbacks\">Callbacks</h3>\n                    \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBusFunc\">\n\t\t\n<h4 id=\"gstbusfunc\">\n\t<span><code>Gst.BusFunc</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n(*Gst.BusFunc) (<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>,\n                <a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>,\n                <a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>)</pre>\n\n<p>Specifies the type of function passed to <a href=\"../c/gstbus.html#gst_bus_add_watch\">gst_bus_add_watch (not introspectable)</a> or\n<a href=\"gstbus.html#gst_bus_add_watch_full\">Gst.Bus.add_watch_full</a>, which is called from the mainloop when a message\nis available on the bus.</p>\n<p>The message passed to the function will be unreffed after execution of this\nfunction so it should not be freed in the function.</p>\n<p>Note that this function is used as a GSourceFunc which means that returning\n<a href=\"https://docs.python.org/2/library/constants.html#False\">False</a> will remove the GSource from the mainloop.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters24\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"gstbus.html#GstBus\">Gst.Bus</a> that sent the message</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"gstmessage.html#GstMessage\">Gst.Message</a></p>\n</td>\n<td>\n<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>user data that has been given, when registering the handler</p>\n</td>\n<td>\n<a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns14\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"https://docs.python.org/2/library/constants.html#False\">False</a> if the event source should be removed.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"bool\" href=\"https://docs.python.org/2.7/library/functions.html#bool\">bool</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n            \n\n<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBusSyncHandler\">\n\t\t\n<h4 id=\"gstbussynchandler\">\n\t<span><code>Gst.BusSyncHandler</code></span>\n</h4>\n\n\t\t\n\n<pre class=\"prototype\">\n<a title=\"Gst.BusSyncReply\" href=\"gstbus.html#GstBusSyncReply\">Gst.BusSyncReply</a>\n(*Gst.BusSyncHandler) (<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>,\n                       <a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>,\n                       <a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>)</pre>\n\n<p>Handler will be invoked synchronously, when a new message has been injected\ninto the bus. This function is mostly used internally. Only one sync handler\ncan be attached to a given bus.</p>\n<p>If the handler returns GST_BUS_DROP, it should unref the message, else the\nmessage should not be unreffed by the sync handler.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters25\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>bus:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"gstbus.html#GstBus\">Gst.Bus</a> that sent the message</p>\n</td>\n<td>\n<a title=\"Gst.Bus\" href=\"gstbus.html#GstBus\">Gst.Bus</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>message:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the <a href=\"gstmessage.html#GstMessage\">Gst.Message</a></p>\n</td>\n<td>\n<a title=\"Gst.Message\" href=\"gstmessage.html#GstMessage\">Gst.Message</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>user_data:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>user data that has been given, when registering the handler</p>\n</td>\n<td>\n<a title=\"object\" href=\"https://docs.python.org/2.7/library/functions.html#object\">object</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\n\t\t\t<h5 id=\"returns15\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p><a href=\"gstbus.html#GstBusSyncReply\">Gst.BusSyncReply</a> stating what to do with the message</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.BusSyncReply\" href=\"gstbus.html#GstBusSyncReply\">Gst.BusSyncReply</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n    </div>\n\n\n        "});