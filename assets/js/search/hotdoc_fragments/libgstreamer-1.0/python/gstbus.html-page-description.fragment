fragment_downloaded_cb({"url": "libgstreamer-1.0/python/gstbus.html#page-description", "fragment": "The opaque Gst.Bus data structure. \nInstructs GStreamer to stop emitting the sync message signal for this bus. See Gst.Bus.enable_sync_message_emission for more information. \nIn the event that multiple pieces of code have called Gst.Bus.enable_sync_message_emission the sync message emissions will only be stopped after all calls to Gst.Bus.enable_sync_message_emission were cancelled by calling this function. In this way the semantics are exactly the same as Gst.Object.ref that which calls enable should also call disable. \nMT safe. \nInstructs GStreamer to emit the sync message signal after running the bus s sync handler. This function is here so that code can ensure that they can synchronously receive messages without having to affect what the bin s sync handler is. \nThis function may be called multiple times. To clean up the caller is responsible for calling Gst.Bus.disable_sync_message_emission as many times as this function is called. \nWhile this function looks similar to Gst.Bus.add_signal_watch it is not exactly the same this function enables synchronous emission of signals when messages arrive Gst.Bus.add_signal_watch adds an idle callback to pop messages off the bus asynchronously. The sync message signal comes from the thread of whatever object posted the message the message signal is marshalled to the main thread via the main loop. \nMT safe. \n"});