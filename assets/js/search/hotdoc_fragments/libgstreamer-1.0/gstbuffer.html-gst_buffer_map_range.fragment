fragment_downloaded_cb({"url": "libgstreamer-1.0/gstbuffer.html#gst_buffer_map_range", "fragment": "gst_buffer_map_range \nGst.Buffer.map_range \nGst.Buffer.prototype.map_range \nThis function fills info with the GstMapInfo of length merged memory blocks starting at idx in buffer. When length is all memory blocks starting from idx are merged and mapped. \nflags describe the desired access of the memory. When flags is GST_MAP_WRITE buffer should be writable as returned from gst_buffer_is_writable \nWhen buffer is writable but the memory isn t a writable copy will automatically be created and returned. The readonly copy of the buffer memory will then also be replaced with this writable copy. \nThe memory in info should be unmapped with gst_buffer_unmap after usage. \nParameters \na GstBuffer. \nan index \na length \ninfo about the mapping \nflags for the mapping \nTRUE if the map succeeded and info contains valid data. \nThis function fills info with the Gst.MapInfo of length merged memory blocks starting at idx in buffer. When length is all memory blocks starting from idx are merged and mapped. \nflags describe the desired access of the memory. When flags is Gst.MapFlags.WRITE buffer should be writable as returned from gst_buffer_is_writable not introspectable \nWhen buffer is writable but the memory isn t a writable copy will automatically be created and returned. The readonly copy of the buffer memory will then also be replaced with this writable copy. \nThe memory in info should be unmapped with Gst.Buffer.unmap after usage. \nParameters \na Gst.Buffer. \nan index \na length \nflags for the mapping \nReturns a tuple made of \nTrue if the map succeeded and info contains valid data. \nTrue if the map succeeded and info contains valid data. \nThis function fills info with the Gst.MapInfo of length merged memory blocks starting at idx in buffer. When length is all memory blocks starting from idx are merged and mapped. \nflags describe the desired access of the memory. When flags is Gst.MapFlags.WRITE buffer should be writable as returned from gst_buffer_is_writable not introspectable \nWhen buffer is writable but the memory isn t a writable copy will automatically be created and returned. The readonly copy of the buffer memory will then also be replaced with this writable copy. \nThe memory in info should be unmapped with Gst.Buffer.prototype.unmap after usage. \nParameters \na Gst.Buffer. \nan index \na length \nflags for the mapping \nReturns a tuple made of \ntrue if the map succeeded and info contains valid data. \ntrue if the map succeeded and info contains valid data. \n"});