fragment_downloaded_cb({"url": "libgstreamer-1.0/gstelementfactory.html#gst_element_factory_list_filter", "fragment": "gst_element_factory_list_filter \nGst.ElementFactory.list_filter \nGst.ElementFactory.prototype.list_filter \nFilter out all the elementfactories in list that can handle caps in the given direction. \nIf subsetonly is TRUE then only the elements whose pads templates are a complete superset of caps will be returned. Else any element whose pad templates caps can intersect with caps will be returned. \nParameters \na GList of GstElementFactory to filter \na GstCaps \na GstPadDirection to filter on \nwhether to filter on caps subsets or not. \na GList of GstElementFactory elements that match the given requisites. Use gst_plugin_feature_list_free after usage. \nFilter out all the elementfactories in list that can handle caps in the given direction. \nIf subsetonly is True then only the elements whose pads templates are a complete superset of caps will be returned. Else any element whose pad templates caps can intersect with caps will be returned. \nParameters \na GLib.List of Gst.ElementFactory to filter \na Gst.Caps \na Gst.PadDirection to filter on \nwhether to filter on caps subsets or not. \na GLib.List of Gst.ElementFactory elements that match the given requisites. Use Gst.PluginFeature.list_free after usage. \nFilter out all the elementfactories in list that can handle caps in the given direction. \nIf subsetonly is true then only the elements whose pads templates are a complete superset of caps will be returned. Else any element whose pad templates caps can intersect with caps will be returned. \nParameters \na GLib.List of Gst.ElementFactory to filter \na Gst.Caps \na Gst.PadDirection to filter on \nwhether to filter on caps subsets or not. \na GLib.List of Gst.ElementFactory elements that match the given requisites. Use Gst.PluginFeature.prototype.list_free after usage. \n"});