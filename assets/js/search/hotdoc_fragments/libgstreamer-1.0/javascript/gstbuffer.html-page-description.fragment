fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gstbuffer.html#page-description", "fragment": "Tries to create a newly allocated buffer with data of the given size and extra parameters from allocator. If the requested amount of memory can t be allocated null will be returned. The allocated buffer memory is not cleared. \nWhen allocator is null the default memory allocator will be used. \nNote that when size the buffer will not have memory associated with it. \nMT safe. \nAllocate a new buffer that wraps the given memory. data must point to maxsize of memory the wrapped buffer will have the region from offset and size visible. \nWhen the buffer is destroyed notify will be called with user_data. \nThe prefix padding must be filled with if flags contains Gst.MemoryFlags.prototype.zero_prefixed and Gst.MemoryFlags.prototype.zero_padded respectively. \nAdd a Gst.ParentBufferMeta to buffer that holds a reference on ref until the buffer is freed. \nAttaches protection metadata to a Gst.Buffer. \nAppend the memory block mem to buffer. This function takes ownership of mem and thus doesn t increase its refcount. \nThis function is identical to Gst.Buffer.prototype.insert_memory with an index of See Gst.Buffer.prototype.insert_memory for more details. \nAppend size bytes at offset from buf2 to buf1. The result buffer will contain a concatenation of the memory of buf1 and the requested region of buf2. \nCall func with user_data for each meta in buffer. \nfunc can modify the passed meta pointer or its contents. The return value of func define if this function returns or if the remaining metadata items in the buffer should be skipped. \nGet all the memory block in buffer. The memory blocks will be merged into one large Gst.Memory. \nGet length memory blocks in buffer starting at idx. The memory blocks will be merged into one large Gst.Memory. \nIf length is all memory starting from idx is merged. \nGet the total size of length memory blocks stating from idx in buffer. \nWhen not null offset will contain the offset of the data in the memory block in buffer at idx and maxsize will contain the sum of the size and offset and the amount of extra padding on the memory block at idx length offset and maxsize can be used to resize the buffer memory blocks with Gst.Buffer.prototype.resize_range. \nInsert the memory block mem to buffer at idx. This function takes ownership of mem and thus doesn t increase its refcount. \nOnly Gst.prototype.buffer_get_max_memory can be added to a buffer. If more memory is added existing memory blocks will automatically be merged to make room for the new memory. \nCheck if all memory blocks in buffer are writable. \nNote that this function does not check if buffer is writable use gst_buffer_is_writable not introspectable to check that if needed. \nCheck if length memory blocks in buffer starting from idx are writable. \nlength can be to check all the memory blocks after idx. \nNote that this function does not check if buffer is writable use gst_buffer_is_writable not introspectable to check that if needed. \nPrepend the memory block mem to buffer. This function takes ownership of mem and thus doesn t increase its refcount. \nThis function is identical to Gst.Buffer.prototype.insert_memory with an index of See Gst.Buffer.prototype.insert_memory for more details. \nRemove all the memory blocks in buffer. \nRemove the memory block in b at index i. \nRemove length memory blocks in buffer starting from idx. \nlength can be in which case all memory starting from idx is removed. \nReplaces all memory in buffer with mem. \nReplaces the memory block at index idx in buffer with mem. \nReplaces length memory blocks in buffer starting at idx with mem. \nIf length is all memory starting from idx will be removed and replaced with mem. \nbuffer should be writable. \nSet the total size of the length memory blocks starting at idx in buffer \nGet the maximum amount of memory blocks that a buffer can hold. This is a compile time constant that can be queried with the function. \nWhen more memory blocks are added existing memory blocks will be merged together to make room for the new block. \nGet the global Gst.MetaInfo describing the Gst.ParentBufferMeta meta. \n"});