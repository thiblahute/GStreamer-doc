fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gst.html#page-description", "fragment": "Initializing the gstreamer library \nInitializing own parameters when initializing gstreamer \nIt s allowed to pass two null pointers to Gst.prototype.init in case you don t want to pass the command line args to GStreamer. \nYou can also use GOption to initialize your own parameters as shown in the next code fragment \nUse Gst.prototype.version to query the library version at runtime or use the GST_VERSION_ macros to find the version at compile time. Optionally Gst.prototype.version_string returns a printable string. \nThe Gst.prototype.deinit call is used to clean up all internal resources used by GStreamer. It is mostly used in unit tests to check for leaks. \nSome functions in the GStreamer core might install a custom SIGSEGV handler to better catch and report errors to the application. Currently this feature is enabled by default when loading plugins. \nApplications might want to disable this behaviour with the Gst.prototype.segtrap_set_enabled function. This is typically done if the application wants to install its own handler without GStreamer interfering. \nApplications might want to disable enable the SIGSEGV handling of the GStreamer core. See Gst.prototype.segtrap_is_enabled for more information. \n"});