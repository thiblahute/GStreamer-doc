fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gststructure.html#gst_structure_to_string", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_structure_to_string\">\n\t\t<h3 id=\"gststructureprototypeto_string\">\n\t<span><code>Gst.Structure.prototype.to_string</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\nfunction Gst.Structure.prototype.to_string(): {\n    // javascript wrapper for 'gst_structure_to_string'\n}</pre>\n\n<p>Converts <em>structure</em> to a human-readable string representation.</p>\n<p>For debugging purposes its easier to do something like this:</p>\n<pre><code class=\"language-[&lt;!--\"> GST_LOG (\"structure is %\" GST_PTR_FORMAT, structure);\n</code></pre>\n<p>This prints the structure in human readable form.</p>\n<p>The current implementation of serialization will lead to unexpected results\nwhen there are nested <a href=\"gstcaps.html#GstCaps\">Gst.Caps</a> / <a href=\"gststructure.html#GstStructure\">Gst.Structure</a> deeper than one level.</p>\n<p>Free-function: g_free</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters56\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>structure:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>a <a href=\"gststructure.html#GstStructure\">Gst.Structure</a></p>\n</td>\n<td>\n<a title=\"Gst.Structure\" href=\"gststructure.html#GstStructure\">Gst.Structure</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h4 id=\"returns30\">Returns:</h4>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a pointer to string allocated by <a href=\"https://developer.gnome.org/glib/unstable/glib-Memory-Allocation.html#g-malloc\">GLib.prototype.malloc</a>.\n<a href=\"https://developer.gnome.org/glib/unstable/glib-Memory-Allocation.html#g-free\">GLib.prototype.free</a> after usage.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"String\" href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String\">String</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n"});