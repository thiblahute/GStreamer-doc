fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gstpadtemplate.html#gstpadtemplate", "fragment": "GstPadTemplate \nPadtemplates describe the possible media types a pad or an elementfactory can handle. This allows for both inspection of handled types before loading the element plugin as well as identifying pads on elements that are not yet created request or sometimes pads \nPad and PadTemplates have Gst.Caps attached to it to describe the media type they are capable of dealing with. Gst.PadTemplate.prototype.get_caps or GST_PAD_TEMPLATE_CAPS not introspectable are used to get the caps of a padtemplate. It s not possible to modify the caps of a padtemplate after creation. \nPadTemplates have a Gst.PadPresence property which identifies the lifetime of the pad and that can be retrieved with GST_PAD_TEMPLATE_PRESENCE not introspectable Also the direction of the pad can be retrieved from the Gst.PadTemplate with GST_PAD_TEMPLATE_DIRECTION not introspectable \nThe GST_PAD_TEMPLATE_NAME_TEMPLATE is important for GST_PAD_REQUEST pads because it has to be used as the name in the Gst.Element.prototype.get_request_pad call to instantiate a pad from this template. \nPadtemplates can be created with Gst.PadTemplate.prototype.new or with gst_static_pad_template_get which creates a Gst.PadTemplate from a Gst.StaticPadTemplate that can be filled with the convenient GST_STATIC_PAD_TEMPLATE not introspectable macro. \nA padtemplate can be used to create a pad see Gst.Pad.prototype.new_from_template or gst_pad_new_from_static_template or to add to an element class see gst_element_class_add_static_pad_template \nThe following code example shows the code to create a pad from a padtemplate. \n\nThe following example shows you how to add the padtemplate to an element class this is usually done in the class_init of the class \n\n"});