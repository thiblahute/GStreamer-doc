fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gsterror-h.html#gsterror", "fragment": "GstError \nGStreamer elements can throw non fatal warnings and fatal errors. Higher level elements and applications can programmatically filter the ones they are interested in or can recover from and have a default handler handle the rest of them. \nThe rest of this section will use the term error to mean both non fatal warnings and fatal errors they are treated similarly. \nErrors from elements are the combination of a GError and a debug string. The GError contains \nElements do not have the context required to decide what to do with errors. As such they should only inform about errors and stop their processing. In short an element doesn t know what it is being used for. \nIt is the application or compound element using the given element that has more context about the use of the element. Errors can be received by listening to the Gst.Bus of the element pipeline for Gst.Message objects with the type Gst.MessageType.prototype.error or Gst.MessageType.prototype.warning. The thrown errors should be inspected and filtered if appropriate. \nAn application is expected to by default present the user with a dialog box or an equivalent showing the error message. The dialog should also allow a way to get at the additional debug information so the user can provide bug reporting information. \nA compound element is expected to forward errors by default higher up the hierarchy this is done by default in the same way as for other types of Gst.Message. \nWhen applications or compound elements trigger errors that they can recover from they can filter out these errors and take appropriate action. For example an application that gets an error from xvimagesink that indicates all XVideo ports are taken the application can attempt to use another sink instead. \nElements throw errors using the GST_ELEMENT_ERROR not introspectable convenience macro \n"});