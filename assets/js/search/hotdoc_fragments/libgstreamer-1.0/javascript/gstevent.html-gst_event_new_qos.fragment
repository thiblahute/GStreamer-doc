fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gstevent.html#gst_event_new_qos", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"gst_event_new_qos\">\n\t\t\n<h4 id=\"gsteventprototypenew_qos\">\n\t<span><code>Gst.Event.prototype.new_qos</code></span>\n</h4>\n\n\t\t<pre class=\"programlisting\">\nfunction Gst.Event.prototype.new_qos(type: <a title=\"Gst.QOSType\" href=\"gstevent.html#GstQOSType\">Gst.QOSType</a>, proportion: <a title=\"Number\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/Number\">Number</a>, diff: <a title=\"Gst.ClockTimeDiff\" href=\"gstclock.html#GstClockTimeDiff\">Gst.ClockTimeDiff</a>, timestamp: <a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>): {\n    // javascript wrapper for 'gst_event_new_qos'\n}</pre>\n\n<p>Allocate a new qos event with the given values.\nThe QOS event is generated in an element that wants an upstream\nelement to either reduce or increase its rate because of\nhigh/low CPU load or other resource usage such as network performance or\nthrottling. Typically sinks generate these events for each buffer\nthey receive.</p>\n<p><em>type</em> indicates the reason for the QoS event. <a href=\"gstevent.html#GST_QOS_TYPE_OVERFLOW\">Gst.QOSType.prototype.overflow</a> is\nused when a buffer arrived in time or when the sink cannot keep up with\nthe upstream datarate. <a href=\"gstevent.html#GST_QOS_TYPE_UNDERFLOW\">Gst.QOSType.prototype.underflow</a> is when the sink is not\nreceiving buffers fast enough and thus has to drop late buffers.\n<a href=\"gstevent.html#GST_QOS_TYPE_THROTTLE\">Gst.QOSType.prototype.throttle</a> is used when the datarate is artificially limited\nby the application, for example to reduce power consumption.</p>\n<p><em>proportion</em> indicates the real-time performance of the streaming in the\nelement that generated the QoS event (usually the sink). The value is\ngenerally computed based on more long term statistics about the streams\ntimestamps compared to the clock.\nA value &lt; 1.0 indicates that the upstream element is producing data faster\nthan real-time. A value &gt; 1.0 indicates that the upstream element is not\nproducing data fast enough. 1.0 is the ideal <em>proportion</em> value. The\nproportion value can safely be used to lower or increase the quality of\nthe element.</p>\n<p><em>diff</em> is the difference against the clock in running time of the last\nbuffer that caused the element to generate the QOS event. A negative value\nmeans that the buffer with <em>timestamp</em> arrived in time. A positive value\nindicates how late the buffer with <em>timestamp</em> was. When throttling is\nenabled, <em>diff</em> will be set to the requested throttling interval.</p>\n<p><em>timestamp</em> is the timestamp of the last buffer that cause the element\nto generate the QOS event. It is expressed in running time and thus an ever\nincreasing value.</p>\n<p>The upstream element can use the <em>diff</em> and <em>timestamp</em> values to decide\nwhether to process more buffers. For positive <em>diff</em>, all buffers with\ntimestamp &lt;= <em>timestamp</em> + <em>diff</em> will certainly arrive late in the sink\nas well. A (negative) <em>diff</em> value so that <em>timestamp</em> + <em>diff</em> would yield a\nresult smaller than 0 is not allowed.</p>\n<p>The application can use general event probes to intercept the QoS\nevent and implement custom application specific QoS handling.</p>\n\n\n\t<div class=\"parameter_container\">\n\t\t<h5 id=\"parameters8\">Parameters</h5>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>type:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the QoS type</p>\n</td>\n<td>\n<a title=\"Gst.QOSType\" href=\"gstevent.html#GstQOSType\">Gst.QOSType</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>proportion:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>the proportion of the qos message</p>\n</td>\n<td>\n<a title=\"Number\" href=\"https://developer.mozilla.org/en-US/docs/Glossary/Number\">Number</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>diff:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The time difference of the last Clock sync</p>\n</td>\n<td>\n<a title=\"Gst.ClockTimeDiff\" href=\"gstclock.html#GstClockTimeDiff\">Gst.ClockTimeDiff</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>timestamp:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td><p>The timestamp of the buffer</p>\n</td>\n<td>\n<a title=\"Gst.ClockTime\" href=\"gstclock.html#GstClockTime\">Gst.ClockTime</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\t<div class=\"multi_return_value_container\">\n\t\t\t<h5 id=\"returns10\">Returns:</h5>\n\t\t<table>\n\t\t<colgroup>\n\t\t\t<col>\n\t\t\t<col>\n\t\t\t<col>\n\t\t</colgroup>\n\t\t<tbody>\n\t\t\t\t\t\t<tr>\n\t<td>\n\t\t<p>\n\t\t\t\t</p>\n\t</td>\n\t<td>\n\t\t<p>a new QOS event.</p>\n\n\t</td>\n\t<td>\n\t\t<a title=\"Gst.Event\" href=\"gstevent.html#GstEvent\">Gst.Event</a>\n\t</td>\n\t</tr>\n\n\t\t\t\t\t</tbody>\n\t</table>\n</div>\n\n\n\n\n</div>\n\n\n\n"});