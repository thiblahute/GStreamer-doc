fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gstbufferpool.html#GstBufferPool:::reset_buffer", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"GstBufferPool:::reset_buffer\">\n\t\t<h3 id=\"reset_buffer\">\n\t<span><code>reset_buffer</code></span>\n</h3>\n\n\t\t<pre class=\"programlisting\">\nfunction reset_buffer(pool: <a title=\"Gst.BufferPool\" href=\"gstbufferpool.html#GstBufferPool\">Gst.BufferPool</a>, buffer: <a title=\"Gst.Buffer\" href=\"gstbuffer.html#GstBuffer\">Gst.Buffer</a>): {\n    // javascript implementation of the 'reset_buffer' virtual method\n}</pre>\n\n<p>reset the buffer to its state when it was freshly allocated.\nThe default implementation will clear the flags, timestamps and\nwill remove the metadata without the <a href=\"gstmeta.html#GST_META_FLAG_POOLED\">Gst.MetaFlags.prototype.pooled</a> flag (even\nthe metadata with <a href=\"gstmeta.html#GST_META_FLAG_LOCKED\">Gst.MetaFlags.prototype.locked</a>). If the\n<a href=\"gstbuffer.html#GST_BUFFER_FLAG_TAG_MEMORY\">Gst.BufferFlags.prototype.tag_memory</a> was set, this function can also try to\nrestore the memory and clear the <a href=\"gstbuffer.html#GST_BUFFER_FLAG_TAG_MEMORY\">Gst.BufferFlags.prototype.tag_memory</a> again.</p>\n\n\t<div class=\"parameter_container\">\n\t\t<h4 id=\"parameters25\">Parameters</h4>\n\t\t<table>\n\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>pool:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.BufferPool\" href=\"gstbufferpool.html#GstBufferPool\">Gst.BufferPool</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t<td>\n\t\t<p>\n\t\t<i><em><code>buffer:</code></em></i>\n\t\t</p>\n\t</td>\n\t\t<td></td>\n<td>\n<a title=\"Gst.Buffer\" href=\"gstbuffer.html#GstBuffer\">Gst.Buffer</a>\n</td>\n</tr>\n\n\t\t\t\t\t\t\t</tbody>\n\t\t</table>\n\t</div>\n\n\n\n\n</div>\n\n\n\n"});