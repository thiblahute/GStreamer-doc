fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gstinfo.html#gstinfo", "fragment": "GstInfo \nGStreamer s debugging subsystem is an easy way to get information about what the application is doing. It is not meant for programming errors. Use GLib methods g_warning and friends for that. \nThe debugging subsystem works only after GStreamer has been initialized \nThe debugging subsystem is used to log informational messages while the application runs. Each messages has some properties attached to it. Among these properties are the debugging category the severity called level here and an optional GObject.Object it belongs to. Each of these messages is sent to all registered debugging handlers which then handle the messages. GStreamer attaches a default handler on startup which outputs requested messages to stderr. \nMessages are output by using shortcut macros like GST_DEBUG not introspectable GST_CAT_ERROR_OBJECT not introspectable or similar. These all expand to calling gst_debug_log not introspectable with the right parameters. The only thing a developer will probably want to do is define his own categories. This is easily done with lines. At the top of your code declare the variables and set the default category. \nAfter that you only need to initialize the category. \nInitialization must be done before the category is used first. Plugins do this in their plugin_init function libraries and applications should do that during their initialization. \nThe whole debugging subsystem can be disabled at build time with passing the disable gst debug switch to configure. If this is done every function macro and even structs described in this file evaluate to default values or nothing at all. So don t take addresses of these functions or use other tricks. If you must do that for some reason there is still an option. If the debugging subsystem was compiled out GST_DISABLE_GST_DEBUG not introspectable is defined in lt gst gst.h gt so you can check that before doing your trick. Disabling the debugging subsystem will give you a slight read unnoticeable speed increase and will reduce the size of your compiled code. The GStreamer library itself becomes around smaller. \nPlease note that there are naming conventions for the names of debugging categories. These are explained at Gst.prototype.DEBUG_CATEGORY_INIT. \n"});