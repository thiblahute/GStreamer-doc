fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gstobject.html#page-description", "fragment": "GStreamer base object class. \nChecks to see if there is any object named name in list. This function does not do any locking of any kind. You might want to protect the provided list with the lock of the owner of the list. This function will lock each Gst.Object in the list to compare the name so be careful when passing a list with a locked object. \nA default deep_notify signal callback for an object. The user data should contain a pointer to an array of strings that should be excluded from the notify. The default handler will print the new value of the property using g_print. \nMT safe. This function grabs and releases object s LOCK for getting its path string. \nAttach the Gst.ControlBinding to the object. If there already was a Gst.ControlBinding for this property it will be replaced. \nThe object will take ownership of the binding. \nA default error function that uses g_printerr not introspectable to display the error message and the optional debug sting.. \nThe default handler will simply print the error string using g_print. \nGets the corresponding Gst.ControlBinding for the property. This should be unreferenced again after use. \nObtain the control rate for this object. Audio processing Gst.Element objects will use this rate to sub divide their processing loop and call Gst.Object.prototype.sync_values inbetween. The length of the processing segment should be up to control rate nanoseconds. \nIf the object is not under property control this will return Gst.CLOCK_TIME_NONE. This allows the element to avoid the sub dividing. \nThe control rate is not expected to change if the element is in Gst.State.prototype.paused or Gst.State.prototype.playing. \nGets a number of GObject.Value for the given controlled property starting at the requested time. The array values need to hold enough space for n_values of GObject.Value. \nThis function is useful if one wants to e.g. draw a graph of the control curve or apply a control curve sample by sample. \nGenerates a string describing the path of object in the object hierarchy. Only useful or used for debugging. \nFree function g_free \nGets a number of values for the given controlled property starting at the requested time. The array values need to hold enough space for n_values of the same type as the objects property s type. \nThis function is useful if one wants to e.g. draw a graph of the control curve or apply a control curve sample by sample. \nThe values are unboxed and ready to be used. The similar function Gst.Object.prototype.get_g_value_array returns the array as GObject.Value and is better suites for bindings. \nCheck if the object has active controlled properties. \nCheck if object has an ancestor ancestor somewhere up in the hierarchy. One can e.g. check if a Gst.Element is inside a Gst.Pipeline. \nCheck if object has an ancestor ancestor somewhere up in the hierarchy. One can e.g. check if a Gst.Element is inside a Gst.Pipeline. \nCheck if parent is the parent of object. E.g. a Gst.Element can check if it owns a given Gst.Pad. \nRemoves the corresponding Gst.ControlBinding. If it was the last ref of the binding it will be disposed. \nThis function is used to disable the control bindings on a property for some time i.e. Gst.Object.prototype.sync_values will do nothing for the property. \nThis function is used to disable all controlled properties of the object for some time i.e. Gst.Object.prototype.sync_values will do nothing. \nChange the control rate for this object. Audio processing Gst.Element objects will use this rate to sub divide their processing loop and call Gst.Object.prototype.sync_values inbetween. The length of the processing segment should be up to control rate nanoseconds. \nThe control rate should not change if the element is in Gst.State.prototype.paused or Gst.State.prototype.playing. \nReturns a suggestion for timestamps where buffers should be split to get best controller results. \ngpointer _gst_reserved \n"});