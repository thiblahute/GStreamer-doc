fragment_downloaded_cb({"url": "libgstreamer-1.0/javascript/gststructure.html#page-description", "fragment": "Creates a new empty Gst.Structure with the given name. \nSee Gst.Structure.prototype.set_name for constraints on the name parameter. \nFree function gst_structure_free \nCreates a Gst.Structure from a string representation. If end is not null a pointer to the place inside the given string where parsing ended will be returned. \nThe current implementation of serialization will lead to unexpected results when there are nested Gst.Caps Gst.Structure deeper than one level. \nFree function gst_structure_free \nCreates a new empty Gst.Structure with the given name as a GQuark. \nFree function gst_structure_free \nTries intersecting struct1 and struct2 and reports whether the result would not be empty. \nCalls the provided function once for each field in the Gst.Structure. In contrast to Gst.Structure.prototype.foreach the function may modify the fields. In contrast to Gst.Structure.prototype.map_in_place the field is removed from the structure if false is returned from the function. The structure must be mutable. \nFixates a Gst.Structure by changing the given field with its fixated value. \nFixates a Gst.Structure by changing the given field_name field to the given target boolean if that field is not fixed yet. \nFixates a Gst.Structure by changing the given field to the nearest double to target that is a subset of the existing field. \nFixates a Gst.Structure by changing the given field to the nearest fraction to target_numerator target_denominator that is a subset of the existing field. \nFixates a Gst.Structure by changing the given field to the nearest integer to target that is a subset of the existing field. \nFixates a Gst.Structure by changing the given field_name field to the given target string if that field is not fixed yet. \nThis is useful in language bindings where unknown GObject.Value types are not supported. This function will convert the GST_TYPE_ARRAY not introspectable and GST_TYPE_LIST not introspectable into a newly allocated GObject.ValueArray and return it through array. Be aware that this is slower then getting the GObject.Value directly. \nSets the boolean pointed to by value corresponding to the value of the given field. Caller is responsible for making sure the field exists and has the correct type. \nSets the clock time pointed to by value corresponding to the clock time of the given field. Caller is responsible for making sure the field exists and has the correct type. \nSets the datetime pointed to by value corresponding to the datetime of the given field. Caller is responsible for making sure the field exists and has the correct type. \nOn success value will point to a reference of the datetime which should be unreffed with Gst.DateTime.prototype.unref when no longer needed note this is inconsistent with e.g. Gst.Structure.prototype.get_string which doesn t return a copy of the string \nSets the double pointed to by value corresponding to the value of the given field. Caller is responsible for making sure the field exists and has the correct type. \nFinds the field with the given name and returns the type of the value it contains. If the field is not found G_TYPE_INVALID is returned. \nRead the GstFlagSet flags and mask out of the structure into the provided pointers. \nSets the integers pointed to by value_numerator and value_denominator corresponding to the value of the given field. Caller is responsible for making sure the field exists and has the correct type. \nSets the Number pointed to by value corresponding to the value of the given field. Caller is responsible for making sure the field exists and has the correct type. \nGet the name of structure as a GQuark. \nFinds the field corresponding to fieldname and returns the string contained in the field s value. Caller is responsible for making sure the field exists and has the correct type. \nThe string should not be modified and remains valid until the next call to a gst_structure_ function with the given structure. \nSets the Number pointed to by value corresponding to the value of the given field. Caller is responsible for making sure the field exists and has the correct type. \nGet the value of the field with name fieldname. \nCheck if structure contains a field named fieldname. \nCheck if structure contains a field named fieldname and with GType type. \nGet the value of the field with GQuark field. \nCheck if structure contains a field named field. \nCheck if structure contains a field named field and with GType type. \nSets the field with the given GQuark field to value. If the field does not exist it is created. If the field exists the previous value is replaced and freed. \nSets the field with the given GQuark field to value. If the field does not exist it is created. If the field exists the previous value is replaced and freed. \nIntersects struct1 and struct2 and returns the intersection. \nChecks if subset is a subset of superset i.e. has the same structure name and for all fields that are existing in superset subset has a value that is a subset of the value in superset. \nCalls the provided function once for each field in the Gst.Structure. In contrast to Gst.Structure.prototype.foreach the function may modify but not delete the fields. The structure must be mutable. \nGet the name of the given field number counting from onwards. \nRemoves all fields in a GstStructure. \nRemoves the field with the given name. If the field with the given name does not exist the structure is unchanged. \nThis is useful in language bindings where unknown GValue types are not supported. This function will convert a array to GST_TYPE_ARRAY not introspectable and set the field specified by fieldname. Be aware that this is slower then using GST_TYPE_ARRAY not introspectable in a GObject.Value directly. \nSince \nSets the parent_refcount field of Gst.Structure. This field is used to determine whether a structure is mutable or not. This function should only be called by code implementing parent objects of Gst.Structure as described in the MT Refcounting section of the design documents. \nSets the field with the given name field to value. If the field does not exist it is created. If the field exists the previous value is replaced and freed. \nSets the field with the given name field to value. If the field does not exist it is created. If the field exists the previous value is replaced and freed. The function will take ownership of value. \nConverts structure to a human readable string representation. \nFor debugging purposes its easier to do something like this \nThis prints the structure in human readable form. \nThe current implementation of serialization will lead to unexpected results when there are nested Gst.Caps Gst.Structure deeper than one level. \nFree function g_free \nCreates a Gst.Structure from a string representation. If end is not null a pointer to the place inside the given string where parsing ended will be returned. \nFree function gst_structure_free \n"});