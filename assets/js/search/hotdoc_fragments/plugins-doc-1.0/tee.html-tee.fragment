fragment_downloaded_cb({"url": "plugins-doc-1.0/tee.html#tee", "fragment": "<div class=\"base_symbol_container\" data-hotdoc-tags=\"\" id=\"tee\">\n\t\t<h3 id=\"tee2\">\n\ttee\n</h3>\n\n\t\t<div class=\"hierarchy_container\">\n\t<div class=\"hierarchy_details\">\n<pre>\n<a title=\"GObject\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GObject-struct\">GObject</a>\n    <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GInitiallyUnowned\" href=\"https://developer.gnome.org/gobject/unstable/gobject-The-Base-Object-Type.html#GInitiallyUnowned\">GInitiallyUnowned</a>\n        <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstObject\" href=\"../libgstreamer-doc-1.0/c/gstobject.html#GstObject\">GstObject</a>\n            <span class=\"lineart\">\u2570\u2500\u2500</span><a title=\"GstElement\" href=\"../libgstreamer-doc-1.0/c/gstelement.html#GstElement\">GstElement</a>\n                <span class=\"lineart\">\u2570\u2500\u2500</span>tee\n</pre>\n\n</div>\n\n</div>\n\n<div class=\"class_details\">\n\t<p>Split data to multiple pads. Branching the data flow is useful when e.g.\ncapturing a video where the video is shown on the screen and also encoded and\nwritten to a file. Another example is playing music and hooking up a\nvisualisation module.</p>\n<p>One needs to use separate queue elements (or a multiqueue) in each branch to\nprovide separate threads for each branch. Otherwise a blocked dataflow in one\nbranch would stall the other branches.</p>\n<h2 id=\"example-launch-line1\">Example launch line</h2>\n<pre><code>gst-launch-1.0 filesrc location=song.ogg ! decodebin ! tee name=t ! queue ! audioconvert ! audioresample ! autoaudiosink t. ! queue ! audioconvert ! goom ! videoconvert ! autovideosink\n</code></pre>\n<p>Play song.ogg audio file which must be in the current working directory\nand render visualisations using the goom element (this can be easier done\nusing the playbin element, this is just an example pipeline).</p>\n\n</div>\n\n</div>\n\n\n"});