urls_downloaded_cb({"token": "detect", "urls": ["libgstbase-1.0/javascript/gstbaseparse.html#GstBaseParseClass::detect", "libgstbase-1.0/c/gstbaseparse.html#GstBaseParseClass::detect", "frequently-asked-questions/dependencies.html#what-is-gstreamers-position-on-efforts-such-as-ladspa-or-lv2", "frequently-asked-questions/using.html#how-do-i-use-the-gstreamer-command-line-interface", "frequently-asked-questions/developing.html#how-do-i-develop-against-an-uninstalled-gstreamer-copy", "application-development/basics/helloworld.html#hello-world", "application-development/advanced/autoplugging.html#autoplugging", "application-development/advanced/autoplugging.html#media-stream-type-detection", "application-development/advanced/pipeline-manipulation.html#play-a-region-of-a-media-file", "application-development/highlevel/playback-components.html#decodebin", "tutorials/playback/digital-audio-pass-through.html#inner-workings-of-gstreamer-audio-sinks", "plugin-development/advanced/media-types.html#typefind-functions-and-autoplugging", "design/caps.html#semantics-of-caps-and-their-usage", "design/element-sink.html#state-changes", "design/keyframe-force.html#components", "design/messages.html#message-types", "design/progress.html#progress-reporting", "libgstreamer-1.0/c/gstelement-h.html#GstElement.state_cond", "libgstreamer-1.0/python/gstelement-h.html#GstElement.state_cond", "libgstreamer-1.0/javascript/gstelement-h.html#GstElement.state_cond", "libgstreamer-1.0/c/gsttypefind.html#gsttypefind-page", "libgstreamer-1.0/python/gsttypefind.html#gsttypefind-page", "libgstreamer-1.0/javascript/gsttypefind.html#gsttypefind-page", "libgstreamer-1.0/c/gsttaskpool.html#gst_task_pool_push", "libgstreamer-1.0/python/gsttaskpool.html#gst_task_pool_push", "libgstreamer-1.0/javascript/gsttaskpool.html#gst_task_pool_push", "libgstreamer-1.0/c/gsttask.html#gst_task_join", "libgstreamer-1.0/python/gsttask.html#gst_task_join", "libgstreamer-1.0/javascript/gsttask.html#gst_task_join", "gst-plugins-base-pbutils-1.0/c/descriptions.html#gst_pb_utils_add_codec_description_to_tag_list", "gst-plugins-base-pbutils-1.0/python/descriptions.html#gst_pb_utils_add_codec_description_to_tag_list", "gst-plugins-base-pbutils-1.0/javascript/descriptions.html#gst_pb_utils_add_codec_description_to_tag_list", "gst-plugins-base-tag-1.0/c/tags.html#gst_tag_freeform_string_to_utf8", "gst-plugins-base-tag-1.0/python/tags.html#gst_tag_freeform_string_to_utf8", "gst-plugins-base-tag-1.0/javascript/tags.html#gst_tag_freeform_string_to_utf8", "gst-plugins-base-video-1.0/c/gstvideoutils.html#GST_VIDEO_CODEC_FRAME_IS_SYNC_POINT", "gst-plugins-base-video-1.0/c/gstvideoutils.html#GST_VIDEO_CODEC_FRAME_SET_SYNC_POINT", "gst-plugins-bad-codecparsers-1.0/c/gstmpeg4parser.html#gst_mpeg4_parse", "gst-plugins-bad-codecparsers-1.0/python/gstmpeg4parser.html#gst_mpeg4_parse", "gst-plugins-bad-codecparsers-1.0/javascript/gstmpeg4parser.html#gst_mpeg4_parse", "effectv-1.0/edgetv.html#edgetv-page", "frei0r-1.0/frei0r-filter-cartoon.html#frei0rfiltercartoon-page", "frei0r-1.0/frei0r-filter-facebl0r.html#frei0r-filter-facebl0r:recheck", "frei0r-1.0/frei0r-filter-opencvfacedetect.html#frei0rfilteropencvfacedetect-page", "frei0r-1.0/frei0r-filter-opencvfacedetect.html#frei0r-filter-opencvfacedetect:recheck", "ivtc-1.0/combdetect.html#combdetect-page", "soundtouch-1.0/bpmdetect.html#bpmdetect-page", "videosignal-1.0/simplevideomarkdetect.html#simplevideomarkdetect-page"]});