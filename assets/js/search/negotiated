urls_downloaded_cb({"token": "negotiated", "urls": ["application-development/introduction/basics.html#pads", "application-development/basics/pads.html#capabilities-of-a-pad", "application-development/basics/pads.html#dissecting-capabilities", "application-development/basics/pads.html#using-capabilities-for-metadata", "application-development/advanced/metadata.html#metadata", "application-development/advanced/pipeline-manipulation.html#changing-elements-in-a-pipeline", "tutorials/basic/media-formats-and-pad-capabilities.html#conclusion", "tutorials/basic/debugging-tools.html#getting-pipeline-graphs", "tutorials/basic/handy-elements.html#goal", "tutorials/playback/hardware-accelerated-video-decoding.html#inner-workings-of-hardwareaccelerated-video-decoding-plugins", "tutorials/android/media-player.html#reporting-media-size1", "tutorials/ios/a-basic-media-player.html#reporting-media-size", "plugin-development/advanced/negotiation.html#fixed-negotiation", "plugin-development/advanced/negotiation.html#upstream-caps-renegotiation", "plugin-development/advanced/allocation.html#gst_query_allocation", "design/TODO.html#apiabi", "design/bufferpool.html#negotiation", "design/bufferpool.html#allocation-query", "design/caps.html#semantics-of-caps-and-their-usage", "design/bufferpool.html#videotestsrc-xvimagesink", "design/bufferpool.html#videotestsrc-queue-myvideosink", "design/bufferpool.html#-myvideodecoder-queue-myvideosink", "design/element-transform.html#allocation", "design/meta.html#gstmeta", "design/negotiation.html#events", "libgstreamer-1.0/c/gstquery.html#gst_query_new_allocation", "libgstreamer-1.0/python/gstquery.html#gst_query_new_allocation", "libgstreamer-1.0/javascript/gstquery.html#gst_query_new_allocation", "libgstreamer-1.0/c/gstpad.html#gst_pad_chain", "libgstreamer-1.0/c/gstpad.html#gst_pad_chain_list", "libgstreamer-1.0/python/gstpad.html#gst_pad_chain", "libgstreamer-1.0/python/gstpad.html#gst_pad_chain_list", "libgstreamer-1.0/javascript/gstpad.html#gst_pad_chain", "libgstreamer-1.0/javascript/gstpad.html#gst_pad_chain_list", "libgstreamer-1.0/python/gstpad.html#gst_pad_use_fixed_caps", "libgstreamer-1.0/c/gstpad.html#gst_pad_use_fixed_caps", "libgstreamer-1.0/python/gstpad.html#GST_FLOW_NOT_NEGOTIATED", "libgstreamer-1.0/javascript/gstpad.html#gst_pad_use_fixed_caps", "libgstreamer-1.0/javascript/gstpad.html#GST_FLOW_NOT_NEGOTIATED", "libgstreamer-1.0/c/gstpad.html#GST_FLOW_NOT_NEGOTIATED", "libgstbase-1.0/c/gstbasetransform.html#special-output-buffer-allocations", "libgstbase-1.0/python/gstbasetransform.html#special-output-buffer-allocations", "libgstbase-1.0/javascript/gstbasetransform.html#special-output-buffer-allocations", "libgstbase-1.0/c/gstbasetransform.html#gst_base_transform_update_src_caps", "libgstbase-1.0/python/gstbasetransform.html#gst_base_transform_update_src_caps", "libgstbase-1.0/javascript/gstbasetransform.html#gst_base_transform_update_src_caps", "libgstbase-1.0/python/gstcollectpads.html#GstCollectPadsClipFunction", "libgstbase-1.0/javascript/gstcollectpads.html#GstCollectPadsClipFunction", "libgstbase-1.0/c/gstcollectpads.html#GstCollectPadsClipFunction", "gst-plugins-base-audio-1.0/c/audio-channels.html#GstAudioChannelPosition", "gst-plugins-base-audio-1.0/python/audio-channels.html#GstAudioChannelPosition", "gst-plugins-base-audio-1.0/javascript/audio-channels.html#GstAudioChannelPosition", "gst-plugins-base-audio-1.0/c/gstaudiodecoder.html#gst_audio_decoder_set_needs_format", "gst-plugins-base-audio-1.0/python/gstaudiodecoder.html#gst_audio_decoder_set_needs_format", "gst-plugins-base-audio-1.0/javascript/gstaudiodecoder.html#gst_audio_decoder_set_needs_format", "gst-plugins-base-pbutils-1.0/c/encoding-profile-h.html#gst_encoding_profile_get_allow_dynamic_output", "gst-plugins-base-pbutils-1.0/c/encoding-profile-h.html#gst_encoding_profile_set_allow_dynamic_output", "gst-plugins-base-pbutils-1.0/python/encoding-profile-h.html#gst_encoding_profile_get_allow_dynamic_output", "gst-plugins-base-pbutils-1.0/javascript/encoding-profile-h.html#gst_encoding_profile_get_allow_dynamic_output", "gst-plugins-base-pbutils-1.0/python/encoding-profile-h.html#gst_encoding_profile_set_allow_dynamic_output", "gst-plugins-base-pbutils-1.0/javascript/encoding-profile-h.html#gst_encoding_profile_set_allow_dynamic_output", "gst-plugins-base-video-1.0/c/gstvideodecoder.html#gst_video_decoder_set_needs_format", "gst-plugins-base-video-1.0/python/gstvideodecoder.html#gst_video_decoder_set_needs_format", "gst-plugins-base-video-1.0/javascript/gstvideodecoder.html#gst_video_decoder_set_needs_format", "gst-plugins-bad-gl-1.0/c/gstglcolorconvert.html#gstglcolorconvert-page", "gst-plugins-bad-gl-1.0/python/gstglcolorconvert.html#gstglcolorconvert-page", "gst-plugins-bad-gl-1.0/javascript/gstglcolorconvert.html#gstglcolorconvert-page", "gst-rtsp-server-1.0/c/rtsp-auth.html#gst_rtsp_auth_set_tls_certificate", "gst-rtsp-server-1.0/python/rtsp-auth.html#gst_rtsp_auth_set_tls_certificate", "gst-rtsp-server-1.0/javascript/rtsp-auth.html#gst_rtsp_auth_set_tls_certificate", "playback-1.0/playbin.html#retrieving-tags-and-other-meta-data", "playback-1.0/playbin3.html#retrieving-tags-and-other-meta-data", "video4linux2-1.0/v4l2sink.html#GstV4l2Sink:crop-height", "video4linux2-1.0/v4l2sink.html#GstV4l2Sink:crop-width", "video4linux2-1.0/v4l2sink.html#GstV4l2Sink:overlay-height", "video4linux2-1.0/v4l2sink.html#GstV4l2Sink:overlay-width"]});